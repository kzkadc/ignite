Search.setIndex({"docnames": ["contrib/engines", "contrib/handlers", "contrib/metrics", "defaults", "distributed", "engine", "exceptions", "generated/defaults", "generated/ignite.contrib.handlers.base_logger", "generated/ignite.contrib.handlers.clearml_logger", "generated/ignite.contrib.handlers.mlflow_logger", "generated/ignite.contrib.handlers.neptune_logger", "generated/ignite.contrib.handlers.polyaxon_logger", "generated/ignite.contrib.handlers.tensorboard_logger", "generated/ignite.contrib.handlers.tqdm_logger", "generated/ignite.contrib.handlers.visdom_logger", "generated/ignite.contrib.handlers.wandb_logger", "generated/ignite.contrib.metrics.AveragePrecision", "generated/ignite.contrib.metrics.CohenKappa", "generated/ignite.contrib.metrics.GpuInfo", "generated/ignite.contrib.metrics.PrecisionRecallCurve", "generated/ignite.contrib.metrics.ROC_AUC", "generated/ignite.contrib.metrics.RocCurve", "generated/ignite.contrib.metrics.regression.CanberraMetric", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError", "generated/ignite.contrib.metrics.regression.FractionalBias", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.ManhattanDistance", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError", "generated/ignite.contrib.metrics.regression.MeanError", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError", "generated/ignite.contrib.metrics.regression.R2Score", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance", "generated/ignite.distributed.auto.DistributedProxySampler", "generated/ignite.distributed.auto.auto_dataloader", "generated/ignite.distributed.auto.auto_model", "generated/ignite.distributed.auto.auto_optim", "generated/ignite.distributed.launcher.Parallel", "generated/ignite.engine.create_supervised_evaluator", "generated/ignite.engine.create_supervised_trainer", "generated/ignite.engine.deterministic.DeterministicEngine", "generated/ignite.engine.deterministic.ReproducibleBatchSampler", "generated/ignite.engine.deterministic.keep_random_state", "generated/ignite.engine.deterministic.update_dataloader", "generated/ignite.engine.engine.Engine", "generated/ignite.engine.events.CallableEventWithFilter", "generated/ignite.engine.events.EventEnum", "generated/ignite.engine.events.Events", "generated/ignite.engine.events.EventsList", "generated/ignite.engine.events.RemovableEventHandle", "generated/ignite.engine.events.State", "generated/ignite.engine.supervised_evaluation_step", "generated/ignite.engine.supervised_evaluation_step_amp", "generated/ignite.engine.supervised_training_step", "generated/ignite.engine.supervised_training_step_amp", "generated/ignite.engine.supervised_training_step_apex", "generated/ignite.engine.supervised_training_step_tpu", "generated/ignite.handlers.DiskSaver", "generated/ignite.handlers.TimeLimit", "generated/ignite.handlers.checkpoint.BaseSaveHandler", "generated/ignite.handlers.checkpoint.Checkpoint", "generated/ignite.handlers.checkpoint.ModelCheckpoint", "generated/ignite.handlers.early_stopping.EarlyStopping", "generated/ignite.handlers.ema_handler.EMAHandler", "generated/ignite.handlers.global_step_from_engine", "generated/ignite.handlers.lr_finder.FastaiLRFinder", "generated/ignite.handlers.param_scheduler.BaseParamScheduler", "generated/ignite.handlers.param_scheduler.ConcatScheduler", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler", "generated/ignite.handlers.param_scheduler.CyclicalScheduler", "generated/ignite.handlers.param_scheduler.LRScheduler", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler", "generated/ignite.handlers.param_scheduler.ParamScheduler", "generated/ignite.handlers.param_scheduler.PiecewiseLinear", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler", "generated/ignite.handlers.stores.EpochOutputStore", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan", "generated/ignite.handlers.time_profilers.BasicTimeProfiler", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler", "generated/ignite.handlers.timing.Timer", "generated/ignite.metrics.Accuracy", "generated/ignite.metrics.Average", "generated/ignite.metrics.Bleu", "generated/ignite.metrics.ClassificationReport", "generated/ignite.metrics.CosineSimilarity", "generated/ignite.metrics.DiceCoefficient", "generated/ignite.metrics.EpochMetric", "generated/ignite.metrics.FID", "generated/ignite.metrics.Fbeta", "generated/ignite.metrics.Frequency", "generated/ignite.metrics.GeometricAverage", "generated/ignite.metrics.InceptionScore", "generated/ignite.metrics.IoU", "generated/ignite.metrics.JaccardIndex", "generated/ignite.metrics.Loss", "generated/ignite.metrics.MeanAbsoluteError", "generated/ignite.metrics.MeanPairwiseDistance", "generated/ignite.metrics.MeanSquaredError", "generated/ignite.metrics.MultiLabelConfusionMatrix", "generated/ignite.metrics.PSNR", "generated/ignite.metrics.RootMeanSquaredError", "generated/ignite.metrics.Rouge", "generated/ignite.metrics.RougeL", "generated/ignite.metrics.RougeN", "generated/ignite.metrics.RunningAverage", "generated/ignite.metrics.SSIM", "generated/ignite.metrics.TopKCategoricalAccuracy", "generated/ignite.metrics.VariableAccumulation", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix", "generated/ignite.metrics.mIoU", "generated/ignite.metrics.metric.Metric", "generated/ignite.metrics.metrics_lambda.MetricsLambda", "generated/ignite.metrics.precision.Precision", "generated/ignite.metrics.recall.Recall", "handlers", "index", "metrics", "utils"], "filenames": ["contrib/engines.rst", "contrib/handlers.rst", "contrib/metrics.rst", "defaults.rst", "distributed.rst", "engine.rst", "exceptions.rst", "generated/defaults.rst", "generated/ignite.contrib.handlers.base_logger.rst", "generated/ignite.contrib.handlers.clearml_logger.rst", "generated/ignite.contrib.handlers.mlflow_logger.rst", "generated/ignite.contrib.handlers.neptune_logger.rst", "generated/ignite.contrib.handlers.polyaxon_logger.rst", "generated/ignite.contrib.handlers.tensorboard_logger.rst", "generated/ignite.contrib.handlers.tqdm_logger.rst", "generated/ignite.contrib.handlers.visdom_logger.rst", "generated/ignite.contrib.handlers.wandb_logger.rst", "generated/ignite.contrib.metrics.AveragePrecision.rst", "generated/ignite.contrib.metrics.CohenKappa.rst", "generated/ignite.contrib.metrics.GpuInfo.rst", "generated/ignite.contrib.metrics.PrecisionRecallCurve.rst", "generated/ignite.contrib.metrics.ROC_AUC.rst", "generated/ignite.contrib.metrics.RocCurve.rst", "generated/ignite.contrib.metrics.regression.CanberraMetric.rst", "generated/ignite.contrib.metrics.regression.FractionalAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.FractionalBias.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.ManhattanDistance.rst", "generated/ignite.contrib.metrics.regression.MaximumAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.rst", "generated/ignite.contrib.metrics.regression.MeanError.rst", "generated/ignite.contrib.metrics.regression.MeanNormalizedBias.rst", "generated/ignite.contrib.metrics.regression.MedianAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.MedianAbsolutePercentageError.rst", "generated/ignite.contrib.metrics.regression.MedianRelativeAbsoluteError.rst", "generated/ignite.contrib.metrics.regression.R2Score.rst", "generated/ignite.contrib.metrics.regression.WaveHedgesDistance.rst", "generated/ignite.distributed.auto.DistributedProxySampler.rst", "generated/ignite.distributed.auto.auto_dataloader.rst", "generated/ignite.distributed.auto.auto_model.rst", "generated/ignite.distributed.auto.auto_optim.rst", "generated/ignite.distributed.launcher.Parallel.rst", "generated/ignite.engine.create_supervised_evaluator.rst", "generated/ignite.engine.create_supervised_trainer.rst", "generated/ignite.engine.deterministic.DeterministicEngine.rst", "generated/ignite.engine.deterministic.ReproducibleBatchSampler.rst", "generated/ignite.engine.deterministic.keep_random_state.rst", "generated/ignite.engine.deterministic.update_dataloader.rst", "generated/ignite.engine.engine.Engine.rst", "generated/ignite.engine.events.CallableEventWithFilter.rst", "generated/ignite.engine.events.EventEnum.rst", "generated/ignite.engine.events.Events.rst", "generated/ignite.engine.events.EventsList.rst", "generated/ignite.engine.events.RemovableEventHandle.rst", "generated/ignite.engine.events.State.rst", "generated/ignite.engine.supervised_evaluation_step.rst", "generated/ignite.engine.supervised_evaluation_step_amp.rst", "generated/ignite.engine.supervised_training_step.rst", "generated/ignite.engine.supervised_training_step_amp.rst", "generated/ignite.engine.supervised_training_step_apex.rst", "generated/ignite.engine.supervised_training_step_tpu.rst", "generated/ignite.handlers.DiskSaver.rst", "generated/ignite.handlers.TimeLimit.rst", "generated/ignite.handlers.checkpoint.BaseSaveHandler.rst", "generated/ignite.handlers.checkpoint.Checkpoint.rst", "generated/ignite.handlers.checkpoint.ModelCheckpoint.rst", "generated/ignite.handlers.early_stopping.EarlyStopping.rst", "generated/ignite.handlers.ema_handler.EMAHandler.rst", "generated/ignite.handlers.global_step_from_engine.rst", "generated/ignite.handlers.lr_finder.FastaiLRFinder.rst", "generated/ignite.handlers.param_scheduler.BaseParamScheduler.rst", "generated/ignite.handlers.param_scheduler.ConcatScheduler.rst", "generated/ignite.handlers.param_scheduler.CosineAnnealingScheduler.rst", "generated/ignite.handlers.param_scheduler.CyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.LRScheduler.rst", "generated/ignite.handlers.param_scheduler.LinearCyclicalScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamGroupScheduler.rst", "generated/ignite.handlers.param_scheduler.ParamScheduler.rst", "generated/ignite.handlers.param_scheduler.PiecewiseLinear.rst", "generated/ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.rst", "generated/ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup.rst", "generated/ignite.handlers.state_param_scheduler.ExpStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.LambdaStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.MultiStepStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StateParamScheduler.rst", "generated/ignite.handlers.state_param_scheduler.StepStateScheduler.rst", "generated/ignite.handlers.stores.EpochOutputStore.rst", "generated/ignite.handlers.terminate_on_nan.TerminateOnNan.rst", "generated/ignite.handlers.time_profilers.BasicTimeProfiler.rst", "generated/ignite.handlers.time_profilers.HandlersTimeProfiler.rst", "generated/ignite.handlers.timing.Timer.rst", "generated/ignite.metrics.Accuracy.rst", "generated/ignite.metrics.Average.rst", "generated/ignite.metrics.Bleu.rst", "generated/ignite.metrics.ClassificationReport.rst", "generated/ignite.metrics.CosineSimilarity.rst", "generated/ignite.metrics.DiceCoefficient.rst", "generated/ignite.metrics.EpochMetric.rst", "generated/ignite.metrics.FID.rst", "generated/ignite.metrics.Fbeta.rst", "generated/ignite.metrics.Frequency.rst", "generated/ignite.metrics.GeometricAverage.rst", "generated/ignite.metrics.InceptionScore.rst", "generated/ignite.metrics.IoU.rst", "generated/ignite.metrics.JaccardIndex.rst", "generated/ignite.metrics.Loss.rst", "generated/ignite.metrics.MeanAbsoluteError.rst", "generated/ignite.metrics.MeanPairwiseDistance.rst", "generated/ignite.metrics.MeanSquaredError.rst", "generated/ignite.metrics.MultiLabelConfusionMatrix.rst", "generated/ignite.metrics.PSNR.rst", "generated/ignite.metrics.RootMeanSquaredError.rst", "generated/ignite.metrics.Rouge.rst", "generated/ignite.metrics.RougeL.rst", "generated/ignite.metrics.RougeN.rst", "generated/ignite.metrics.RunningAverage.rst", "generated/ignite.metrics.SSIM.rst", "generated/ignite.metrics.TopKCategoricalAccuracy.rst", "generated/ignite.metrics.VariableAccumulation.rst", "generated/ignite.metrics.confusion_matrix.ConfusionMatrix.rst", "generated/ignite.metrics.mIoU.rst", "generated/ignite.metrics.metric.Metric.rst", "generated/ignite.metrics.metrics_lambda.MetricsLambda.rst", "generated/ignite.metrics.precision.Precision.rst", "generated/ignite.metrics.recall.Recall.rst", "handlers.rst", "index.rst", "metrics.rst", "utils.rst"], "titles": ["ignite.contrib.engines", "ignite.contrib.handlers", "ignite.contrib.metrics", "&lt;no title&gt;", "ignite.distributed", "ignite.engine", "ignite.exceptions", "&lt;no title&gt;", "base_logger", "clearml_logger", "mlflow_logger", "neptune_logger", "polyaxon_logger", "tensorboard_logger", "tqdm_logger", "visdom_logger", "wandb_logger", "AveragePrecision", "CohenKappa", "GpuInfo", "PrecisionRecallCurve", "ROC_AUC", "RocCurve", "CanberraMetric", "FractionalAbsoluteError", "FractionalBias", "GeometricMeanAbsoluteError", "GeometricMeanRelativeAbsoluteError", "ManhattanDistance", "MaximumAbsoluteError", "MeanAbsoluteRelativeError", "MeanError", "MeanNormalizedBias", "MedianAbsoluteError", "MedianAbsolutePercentageError", "MedianRelativeAbsoluteError", "R2Score", "WaveHedgesDistance", "DistributedProxySampler", "auto_dataloader", "auto_model", "auto_optim", "Parallel", "create_supervised_evaluator", "create_supervised_trainer", "DeterministicEngine", "ReproducibleBatchSampler", "keep_random_state", "update_dataloader", "Engine", "CallableEventWithFilter", "EventEnum", "Events", "EventsList", "RemovableEventHandle", "State", "supervised_evaluation_step", "supervised_evaluation_step_amp", "supervised_training_step", "supervised_training_step_amp", "supervised_training_step_apex", "supervised_training_step_tpu", "DiskSaver", "TimeLimit", "BaseSaveHandler", "Checkpoint", "ModelCheckpoint", "EarlyStopping", "EMAHandler", "global_step_from_engine", "FastaiLRFinder", "BaseParamScheduler", "ConcatScheduler", "CosineAnnealingScheduler", "CyclicalScheduler", "LRScheduler", "LinearCyclicalScheduler", "ParamGroupScheduler", "ParamScheduler", "PiecewiseLinear", "ReduceLROnPlateauScheduler", "create_lr_scheduler_with_warmup", "ExpStateScheduler", "LambdaStateScheduler", "MultiStepStateScheduler", "PiecewiseLinearStateScheduler", "StateParamScheduler", "StepStateScheduler", "EpochOutputStore", "TerminateOnNan", "BasicTimeProfiler", "HandlersTimeProfiler", "Timer", "Accuracy", "Average", "Bleu", "ClassificationReport", "CosineSimilarity", "DiceCoefficient", "EpochMetric", "FID", "Fbeta", "Frequency", "GeometricAverage", "InceptionScore", "IoU", "JaccardIndex", "Loss", "MeanAbsoluteError", "MeanPairwiseDistance", "MeanSquaredError", "MultiLabelConfusionMatrix", "PSNR", "RootMeanSquaredError", "Rouge", "RougeL", "RougeN", "RunningAverage", "SSIM", "TopKCategoricalAccuracy", "VariableAccumulation", "ConfusionMatrix", "mIoU", "Metric", "MetricsLambda", "Precision", "Recall", "ignite.handlers", "Ignite Your Networks!", "ignite.metrics", "ignite.utils"], "terms": {"contribut": [0, 1, 121], "modul": [0, 1, 4, 5, 8, 9, 11, 13, 15, 16, 40, 42, 43, 44, 56, 57, 58, 59, 60, 61, 65, 68, 100, 104, 128, 129, 130], "tool": [0, 4, 42], "tbptt": 0, "common": [0, 4, 9, 10, 11, 12, 13, 15, 16, 115, 129], "class": [0, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "tbptt_event": [0, 49], "valu": [0, 4, 11, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 93, 97, 100, 101, 102, 104, 109, 112, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 129], "sourc": [0, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "adit": 0, "event": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 45, 49, 50, 51, 53, 54, 55, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 117, 127, 128, 129], "addit": [0, 4, 5, 40, 45, 49, 65, 81, 95, 100, 107, 125], "dedic": 0, "create_supervised_tbptt_train": 0, "model": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 49, 56, 57, 58, 59, 60, 61, 65, 66, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129], "optim": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 49, 51, 56, 57, 58, 59, 60, 61, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 127], "loss_fn": [0, 44, 58, 59, 60, 61, 107], "tbtt_step": 0, "dim": [0, 17, 49, 94, 100, 103, 119, 129], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130], "devic": [0, 4, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 49, 56, 57, 58, 59, 60, 61, 64, 65, 68, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129, 130], "none": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 42, 43, 44, 46, 49, 50, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "non_block": [0, 43, 44, 49, 56, 57, 58, 59, 60, 61, 130], "fals": [0, 4, 9, 14, 15, 16, 17, 18, 20, 21, 22, 40, 43, 44, 45, 49, 52, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 96, 99, 101, 111, 117, 118, 124, 125, 126, 129, 130], "prepare_batch": [0, 43, 44, 49, 56, 57, 58, 59, 60, 61], "function": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 82, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "_prepare_batch": [0, 43, 44, 56, 57, 58, 59, 60, 61], "creat": [0, 3, 4, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 49, 51, 56, 57, 62, 63, 65, 66, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 130], "backprop": 0, "through": [0, 4, 44, 72, 73, 74, 76, 129], "supervis": [0, 43, 44, 56, 57, 58, 59, 60, 61, 70, 128], "train": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 19, 38, 42, 43, 44, 49, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 70, 71, 73, 78, 82, 83, 84, 86, 87, 89, 90, 91, 100, 117, 123, 124, 128, 130], "recurr": 0, "long": [0, 99, 107, 121], "sequenc": [0, 9, 10, 11, 12, 13, 15, 16, 73, 74, 76, 78, 79, 93, 95, 97, 100, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 124, 125, 126, 130], "i": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130], "computation": 0, "intens": 0, "requir": [0, 4, 10, 12, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 49, 58, 59, 60, 61, 65, 70, 71, 95, 97, 100, 104, 107, 108, 109, 110, 113, 119, 123], "process": [0, 4, 9, 16, 19, 27, 38, 39, 40, 41, 42, 44, 64, 65, 90, 91, 92, 93, 95, 97, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 126, 129, 130], "whole": [0, 71, 72, 77], "befor": [0, 4, 27, 33, 34, 35, 40, 43, 44, 49, 50, 52, 56, 57, 63, 65, 70, 73, 74, 76, 99, 129], "get": [0, 9, 11, 13, 44, 55, 64, 65, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 100, 117, 121, 129], "gradient": [0, 8, 9, 11, 13, 15, 16, 44, 58, 59, 60, 61, 70], "howev": [0, 5, 14, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124], "when": [0, 4, 5, 9, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 45, 49, 52, 63, 65, 68, 70, 80, 86, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129, 130], "loss": [0, 9, 10, 11, 12, 13, 14, 15, 16, 44, 49, 51, 58, 59, 60, 61, 65, 70, 80, 88], "comput": [0, 4, 5, 6, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 63, 65, 68, 73, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128], "over": [0, 9, 11, 13, 15, 49, 70, 72, 73, 74, 76, 77, 79, 105, 107, 122, 129], "mani": 0, "output": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 49, 55, 56, 57, 58, 59, 60, 61, 65, 66, 69, 70, 80, 81, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "x": [0, 4, 12, 14, 19, 43, 44, 49, 56, 57, 58, 59, 60, 61, 65, 88, 94, 100, 102, 103, 104, 107, 117, 120, 123, 129, 130], "an": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 43, 44, 45, 46, 49, 52, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 83, 86, 88, 90, 91, 92, 94, 99, 100, 103, 104, 107, 112, 117, 121, 123, 129, 130], "opportun": 0, "subsequ": [0, 115], "thi": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 83, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130], "known": [0, 30], "appli": [0, 9, 11, 13, 15, 17, 18, 20, 21, 22, 39, 40, 43, 44, 45, 49, 56, 57, 58, 59, 60, 61, 65, 68, 70, 73, 74, 76, 124, 129, 130], "step": [0, 4, 5, 9, 10, 11, 12, 13, 15, 16, 41, 44, 49, 51, 58, 59, 60, 61, 65, 66, 68, 69, 82, 84, 87, 92], "everi": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 49, 50, 52, 53, 65, 66, 68, 82, 83, 87, 88, 92, 102, 117, 123, 124, 129, 130], "while": [0, 5, 9, 10, 11, 12, 13, 15, 16, 39, 47, 65, 69, 70], "same": [0, 4, 5, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 45, 46, 65, 68, 70, 80, 93, 94, 95, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126], "paramet": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "int": [0, 4, 8, 9, 10, 11, 12, 13, 15, 16, 38, 42, 44, 46, 49, 50, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 92, 95, 96, 98, 100, 102, 104, 105, 106, 109, 111, 112, 114, 116, 118, 119, 121, 122, 130], "length": [0, 49, 55, 73, 74, 76, 115], "chunk": 0, "last": [0, 5, 49, 65, 66, 67, 72, 73, 74, 76, 117, 129], "one": [0, 5, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 49, 65, 67, 70, 76, 77, 84, 89, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 129, 130], "mai": [0, 4, 14, 43, 44, 49, 54, 56, 57, 58, 59, 60, 61, 70, 121], "smaller": [0, 65], "axi": [0, 121], "repres": [0, 79, 85, 121], "dimens": [0, 94, 103, 107, 111, 120, 125], "option": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 33, 34, 35, 38, 42, 43, 44, 46, 49, 50, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 77, 78, 79, 80, 81, 88, 92, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 114, 117, 120, 121, 122, 123, 125, 126, 130], "str": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "type": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "specif": [0, 4, 5, 9, 11, 13, 17, 18, 21, 22, 33, 34, 35, 41, 42, 43, 44, 46, 52, 56, 57, 58, 59, 60, 61, 65, 96, 99, 129], "default": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 49, 50, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "batch": [0, 3, 4, 5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 43, 44, 45, 46, 48, 49, 51, 52, 55, 56, 57, 58, 59, 60, 61, 65, 66, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129], "bool": [0, 4, 8, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 40, 43, 44, 49, 50, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 96, 99, 101, 111, 117, 118, 123, 124, 125, 126, 130], "true": [0, 3, 4, 5, 7, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 44, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130], "copi": [0, 9, 43, 44, 56, 57, 58, 59, 60, 61, 68, 71, 72, 77], "between": [0, 5, 43, 44, 49, 55, 56, 57, 58, 59, 60, 61, 70, 79, 92, 112, 114, 115, 116, 121], "cpu": [0, 4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 56, 57, 58, 59, 60, 61, 65, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129, 130], "gpu": [0, 4, 19, 42, 43, 44, 56, 57, 58, 59, 60, 61, 129], "occur": [0, 43, 44, 56, 57, 58, 59, 60, 61, 62, 66, 92, 116], "asynchron": [0, 43, 44, 56, 57, 58, 59, 60, 61, 130], "respect": [0, 4, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 56, 57, 58, 59, 60, 61, 68, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 123, 125, 126, 130], "host": [0, 4, 43, 44, 56, 57, 58, 59, 60, 61, 130], "For": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 41, 42, 43, 44, 45, 47, 56, 57, 58, 59, 60, 61, 65, 70, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129], "other": [0, 4, 9, 11, 40, 41, 42, 43, 44, 45, 49, 56, 57, 58, 59, 60, 61, 65, 68, 70, 107, 112, 121, 123, 124, 129], "case": [0, 4, 5, 17, 18, 19, 20, 21, 22, 43, 44, 49, 56, 57, 58, 59, 60, 61, 65, 68, 93, 94, 96, 101, 103, 117, 121, 125, 126, 129], "argument": [0, 4, 9, 10, 11, 12, 13, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 40, 42, 43, 44, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 75, 76, 80, 88, 93, 94, 95, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129], "ha": [0, 9, 43, 44, 49, 52, 56, 57, 58, 59, 60, 61, 65, 66, 68, 95, 111, 114, 121, 129], "effect": [0, 4, 43, 44, 56, 57, 58, 59, 60, 61], "callabl": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 47, 49, 50, 54, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 83, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "receiv": [0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 49, 52, 56, 57, 58, 59, 60, 61, 65, 93, 94, 95, 97, 99, 101, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 125, 126], "tupl": [0, 4, 19, 43, 44, 56, 57, 58, 59, 60, 61, 72, 77, 79, 85, 91, 95, 99, 107, 114, 117, 120, 123, 125, 130], "tensor": [0, 4, 8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 56, 57, 58, 59, 60, 61, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130], "batch_x": [0, 43, 44, 56, 57, 58, 59, 60, 61], "batch_i": [0, 43, 44, 56, 57, 58, 59, 60, 61], "return": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "updat": [0, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 44, 51, 58, 59, 60, 61, 68, 71, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128], "The": [0, 4, 9, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 44, 49, 50, 52, 56, 57, 62, 65, 68, 70, 72, 73, 82, 84, 89, 96, 97, 100, 101, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129], "intern": [0, 5, 17, 18, 21, 22, 33, 34, 35, 39, 40, 41, 43, 44, 45, 46, 49, 50, 55, 56, 57, 65, 66, 67, 78, 86, 92, 96, 99, 123, 129, 130], "chang": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 28, 29, 30, 32, 36, 37, 40, 41, 42, 43, 44, 49, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 73, 74, 75, 76, 80, 82, 84, 87, 88, 95, 102, 114, 117, 123, 125, 126, 129, 130], "now": [0, 4, 14, 42, 43, 44, 54, 56, 57, 88, 95, 114, 130], "onli": [0, 4, 9, 11, 13, 27, 40, 42, 43, 44, 49, 50, 56, 57, 65, 66, 76, 99, 100, 101, 104, 112, 117, 121], "move": [0, 1, 43, 44, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 128, 130], "input": [0, 4, 5, 9, 10, 11, 12, 13, 15, 16, 27, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 56, 57, 62, 65, 66, 83, 94, 95, 99, 100, 103, 104, 107, 114, 117, 120, 123, 125, 126, 130], "data": [0, 4, 5, 9, 15, 17, 18, 19, 20, 21, 22, 27, 33, 34, 35, 38, 39, 43, 44, 45, 46, 49, 52, 54, 55, 56, 57, 65, 67, 88, 90, 91, 93, 94, 99, 100, 102, 103, 104, 111, 112, 117, 121, 123, 124, 125, 126, 129, 130], "correct": [0, 14, 43, 44, 50, 56, 57, 65, 129], "should": [0, 4, 9, 10, 11, 12, 13, 15, 16, 19, 40, 42, 43, 44, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 73, 74, 75, 76, 79, 80, 85, 92, 93, 97, 99, 100, 101, 102, 108, 109, 110, 111, 113, 117, 118, 121, 123, 124, 125, 126], "user": [0, 4, 5, 10, 11, 17, 18, 20, 21, 22, 38, 39, 42, 43, 44, 49, 51, 52, 55, 56, 57, 65, 66, 68, 83, 99, 118, 129], "more": [0, 4, 5, 9, 10, 11, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 42, 43, 44, 45, 47, 49, 52, 66, 70, 78, 80, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129], "inform": [0, 4, 9, 11, 13, 19, 43, 44, 70, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126], "see": [0, 1, 4, 5, 8, 9, 10, 14, 16, 42, 43, 44, 45, 47, 49, 65, 66, 92, 99, 107, 121, 123, 129], "pytorch": [0, 4, 5, 9, 10, 11, 12, 13, 16, 38, 42, 43, 44, 49, 82, 84, 87, 123, 128, 129], "document": [0, 16, 43, 44, 128], "": [0, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 49, 52, 56, 57, 58, 59, 60, 61, 65, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "explan": [0, 43, 44], "add_early_stopping_by_val_scor": 0, "patienc": [0, 67, 80, 127], "metric_nam": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 65, 80, 102], "score_sign": [0, 65], "1": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 44, 45, 49, 52, 55, 58, 59, 60, 61, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130], "earli": 0, "stop": [0, 67, 70, 80, 89], "handler": [0, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 45, 49, 54, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 128, 130], "base": [0, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 49, 51, 55, 64, 65, 66, 69, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129], "score": [0, 64, 65, 66, 67, 95, 96, 101, 104, 114, 115, 116], "name": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 19, 42, 43, 44, 49, 50, 54, 55, 64, 65, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 91, 102, 117, 123, 124, 129, 130], "provid": [0, 2, 4, 5, 9, 10, 11, 12, 13, 15, 16, 19, 39, 40, 41, 42, 45, 46, 49, 52, 64, 65, 66, 67, 69, 70, 81, 101, 102, 107, 109, 123, 124, 129], "metric": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 49, 55, 56, 57, 65, 67, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128], "increas": [0, 67, 70, 73, 76, 77, 79, 80, 84, 85], "order": [0, 5, 95, 116], "keep": [0, 4, 5, 9, 11, 13, 47, 65, 68, 70, 129, 130], "number": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 38, 39, 42, 44, 49, 55, 58, 59, 60, 61, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 84, 86, 89, 94, 100, 102, 103, 104, 111, 120, 121, 123, 125, 126, 130], "wait": [0, 67], "improv": [0, 67, 80, 130], "run": [0, 4, 5, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 49, 50, 52, 54, 55, 65, 66, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130], "present": [0, 49, 111], "state": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 47, 49, 54, 56, 57, 58, 59, 60, 61, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130], "float": [0, 4, 8, 9, 11, 13, 18, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 97, 99, 101, 109, 112, 114, 115, 116, 117, 118, 120], "sign": [0, 65], "error": [0, 9, 24, 26, 27, 29, 30, 31, 33, 34, 35, 65, 88, 99, 108, 110, 112, 113, 130], "like": [0, 4, 5, 14, 19, 42, 65, 102, 107, 123, 125, 126, 129, 130], "e": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 45, 49, 52, 64, 65, 66, 67, 81, 88, 92, 98, 105, 106, 117, 121, 122, 123, 124, 129, 130], "g": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 49, 64, 65, 66, 81, 88, 92, 98, 104, 105, 106, 117, 121, 122, 123, 124, 129, 130], "better": [0, 64, 65], "neg": [0, 4, 65, 93, 111, 126], "object": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 49, 50, 55, 65, 66, 67, 70, 73, 74, 75, 76, 77, 78, 79, 83, 90, 91, 92, 101, 104, 117, 123, 124, 130], "larger": [0, 27, 33, 34, 35, 39, 40, 42, 49, 65, 74, 88, 99], "ar": [0, 1, 2, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 45, 49, 52, 62, 64, 65, 66, 68, 70, 72, 91, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130], "retain": [0, 65, 66], "A": [0, 19, 27, 35, 36, 45, 49, 50, 54, 65, 66, 67, 75, 105, 106, 112, 118, 129], "earlystop": 0, "gen_save_best_models_by_val_scor": 0, "save_handl": [0, 65], "n_save": [0, 9, 11, 16, 65, 66], "3": [0, 4, 5, 8, 14, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 49, 52, 53, 63, 65, 66, 68, 71, 75, 78, 79, 80, 81, 82, 83, 84, 90, 91, 94, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130], "tag": [0, 8, 9, 10, 11, 12, 13, 15, 16, 19], "val": 0, "kwarg": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 39, 40, 41, 42, 49, 55, 62, 65, 66, 70, 71, 75, 77, 78, 80, 86, 107, 123, 124, 129], "add": [0, 4, 49, 68], "save": [0, 5, 9, 11, 16, 44, 45, 49, 62, 64, 65, 66, 67, 77, 80, 88, 123], "best": [0, 9, 11, 16, 65, 80, 114, 115, 116], "highest": [0, 65, 66], "logic": [0, 49], "how": [0, 16, 68, 70, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128], "store": [0, 5, 9, 27, 33, 34, 35, 45, 46, 49, 54, 65, 66, 88, 90, 91, 99, 120, 129, 130], "deleg": 0, "union": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 43, 44, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 70, 71, 72, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 130], "basesavehandl": [0, 65], "two": [0, 5, 49, 65, 66, 68, 70, 99, 120], "checkpoint": [0, 5, 9, 11, 16, 62, 64, 66, 68, 130], "dictionari": [0, 9, 10, 11, 12, 13, 14, 15, 16, 19, 45, 49, 55, 64, 65, 70, 71, 72, 77, 102, 107, 117, 123, 124], "filenam": [0, 9, 11, 62, 64, 65, 66, 90, 91, 130], "If": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 42, 43, 44, 45, 49, 56, 57, 62, 65, 66, 68, 73, 74, 76, 80, 81, 88, 96, 97, 99, 100, 102, 104, 107, 108, 109, 110, 112, 113, 117, 118, 119, 121, 123, 124, 129, 130], "can": [0, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 51, 52, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 76, 83, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130], "inherit": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 41, 51, 52, 65, 66, 129], "implement": [0, 2, 8, 23, 27, 33, 34, 35, 41, 49, 65, 70, 95, 96, 99, 100, 106, 107, 123, 129], "remov": [0, 1, 8, 9, 11, 49, 50, 54, 62, 64, 65, 66, 70], "fix": [0, 23, 28, 65], "In": [0, 4, 5, 9, 19, 27, 40, 49, 64, 65, 68, 83, 93, 95, 99, 100, 107, 117, 121, 123, 125, 126, 127, 129], "need": [0, 11, 13, 14, 15, 16, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 50, 65, 66, 68, 70, 97, 108, 109, 110, 112, 113, 117, 118, 119, 123, 124, 129, 130], "disk": [0, 62, 65, 66], "defin": [0, 3, 4, 7, 8, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 49, 51, 52, 55, 56, 57, 65, 66, 67, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129], "disksav": [0, 5, 65, 66, 68], "dict": [0, 19, 43, 49, 65, 66, 67, 68, 70, 71, 72, 77, 90, 96, 102, 107, 123], "have": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 49, 65, 68, 86, 89, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 129], "state_dict": [0, 5, 45, 49, 65, 66, 67, 70, 71, 72, 77, 123], "load_state_dict": [0, 5, 49, 65, 67, 70, 71, 72, 77, 123], "fetch": [0, 4, 5, 52, 55, 90, 91], "epoch": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 45, 49, 52, 54, 55, 65, 66, 67, 69, 73, 74, 76, 80, 82, 83, 84, 85, 87, 88, 90, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129, 130], "prefix": [0, 64, 65, 66], "_": [0, 4, 16, 33, 34, 35, 45, 49, 65, 66, 92], "By": [0, 4, 5, 13, 14, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 55, 65, 72, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129, 130], "ani": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 86, 90, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129, 130], "keyword": [0, 9, 12, 13, 16, 39, 42, 49, 55, 62, 65, 66, 80, 107, 124, 129], "arg": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 21, 22, 42, 49, 66, 76, 92, 99, 123, 124, 129], "pass": [0, 4, 11, 14, 15, 19, 44, 49, 51, 52, 55, 63, 64, 65, 66, 70, 77, 80, 88, 93, 95, 97, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 126, 129], "construct": [0, 9, 11, 13, 44, 77, 80], "save_best_model_by_val_scor": 0, "output_path": [0, 90, 91], "path": [0, 9, 13, 16, 62, 65, 66, 90, 91, 130], "indic": [0, 5, 46, 50, 52, 66, 84, 92, 96, 121, 129, 130], "where": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 62, 63, 65, 66, 68, 72, 77, 93, 95, 97, 100, 101, 104, 107, 108, 110, 112, 113, 125, 126], "setup_any_log": 0, "logger": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 128, 130], "logger_modul": 0, "log_every_it": 0, "deprec": [0, 50, 128], "sinc": [0, 1, 9, 10, 11, 12, 13, 15, 16, 44, 49, 52, 66, 67, 68, 129], "version": [0, 1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 28, 29, 30, 32, 36, 37, 40, 41, 42, 43, 44, 49, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 95, 100, 102, 104, 111, 112, 114, 115, 116, 117, 118, 123, 125, 126, 129, 130], "4": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130], "pleas": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 39, 40, 42, 45, 47, 49, 50, 64, 65, 66, 70, 100, 104, 112, 129], "instead": [0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 44, 50, 66], "setup_tb_log": 0, "setup_visdom_log": 0, "setup_mlflow_log": 0, "etc": [0, 5, 9, 16, 42, 49, 65, 130], "baselogg": [0, 8], "setup_clearml_log": 0, "100": [0, 5, 34, 49, 52, 68, 81, 102, 127], "clearml": [0, 1, 9], "log": [0, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 95, 102, 103, 130], "list": [0, 1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 49, 50, 65, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 114, 115, 116, 123, 128], "averag": [0, 4, 17, 49, 68, 92, 95, 101, 103, 107, 109, 112, 114, 115, 116, 117, 120, 121, 124, 125, 126, 129], "learn": [0, 9, 10, 11, 12, 13, 15, 16, 18, 23, 28, 65, 70, 72, 73, 76, 77, 78, 79, 81, 86, 96, 125, 126, 127], "rate": [0, 9, 10, 11, 12, 13, 15, 16, 70, 72, 73, 76, 77, 78, 79, 81, 86, 111, 127], "singl": [0, 4, 14, 42, 50, 54, 55, 64, 65, 66, 67, 89, 92, 94, 103, 120, 121, 129], "torch": [0, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57, 59, 62, 65, 66, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "kei": [0, 9, 10, 11, 12, 13, 15, 16, 19, 42, 49, 55, 65, 66, 67, 70, 96, 102, 107, 123], "interv": 0, "attach": [0, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 49, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128], "iter": [0, 5, 9, 10, 11, 12, 13, 14, 15, 16, 19, 43, 44, 45, 46, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 70, 72, 73, 76, 77, 79, 80, 90, 102, 129], "To": [0, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 65, 66, 97, 99, 100, 102, 108, 109, 110, 112, 113, 118, 119, 129], "set": [0, 4, 5, 9, 11, 14, 15, 16, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 49, 55, 65, 66, 68, 72, 78, 79, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129], "clearmllogg": [0, 9], "setup_common_distrib_training_handl": 0, "train_sampl": 0, "to_sav": [0, 5, 9, 11, 65, 66, 68, 70], "save_every_it": 0, "1000": [0, 65, 104], "lr_schedul": [0, 5, 65, 75, 77, 80, 81, 82, 84, 87, 127], "with_gpu_stat": 0, "output_nam": 0, "with_pbar": 0, "with_pbar_on_it": 0, "stop_on_nan": 0, "clear_cuda_cach": 0, "also": [0, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 30, 45, 49, 51, 52, 65, 66, 70, 91, 100, 117, 129], "support": [0, 4, 9, 11, 39, 40, 41, 42, 43, 44, 49, 58, 65, 125, 126, 129], "distribut": [0, 5, 9, 27, 38, 39, 40, 41, 42, 62, 64, 65, 66, 99, 123, 128, 130], "configur": [0, 4, 9, 27, 38, 39, 40, 41, 42, 49, 62, 64, 65, 66, 71, 78, 86, 99, 123, 129, 130], "terminateonnan": [0, 90], "schedul": [0, 5, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 128], "modelcheckpoint": [0, 16, 65], "runningaverag": [0, 14], "update_funct": 0, "progress": [0, 14, 19, 102], "bar": [0, 14, 19, 27, 35, 36, 102], "distributedsampl": [0, 39, 129], "sampler": [0, 4, 38, 39, 45, 46, 48, 129], "call": [0, 4, 5, 9, 11, 13, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 44, 49, 52, 64, 65, 75, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 126, 129], "set_epoch": 0, "start": [0, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 43, 44, 45, 46, 49, 52, 53, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 72, 73, 74, 76, 80, 81, 82, 84, 87, 90, 92, 93, 95, 97, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 129, 130], "map": [0, 4, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 43, 49, 64, 65, 66, 67, 70, 71, 72, 77, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 130], "instanc": [0, 9, 11, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 59, 65, 68, 77, 80, 90, 91, 97, 98, 105, 106, 108, 109, 110, 112, 113, 117, 118, 119, 122, 129], "each": [0, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 45, 49, 55, 56, 57, 58, 59, 60, 61, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129], "mutual": [0, 27, 49, 99], "exclus": [0, 49], "paramschedul": [0, 1, 72, 77, 81], "lrschedul": [0, 81], "nativ": [0, 4, 40, 41, 42], "gpuinfo": 0, "pynvml": 0, "packag": [0, 4, 10, 12, 13, 15, 42, 70, 71, 100], "instal": [0, 9, 10, 11, 12, 13, 14, 15, 16, 42, 70, 71, 100, 104], "associ": [0, 9, 11, 49, 62, 64, 129], "wise": [0, 129], "ad": [0, 4, 8, 9, 11, 13, 18, 19, 22, 40, 41, 42, 43, 44, 45, 49, 56, 57, 58, 59, 60, 61, 62, 65, 66, 73, 74, 75, 76, 81, 94, 95, 97, 102, 103, 108, 109, 110, 112, 113, 117, 118, 119, 123, 125, 126, 129, 130], "cuda": [0, 4, 10, 12, 39, 40, 43, 44, 49, 57, 58, 59, 60, 68, 100, 118, 129, 130], "empty_cach": 0, "end": [0, 5, 12, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 49, 52, 70, 73, 74, 76, 79, 81, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129], "detail": [0, 1, 4, 10, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 45, 47, 49, 65, 66, 95, 100, 104, 114, 115, 116, 121, 129], "setup_common_training_handl": 0, "mlflow": [0, 10], "mlflowlogg": [0, 8, 10], "setup_neptune_log": 0, "neptun": [0, 1, 11], "neptunelogg": [0, 11], "setup_plx_log": 0, "polyaxon": [0, 12], "polyaxonlogg": [0, 8, 12], "tensorboard": [0, 13, 19], "directori": [0, 9, 13, 62, 65, 66, 130], "tensorboardlogg": [0, 8, 13], "setup_trains_log": 0, "wa": [0, 1, 42, 49, 62, 92, 117], "renam": 0, "visdom": [0, 1, 15], "visdomlogg": [0, 8, 15], "setup_wandb_log": 0, "wandb": [0, 1, 16], "wandblogg": [0, 16], "6": [1, 4, 5, 44, 49, 65, 66, 68, 70, 79, 84, 85, 90, 91, 93, 100, 101, 104, 109, 114, 115, 125, 126, 127], "fastailrfind": 1, "basictimeprofil": 1, "handlerstimeprofil": 1, "below": [1, 17, 20, 21, 22, 49, 52, 92, 93, 99, 101, 107, 123, 125, 126, 129], "comprehens": 1, "exampl": [1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 49, 51, 54, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130], "variou": [1, 8, 52, 127, 129], "tensorboardx": [1, 13], "mnist": [1, 5, 9, 11, 16], "cyclegan": 1, "efficientnet": 1, "notebook": [1, 4, 14], "usag": [1, 5, 19, 47, 65, 102, 117, 123, 124, 128], "tqdm": [1, 14, 19, 102], "task": [2, 4, 5, 9, 20, 22], "definit": 2, "botchkarev": [2, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37], "2018": [2, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 104], "page": 2, "30": [2, 4, 5, 17, 49, 52, 79, 127], "appendix": 2, "2": [2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 49, 52, 59, 62, 65, 66, 68, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129], "mathemat": 2, "complet": [2, 4, 5, 11, 14, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 45, 49, 52, 53, 55, 65, 67, 80, 90, 91, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 128, 130], "from": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130], "collect": [3, 4, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 53, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 129], "import": [3, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 49, 51, 58, 59, 60, 61, 63, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130], "ordereddict": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 49, 65, 67, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126], "nn": [3, 7, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 65, 66, 68, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129], "ignit": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "engin": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130], "util": [3, 5, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 46, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 128], "contrib": [3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "regress": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 128], "evalu": [3, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 49, 56, 57, 65, 67, 68, 69, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130], "doctest": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "def": [3, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 44, 45, 49, 51, 52, 53, 54, 67, 68, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129], "eval_step": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "default_evalu": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "param_tensor": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "zero": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 127], "requires_grad": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 127], "default_optim": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "sgd": [3, 4, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 65, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 127], "lr": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 65, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128], "trainer": [3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 49, 51, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 128, 130], "could": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 66, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 129], "test": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "must": [3, 4, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 65, 66, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129], "hi": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "own": [3, 7, 11, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "testsetup": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "get_default_train": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "train_step": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "default_model": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "sequenti": [3, 7, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "linear": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 65, 66, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "fc": [3, 7, 9, 11, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "manual_se": [3, 5, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126, 128, 129, 130], "666": [3, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 125, 126], "multipl": [4, 5, 42, 65, 66, 68, 77, 82, 84, 87, 89, 114, 129], "backend": [4, 39, 40, 41, 42, 45, 129], "nccl": [4, 42], "gloo": [4, 42], "mpi": [4, 42], "xla": [4, 39, 41, 42, 61, 64, 65], "tpu": [4, 42, 44, 61, 65, 129], "via": [4, 42, 54], "horovod": [4, 40, 41, 42], "framework": [4, 40, 42], "we": [4, 5, 9, 10, 11, 12, 13, 15, 16, 39, 40, 41, 70, 83, 100, 104, 107, 123, 129], "context": [4, 9, 11, 13, 15, 40, 42, 54, 70], "manag": [4, 11, 13, 15, 42, 54, 70], "simplifi": [4, 42], "code": [4, 5, 11, 38, 42, 129], "setup": [4, 5, 9, 10, 11, 12, 13, 15, 16, 39, 42, 46, 49, 65, 66, 69, 107, 123, 128, 129, 130], "all": [4, 9, 10, 11, 12, 13, 14, 15, 16, 19, 27, 33, 34, 35, 39, 40, 41, 44, 49, 51, 61, 64, 65, 66, 70, 80, 99, 101, 107, 123, 124, 128, 129], "abov": [4, 65, 104, 111, 117, 129], "method": [4, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130], "auto_model": 4, "auto_optim": 4, "auto_dataload": 4, "help": [4, 9, 10, 11, 12, 13, 15, 16, 46, 69, 128, 129], "adapt": [4, 38, 39, 40, 41, 129], "transpar": [4, 128], "wai": [4, 5, 40, 46, 70, 129], "loader": 4, "exist": [4, 62, 66, 68, 70, 82, 83, 84, 85, 86, 87, 99, 130], "main": [4, 5, 15, 42, 96], "py": [4, 42], "idist": [4, 39, 40, 41, 42, 65], "local_rank": [4, 42, 129], "config": [4, 16, 42], "print": [4, 5, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 49, 54, 65, 66, 68, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 129], "get_rank": [4, 42, 65], "train_load": [4, 5, 39, 49, 88], "dataset": [4, 9, 10, 11, 12, 13, 15, 16, 39, 49, 67], "batch_siz": [4, 5, 10, 12, 39, 93, 94, 96, 99, 100, 101, 103, 104, 107, 111, 112, 120, 121, 125, 126, 129], "32": [4, 5, 39, 49], "num_work": [4, 15, 39, 45, 129], "12": [4, 5, 14, 19, 43, 49, 56, 57, 64, 84, 102, 127, 130], "shuffl": [4, 5, 39], "size": [4, 5, 38, 39, 40, 42, 74, 87, 94, 100, 103, 107, 118, 120, 129], "automat": [4, 9, 14, 16, 19, 39, 43, 44, 49, 65, 102, 123, 124], "resnet50": 4, "ddp": [4, 23, 24, 25, 26, 28, 29, 30, 32, 36, 37], "dp": 4, "just": [4, 5, 16], "itself": [4, 39], "accord": [4, 5, 42, 65, 107, 111, 129], "01": [4, 49, 73, 76, 77, 118, 127, 130], "except": [4, 52, 62, 66, 112, 125, 126, 128, 129], "overrid": [4, 41, 45, 49, 64, 82, 83, 84, 85, 86, 87, 129], "safe": 4, "behind": 4, "xm": [4, 41, 62, 64, 66], "optimizer_step": [4, 41], "optimizi": 4, "perform": [4, 14, 21, 22, 40, 68], "dist_config": [4, 42], "nproc_per_nod": [4, 42], "specifi": [4, 10, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 42, 49, 50, 62, 65, 66, 70, 93, 94, 95, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129], "launch": [4, 42], "python": [4, 15, 42, 129], "start_method": 4, "fork": 4, "jupyt": [4, 14], "parallel": [4, 38, 104, 129, 130], "b": [4, 19, 42, 49, 52, 65, 105, 106, 112, 129], "execut": [4, 5, 8, 42, 47, 49, 50, 52, 70, 81, 92, 99, 129], "cifar10": [4, 5], "found": [4, 5, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 49, 70, 95, 100, 104, 107, 114, 115, 116, 123], "here": [4, 5, 11, 49, 100, 129], "group": [4, 42, 73, 74, 76, 77, 78, 79, 80], "initi": [4, 5, 8, 9, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 40, 42, 44, 49, 68, 80, 81, 93, 95, 97, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 129, 130], "wrap": [4, 39, 40, 41, 65, 75, 77, 80, 127], "about": [4, 45, 52], "final": [4, 27, 62, 66, 99, 129], "spawn": [4, 42], "has_native_dist_support": 4, "avail": [4, 9, 10, 11, 12, 13, 14, 15, 16, 27, 33, 34, 35, 39, 40, 41, 42, 88, 99, 125, 126], "has_xla_support": 4, "torch_xla": [4, 61, 130], "all_gath": 4, "gather": [4, 27, 99, 123], "oper": [4, 14, 21, 22, 27, 52, 53, 99, 129], "across": [4, 27, 44, 58, 59, 60, 61, 99, 101, 117, 125, 126, 129], "particip": [4, 38, 42, 129], "shape": [4, 9, 13, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 93, 94, 96, 97, 99, 100, 101, 103, 104, 108, 109, 110, 111, 112, 113, 118, 120, 121, 125, 126, 129, 130], "integ": [4, 9, 10, 11, 12, 13, 15, 16, 65, 66, 72, 79, 85, 114, 125, 129], "world_siz": [4, 39], "string": [4, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 65, 102, 117, 123, 124, 129], "current": [4, 9, 11, 14, 19, 27, 33, 34, 35, 38, 40, 42, 45, 48, 49, 50, 52, 65, 66, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 92, 99, 102, 117, 123, 124, 129], "doe": [4, 5, 9, 10, 11, 12, 13, 15, 16, 49, 66, 68, 84, 87], "belong": [4, 9, 11, 13, 125, 126], "veri": 4, "11": [4, 5, 22, 44, 49, 52, 58, 59, 60, 61, 77, 84, 91, 97, 108, 109, 110, 113, 118], "all_reduc": 4, "op": [4, 41, 120], "sum": [4, 49, 94, 95, 111, 129], "reduc": [4, 9, 11, 13, 15, 79, 80, 85, 100, 114, 115, 116, 129], "reduct": [4, 8, 9, 11, 13, 15, 129], "possibl": [4, 5, 11, 13, 15, 16, 65, 66, 112, 125, 130], "product": [4, 129], "min": [4, 80, 90, 91, 129], "max": [4, 37, 49, 80, 90, 91, 97, 127, 129], "AND": 4, "OR": 4, "adasum": 4, "available_backend": [4, 39, 40, 41], "barrier": 4, "synchron": [4, 16, 45, 47, 128], "broadcast": [4, 27, 40, 41, 99], "src": [4, 117], "safe_mod": 4, "make": [4, 5, 39, 40, 49, 64, 65, 117], "sure": [4, 39, 40, 64], "otherwis": [4, 13, 14, 44, 64, 65, 66, 67, 70, 80, 96, 101, 112, 117, 129], "crash": [4, 5], "non": [4, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 40, 41, 93, 94, 95, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126], "rank": [4, 9, 27, 38, 39, 40, 41, 62, 65, 66, 99, 123, 130], "anyth": [4, 44], "discard": 4, "mind": [4, 5, 65, 70], "mode": [4, 9, 68, 80, 95, 127], "work": [4, 23, 24, 25, 26, 28, 29, 30, 32, 36, 37, 65, 78, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126], "dens": 4, "It": [4, 5, 11, 13, 15, 16, 19, 49, 66, 67, 68, 70, 100, 101, 102, 104, 117, 123, 129], "lead": [4, 27, 33, 34, 35, 88, 99, 100], "some": [4, 5, 45, 49, 74, 125, 126, 129], "slower": 4, "than": [4, 11, 14, 27, 33, 34, 35, 40, 42, 49, 67, 70, 74, 80, 88, 93, 99, 100, 123, 130], "without": [4, 5, 39, 42, 65, 121, 129], "y": [4, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 49, 51, 56, 57, 58, 59, 60, 61, 93, 95, 97, 99, 100, 101, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 129], "t1": [4, 127], "rand": [4, 5, 104, 112, 118, 129], "5": [4, 5, 14, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 49, 52, 56, 57, 58, 59, 60, 61, 65, 68, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 93, 95, 96, 97, 99, 102, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 123, 126, 127, 129, 130], "s1": 4, "abc": 4, "3456": 4, "els": [4, 49, 65, 124], "empti": [4, 14, 88], "assert": [4, 19, 45, 49, 102, 117, 123, 124], "isinst": [4, 117], "those": [4, 5], "do": [4, 49, 50, 52, 53, 88, 92, 121], "placehold": 4, "new": [4, 41, 48, 49, 56, 57, 58, 59, 60, 61, 63, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 95, 100, 104, 111, 112, 114, 115, 116, 118, 124, 125, 126, 129, 130], "index": [4, 42, 79, 83, 85, 90, 91, 98, 105, 106, 111, 118, 119, 121, 122, 129], "dist": [4, 42], "destroy_process_group": 4, "get_local_rank": 4, "local": [4, 9, 16, 39, 42, 90, 91], "within": [4, 38], "get_nnod": 4, "node": [4, 42, 129], "get_node_rank": 4, "get_nproc_per_nod": 4, "per": [4, 42, 49, 55, 102, 125, 126], "get_world_s": 4, "world": [4, 39, 40, 42], "hostnam": 4, "accept": [4, 9, 10, 11, 12, 13, 14, 15, 16, 40, 42, 52, 62, 65, 66, 88, 112, 123], "timeout": 4, "timedelta": 4, "minut": 4, "init_method": [4, 42], "env": [4, 9, 42], "info": [4, 42, 130], "torch_init": 4, "comm": 4, "hvd_init": 4, "multi": [4, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 84, 89, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 123, 125, 126, 129], "torchrun": [4, 42], "train_fn": 4, "c": [4, 49, 52, 125, 126], "is_avail": 4, "is_initi": 4, "f": [4, 49, 54, 68, 101, 114, 115, 116, 124, 125, 126, 129], "window": [4, 11, 15], "file": [4, 9, 14, 16, 42, 62, 64, 65, 66, 90, 91, 130], "tmp": [4, 5, 42, 45, 49, 65, 66], "share": [4, 11, 16], "model_nam": 4, "given": [4, 5, 9, 11, 13, 19, 40, 42, 49, 55, 65, 67, 70, 72, 90, 91, 98, 104, 117, 121], "serial": [4, 5, 62, 66, 129], "new_group": 4, "subset": 4, "pg_option": 4, "one_rank_first": 4, "ensur": [4, 5, 9, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126], "first": [4, 5, 17, 18, 20, 21, 22, 42, 49, 55, 65, 66, 68, 72, 73, 79, 81, 94, 99, 103, 107, 120, 125, 126, 130], "environ": [4, 5, 11, 15, 63], "block": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126], "insid": [4, 14], "flag": [4, 15, 92, 93, 125, 126], "global": [4, 9, 10, 11, 12, 13, 15, 16, 65, 66, 69], "download_dataset": 4, "d": [4, 42, 52], "13": [4, 5, 43, 44, 49, 56, 57, 58, 59, 60, 61, 73, 74, 76, 90], "one_rank_onli": 4, "with_barri": 4, "decor": [4, 5, 47, 49, 129], "filter": [4, 49, 50, 52, 121, 129], "wrt": 4, "synchronis": 4, "mean": [4, 16, 26, 27, 30, 31, 32, 36, 44, 49, 58, 59, 60, 61, 65, 68, 90, 91, 96, 97, 99, 100, 101, 108, 109, 110, 112, 113, 120, 122, 124, 125, 126, 129], "some_handl": 4, "set_local_rank": 4, "hint": 4, "up": [4, 5, 11, 68, 73, 74, 76, 81, 94, 129], "init_process_group": [4, 42], "dist_info": 4, "show_config": 4, "displai": [4, 14], "fn": [4, 93, 126], "kwargs_dict": 4, "entrypoint": 4, "top": [4, 119], "level": [4, 128, 130], "so": [4, 49, 62, 66, 87, 117, 121, 125, 126, 129], "pickl": [4, 129], "impos": 4, "multiprocess": 4, "nnode": [4, 42], "node_rank": [4, 42], "master_addr": [4, 42], "127": 4, "master_port": [4, 42], "2222": [4, 24], "mp": [4, 43, 44, 58], "start_process": 4, "xmp": 4, "hvd_run": 4, "toler": 4, "ignor": [4, 9, 44, 70, 98, 105, 106, 122, 129], "rais": [4, 6, 9, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 49, 62, 65, 66, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129], "23": [4, 5, 19, 49, 89, 102, 130], "8": [4, 5, 23, 24, 25, 26, 42, 49, 52, 63, 72, 75, 77, 79, 80, 81, 84, 85, 97, 129, 130], "master": [4, 42], "7": [4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 41, 44, 49, 58, 59, 60, 61, 65, 71, 82, 83, 84, 85, 86, 87, 93, 95, 101, 107, 114, 119, 125, 126, 127], "googl": 4, "colab": 4, "core": [4, 49, 130], "xla_model": [4, 130], "sync": [4, 16], "temporari": [4, 9, 62, 66], "forc": 4, "manual": [4, 9, 12, 117], "destroi": 4, "done": [4, 5, 11, 13, 15, 16, 45, 49, 93, 101, 112, 117, 123, 124, 125, 126, 129], "get_": 4, "impact": [4, 5, 14], "librari": [5, 100, 128, 129], "contain": [5, 19, 45, 49, 50, 55, 64, 65, 70, 71, 72, 77, 89, 90, 91, 102, 111, 121, 123, 124], "approxim": 5, "reproduc": [5, 46], "origin": 5, "behaviour": [5, 49, 66], "easili": 5, "deseri": 5, "its": [5, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 41, 42, 45, 49, 65, 66, 68, 80, 81, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 128], "data_load": [5, 49, 65], "create_dir": [5, 62, 65, 66], "add_event_handl": [5, 9, 11, 16, 49, 54, 63, 65, 66, 67, 68, 72, 73, 75, 76, 77, 79, 80, 81, 89], "epoch_complet": [5, 9, 10, 11, 12, 13, 14, 15, 16, 49, 52, 54, 55, 65, 66, 68, 82, 83, 84, 85, 87, 88, 90, 91, 129], "max_epoch": [5, 9, 10, 11, 12, 13, 14, 15, 16, 44, 45, 49, 55, 65, 66, 70, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87, 90, 91, 130], "l": [5, 114, 115], "checkpoint_50000": 5, "pt": [5, 45, 49, 65, 66], "restor": [5, 49, 70], "to_load": [5, 65, 68], "load": [5, 44, 49, 65, 68, 90, 91], "checkpoint_fil": 5, "load_object": [5, 65, 68], "n": [5, 9, 11, 13, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 49, 73, 94, 95, 97, 103, 104, 108, 110, 113, 114, 116, 117, 123, 124, 125, 126, 127, 130], "continu": [5, 49], "gener": [5, 9, 10, 11, 12, 13, 15, 16, 68, 82, 84, 87, 104], "rather": [5, 11, 100, 130], "difficult": 5, "achiev": [5, 127], "reli": 5, "aspect": 5, "softwar": 5, "hardwar": 5, "note": [5, 11, 40, 49, 52, 65, 66, 67, 100, 104, 121, 126], "random": [5, 47, 130], "take": [5, 9, 10, 11, 12, 13, 15, 16, 50, 65, 66, 67, 73, 82, 83, 84, 85, 86, 87, 92, 107], "your": [5, 9, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 44, 93, 94, 95, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126], "problem": 5, "platform": 5, "releas": 5, "seed": [5, 10, 12, 55, 130], "cudnn": [5, 45], "applic": [5, 40, 43, 44, 56, 57, 58, 59, 60, 61, 64, 65, 73, 117, 123], "enough": 5, "rerun": 5, "experi": [5, 10, 12, 13], "deterministicengin": [5, 44], "reproduciblebatchsampl": [5, 45], "control": [5, 63, 92, 114, 115, 116], "precis": [5, 17, 20, 43, 44, 45, 78, 86, 95, 96, 101, 114, 115, 116, 121, 124, 129], "roughli": 5, "look": [5, 14, 19, 102, 130], "rang": [5, 45, 49, 68, 70, 92, 112, 118], "num_epoch": [5, 45], "set_se": [5, 45], "do_single_epoch_iter": [5, 45], "dataload": [5, 39, 44, 45, 46, 48, 49, 52, 55, 70, 90, 91, 129], "made": 5, "trivial": 5, "random_train_data_load": 5, "arang": 5, "print_train_data": 5, "tolist": [5, 20, 22, 49], "56": 5, "40": [5, 65, 79], "epoch_length": [5, 45, 49, 55, 70], "2nd": 5, "rng_state": 5, "31": [5, 49], "18": [5, 11, 49], "16": [5, 17, 42, 49, 91, 112, 118], "10": [5, 11, 14, 16, 19, 42, 49, 52, 59, 62, 65, 66, 67, 70, 71, 78, 79, 80, 83, 85, 86, 87, 92, 100, 102, 104, 112, 125, 126, 127, 129, 130], "33": [5, 49], "36": 5, "37": 5, "19": [5, 49, 52, 91], "9": [5, 9, 11, 13, 23, 24, 25, 26, 49, 52, 66, 73, 75, 76, 79, 80, 82, 83, 84, 87, 93, 101, 114, 125, 126, 129], "20": [5, 42, 49, 79, 86, 87, 121, 124, 127, 130], "14": [5, 43, 44, 49, 52, 58, 87], "26": [5, 49], "29": [5, 49, 52], "35": [5, 102], "38": 5, "34": [5, 14, 49], "22": [5, 49, 91], "17": [5, 14, 19, 49, 90, 102], "25": [5, 29, 30, 32, 34, 37, 49, 52, 72, 87, 127], "21": [5, 17, 49, 79, 130], "24": [5, 19, 49, 52, 102], "15": [5, 49, 85, 87, 127], "39": 5, "28": [5, 49], "27": [5, 49], "sampl": [5, 39, 43, 44, 56, 57, 58, 59, 60, 61, 94, 103, 111, 120, 121, 125, 126], "exactli": [5, 45], "simul": [5, 71, 72, 75, 77, 78, 80, 81, 86], "previou": [5, 49, 70], "skip": [5, 9, 68], "correspond": [5, 9, 10, 11, 12, 13, 15, 16, 19, 65, 72, 77, 111, 117], "after": [5, 9, 10, 11, 12, 13, 14, 15, 16, 43, 44, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 80, 81, 88, 90, 91, 117, 129], "datapoint": 5, "augment": 5, "middl": [5, 74, 76], "thu": 5, "remain": [5, 14, 79], "until": [5, 49, 79], "differ": [5, 18, 20, 39, 49, 64, 81, 100, 117, 123, 124, 129], "issu": [5, 17, 18, 20, 21, 22, 38, 49, 99], "period": [5, 65, 66, 87, 117, 123, 124], "dure": [5, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 49, 52, 62, 65, 66, 68, 70, 71, 72, 75, 77, 78, 80, 82, 83, 84, 86, 87, 117, 121, 123, 124, 129], "random_train_data_gener": 5, "yield": 5, "randint": [5, 129], "iteration_complet": [5, 9, 10, 11, 12, 13, 14, 15, 16, 19, 49, 52, 63, 65, 68, 72, 73, 75, 76, 77, 79, 80, 81, 86, 88, 89, 90, 91, 92, 102, 117, 123, 129], "user_handl": 5, "77": [5, 65, 127], "randomli": 5, "intend": 5, "alter": 5, "produc": [5, 9, 10, 11, 12, 13, 15, 16, 39, 45], "keep_random_st": 5, "numpi": [5, 47, 86, 127, 130], "therefor": [5, 129], "deal": 5, "describ": 5, "notcomputableerror": [6, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 128, 129], "cannot": [6, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 70, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129], "helper": [8, 9, 10, 11, 12, 13, 15, 16, 19, 39, 40, 41, 47, 48, 65, 69, 77, 81, 94, 102, 103, 120, 123, 128, 130], "basehandl": 8, "log_handl": [8, 9, 10, 11, 12, 13, 15, 16, 19], "event_nam": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 49, 54, 55, 65, 66, 102], "callableeventwithfilt": [8, 14, 54, 55, 68, 86, 129], "eventslist": [8, 54, 68, 86], "valid": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 49, 65, 67, 68, 95, 102, 114, 115, 116, 117, 118, 123, 124, 129], "register_ev": [8, 49, 51], "forward": [8, 100], "removableeventhandl": [8, 14, 49], "which": [8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 43, 49, 50, 52, 56, 57, 62, 65, 66, 68, 69, 70, 73, 74, 76, 86, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129], "attach_opt_params_handl": [8, 9, 10, 11, 12, 13, 14, 15, 16], "shortcut": [8, 49], "optimizerparamshandl": [8, 9, 10, 11, 12, 13, 15, 16], "miss": 8, "statement": [8, 54], "attach_output_handl": [8, 9, 10, 11, 12, 13, 15, 16], "outputhandl": [8, 9, 10, 11, 12, 13, 15, 16, 19], "baseoptimizerparamshandl": 8, "param_nam": [8, 9, 10, 11, 12, 13, 15, 16, 71, 72, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 87, 127], "baseoutputhandl": 8, "output_transform": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 49, 56, 57, 58, 59, 60, 61, 70, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129], "global_step_transform": [8, 9, 10, 11, 12, 13, 15, 16, 65, 66, 69], "state_attribut": [8, 9, 10, 11, 12, 13, 14, 15, 16], "baseweightshandl": 8, "whitelist": [8, 9, 11, 13], "weight": [8, 9, 11, 13, 15, 16, 18, 49, 65, 68, 95, 96, 101, 125, 126], "baseweightsscalarhandl": 8, "norm": [8, 9, 11, 13, 15, 109], "scalar": [8, 9, 11, 13, 14, 15, 71, 72, 79, 80, 82, 83, 84, 85, 87, 99, 129], "text": [9, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 68, 93, 95, 96, 97, 100, 101, 104, 105, 106, 108, 110, 112, 113, 125, 126], "plot": [9, 10, 11, 12, 13, 14, 15, 16, 70, 71, 78, 86, 88, 121, 127], "upload": 9, "storag": [9, 17, 18, 21, 22, 33, 34, 35, 65, 66, 96, 99], "solut": 9, "choic": 9, "server": [9, 11, 15], "s3": 9, "bucket": 9, "pip": [9, 10, 11, 12, 13, 15, 16, 70, 71], "init": [9, 16], "alreadi": [9, 14, 49, 65, 68, 82, 83, 84, 85, 86, 87], "been": [9, 14, 49, 66], "project_nam": [9, 11], "integr": [9, 11, 16], "task_nam": 9, "cnn": [9, 11, 16], "lambda": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 49, 56, 57, 58, 59, 60, 61, 65, 66, 68, 70, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129], "nll": [9, 10, 11, 12, 13, 14, 15, 16, 67], "accuraci": [9, 10, 11, 12, 13, 14, 15, 16, 49, 65, 80, 107, 117, 119, 123, 125, 126, 129], "global_step_from_engin": [9, 10, 11, 12, 13, 15, 16, 65, 66], "train_evalu": [9, 10, 11, 12, 13, 15, 16, 88], "iteration_start": [9, 10, 11, 12, 13, 15, 16, 49, 52, 53, 72, 73, 75, 76, 77, 79, 81, 90, 92, 129], "weightsscalarhandl": [9, 11, 13, 15], "classmethod": [9, 71, 72, 75, 77, 78, 80, 86], "bypass_mod": 9, "bypass": 9, "github_act": 9, "unless": 9, "overridden": [9, 64], "set_bypass_mod": 9, "refer": [9, 11, 13, 16, 30, 31, 32, 70, 95, 100, 104, 114, 115, 116], "doc": [9, 10, 11, 13, 14, 82, 84, 87, 129], "offlin": 9, "outsid": 9, "commun": 9, "get_task": 9, "report": [9, 19, 96], "equival": [9, 10, 11, 12, 13, 15, 16, 117, 125, 126], "current_task": 9, "Will": 9, "session": [9, 63], "folder": 9, "standalon": [9, 42], "access": [9, 10, 11, 12, 13, 15, 16, 49, 123], "clearmlsav": 9, "output_uri": 9, "dirnam": [9, 62, 66], "artifact": 9, "runtim": 9, "locat": 9, "score_funct": [9, 11, 16, 65, 66, 67], "123": [9, 14], "score_nam": [9, 11, 16, 64, 65, 66], "acc": 9, "filename_prefix": [9, 11, 16, 65, 66], "validation_evalu": [9, 11], "event_complet": [9, 52], "get_local_copi": 9, "download": [9, 11], "gradshisthandl": [9, 13], "histogram": [9, 13], "titl": [9, 10, 11, 12, 13, 15, 16, 127], "submodul": [9, 11, 13], "along": [9, 10, 11, 12, 13, 14, 15, 16], "determin": [9, 11, 13, 36, 49, 117, 121], "fulli": [9, 11, 13, 124], "qualifi": [9, 11, 13, 67], "bia": [9, 11, 13, 25, 32], "has_shape_2_1": [9, 13], "p": [9, 11, 13, 95, 101, 104, 109, 114, 115, 116, 124], "gradsscalarhandl": [9, 11, 13, 15], "upon": [9, 11, 13], "ones": [9, 11, 13, 100], "permit": [9, 11, 13], "Then": [9, 11, 13, 68, 72, 79, 80, 86], "layer": [9, 11, 13], "is_in_fc_lay": [9, 11, 13], "attribut": [9, 10, 11, 12, 13, 14, 15, 16, 44, 49, 52, 55, 65, 66, 68, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 123, 129], "param_group": [9, 10, 11, 12, 13, 15, 16, 49, 72, 73, 74, 75, 76, 77, 78, 79, 81], "transform": [9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 56, 57, 58, 59, 60, 61, 65, 66, 70, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 129], "prepar": [9, 10, 11, 12, 13, 15, 16], "loss1": [9, 10, 11, 12, 13, 15, 16], "another_loss": [9, 10, 11, 12, 13, 15, 16], "loss2": [9, 10, 11, 12, 13, 15, 16], "label": [9, 10, 11, 12, 13, 15, 16, 78, 86, 96, 111, 119, 121, 125, 126, 127], "desir": [9, 10, 11, 12, 13, 15, 16, 65, 66], "global_step": [9, 10, 11, 12, 13, 15, 16, 65, 66], "anoth": [9, 10, 11, 12, 13, 15, 16, 39, 65, 66, 68, 69, 78, 86, 117, 123, 124], "500": [9, 10, 11, 12, 13, 15, 16, 49], "validation_set": [9, 10, 11, 12, 13, 15, 16], "time": [9, 10, 11, 12, 13, 15, 16, 49, 55, 63, 65, 70, 90, 91, 92, 128, 130], "alpha": [9, 10, 11, 12, 13, 14, 15, 16, 45, 49, 114, 115, 116, 117], "beta": [9, 10, 11, 12, 13, 14, 15, 16, 45, 49, 96, 101, 124, 129], "get_event_attrib_valu": [9, 10, 11, 12, 13, 15, 16, 55], "weightshisthandl": [9, 13], "includ": [9, 11, 13, 65, 66, 96], "conv": [9, 13], "weight_selector": [9, 13], "has_bias_in_nam": [9, 11, 13], "custom_event_nam": [9, 10, 11, 12, 13, 15, 16, 69], "regist": [9, 10, 11, 12, 13, 15, 16, 49, 54, 69, 92], "tracking_uri": 10, "track": [10, 11, 12, 68], "client": [10, 12], "uri": 10, "log_param": 10, "__class__": [10, 12], "__name__": [10, 12], "__version__": [10, 12], "get_device_nam": [10, 12], "mlflow_tracking_uri": 10, "api_token": 11, "anonym": 11, "you": [11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 49, 56, 57, 89, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 123, 125, 126, 129], "npt_logger": 11, "experiment_nam": 11, "param": [11, 71, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 87], "minst": [11, 16], "project": [11, 16], "api": [11, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128], "token": [11, 102, 114, 115, 116], "http": [11, 15, 38, 44, 49, 70, 82, 84, 87, 95, 123], "ai": [11, 128], "menu": 11, "neptune_api_token": 11, "variabl": [11, 15, 40, 94, 103, 120, 129], "secur": 11, "form": [11, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 58, 59, 60, 61, 73, 82, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 129], "workspac": 11, "tom": 11, "classif": [11, 20, 22, 96, 99, 121], "neptune_project": 11, "init_run": 11, "leav": 11, "out": [11, 121, 129], "explor": 11, "app": 11, "o": [11, 66], "org": [11, 70, 82, 84, 87, 95, 123], "neptunesav": 11, "validation_accuraci": [11, 16], "update_fn": [11, 13, 15, 58, 59, 60, 61], "create_supervised_evalu": [11, 88, 107, 123, 129], "neptuneserv": 11, "close": [11, 12, 13, 14, 15, 16, 82], "them": [11, 89, 125, 126, 129], "ui": 11, "pytor1": 11, "chart": 11, "neptuneml": 11, "plx_logger": 12, "v0": [12, 49, 52, 66], "posit": [12, 13, 16, 42, 93, 95, 101, 103, 111, 125, 126, 129], "log_input": 12, "tb_logger": [13, 19], "log_dir": 13, "tb_log": 13, "favor": [13, 117], "fall": 13, "back": [13, 76], "summarywrit": 13, "v1": 13, "progressbar": [14, 19, 44, 102], "persist": [14, 19, 102], "bar_format": 14, "desc": 14, "n_fmt": 14, "total_fmt": 14, "percentag": [14, 19, 30, 34], "0f": 14, "postfix": 14, "elaps": [14, 92], "tqdm_kwarg": 14, "custom": [14, 39, 43, 44, 49, 51, 52, 56, 57, 58, 59, 60, 61, 91, 123, 128], "format": [14, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 97, 108, 109, 110, 112, 113, 118, 119, 121, 123, 129, 130], "l_bar": 14, "r_bar": 14, "rate_fmt": 14, "descript": [14, 117], "predict": [14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 56, 57, 88, 93, 97, 99, 100, 101, 104, 107, 108, 110, 111, 113, 121, 123, 125, 126], "simpli": [14, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 97, 108, 109, 110, 112, 113, 118, 119], "simpl": [14, 129], "create_supervised_train": [14, 88], "pbar": [14, 44], "50": [14, 19, 52, 71, 78, 102, 127], "64": [14, 85], "128": 14, "06": [14, 109], "stderr": [14, 130], "log_fil": 14, "open": [14, 49], "w": [14, 95, 112], "directli": [14, 44, 65, 129], "recommend": [14, 68], "replac": [14, 45, 48, 65, 66, 67, 123], "trigger": [14, 49, 50, 52, 86, 90, 91, 129], "log_messag": 14, "guarante": [14, 62, 66], "stdout": 14, "tqdm_notebook": 14, "render": [14, 65, 66], "ipywidget": 14, "due": 14, "bug": 14, "closing_event_nam": 14, "select": [14, 112], "what": [14, 70], "want": [14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 89, 93, 94, 95, 96, 97, 99, 100, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 120, 121, 123, 125, 126], "either": [14, 15, 17, 20, 21, 22], "entri": 14, "advanc": 14, "0d": 14, "1d": [14, 94, 103, 120], "intention": 14, "messag": [14, 68, 130], "preserv": 14, "wish": 14, "show_legend": 15, "show": [15, 66, 68, 70, 96, 107, 123, 129], "legend": [15, 78, 86, 127], "vd_logger": 15, "vb_logger": 15, "port": [15, 42], "raise_except": 15, "git": 15, "github": [15, 38, 44, 49, 70], "com": [15, 38, 49, 70], "fossasia": 15, "url": 15, "visdom_server_url": 15, "visdom_port": 15, "worker": [15, 39, 130], "concurr": 15, "futur": 15, "threadpoolexecutor": 15, "post": 15, "thread": [15, 16], "usernam": 15, "password": 15, "visdom_usernam": 15, "visdom_password": 15, "frequent": 15, "slow": 15, "down": 15, "send": [15, 40, 44, 49], "avoid": [15, 65, 97, 109, 130], "situat": 15, "less": [15, 67], "seper": 16, "whatev": [16, 78, 86], "entiti": 16, "bias": 16, "cloud": [16, 65], "wrapper": [16, 44, 50, 75, 80, 100], "graph": 16, "watch": 16, "dir": 16, "model_checkpoint": 16, "require_empti": [16, 62, 66], "check_compute_fn": [17, 18, 20, 21, 22, 99], "accumul": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 44, 58, 59, 60, 61, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 129], "ground": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 97, 108, 110, 111, 113, 121], "truth": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 111, 121], "sklearn": [17, 18, 20, 21, 22, 28, 96], "average_precision_scor": 17, "process_funct": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 45, 49, 55, 88, 89, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 129], "expect": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 56, 57, 66, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126], "warn": [17, 18, 20, 21, 22, 65, 68, 99, 130], "compris": [17, 20, 21, 22], "y_pred": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 49, 51, 56, 57, 58, 59, 60, 61, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129], "probabl": [17, 20, 21, 22, 104, 125], "estim": [17, 20, 21, 22], "confid": [17, 20, 21, 22], "activ": [17, 20, 21, 22, 65, 123], "shown": [17, 20, 21, 22], "activated_output_transform": 17, "softmax": 17, "avg_precis": [17, 20, 21, 22], "79": [17, 19], "70": 17, "46": [17, 130], "54": 17, "84": [17, 127], "y_true": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 93, 96, 98, 99, 100, 101, 105, 106, 107, 111, 117, 121, 122, 124, 125, 126, 129], "average_precis": 17, "9166": 17, "cohen": 18, "kappa": 18, "wieght": 18, "quadrat": 18, "cohen_kappa_scor": 18, "whether": [18, 50, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 111, 117], "output_tranform": [18, 94, 97, 103, 108, 109, 110, 112, 113, 118, 119], "ck": 18, "4285": 18, "get_cohen_kappa_fn": 18, "scikit": [18, 23, 28, 96, 125, 126], "memori": [19, 27, 33, 34, 35, 88, 99, 130], "measur": [19, 92, 118, 125, 126, 129], "mem": 19, "59": 19, "00": [19, 102, 130], "On": [19, 102, 123, 124], "under": [19, 21, 88, 102, 123, 124], "epochwis": [19, 102, 117, 123, 124], "usage_nam": [19, 102, 123, 124, 129], "batchwis": [19, 102, 117, 123, 124], "eventenum": [19, 49, 52], "mymetr": [19, 102, 117, 123, 124], "is_attach": [19, 102, 117, 123, 124], "put": [19, 102, 123], "explicitli": [19, 102, 123], "sent": [19, 102, 123], "result": [19, 27, 50, 70, 90, 91, 99, 100, 102, 123, 124, 129], "actual": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 44, 50, 66, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126], "quantiti": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129], "interest": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 129], "shallow": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124], "flatten": [19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 93, 94, 95, 97, 99, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124], "reset": [19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 49, 65, 67, 70, 88, 92, 93, 95, 97, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 128, 130], "onc": [19, 49, 50, 52, 84, 86, 93, 95, 97, 99, 100, 102, 104, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 123, 124, 126, 129], "recal": [20, 96, 101, 114, 115, 116, 121, 124, 129], "pair": [20, 65], "threshold": [20, 22, 80, 93, 101, 125, 126, 127], "binari": [20, 22, 93, 101, 121, 125, 126], "precision_recall_curv": 20, "sigmoid_output_transform": [20, 21, 22], "sigmoid": [20, 21, 22, 121], "0474": [20, 21, 22], "5987": [20, 21, 22], "7109": [20, 21, 22], "9997": [20, 21, 22], "prec_recall_curv": 20, "round": [20, 22, 93, 101, 121, 125, 126], "6667": [20, 98, 101], "area": 21, "characterist": [21, 22], "curv": [21, 70], "roc": [21, 22], "auc": 21, "roc_auc_scor": 21, "roc_curv": [21, 22], "6666": [21, 93, 96], "roc_auc": 22, "fpr": 22, "tpr": 22, "333": 22, "inf": 22, "711": 22, "047": 22, "calcul": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 51, 93, 95, 97, 98, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 119, 121, 122, 125, 126], "canberra": 23, "cm": [23, 98, 105, 106, 121, 122, 129], "sum_": [23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, 95, 97, 104, 108, 110, 113, 125, 126], "j": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 105, 106, 111, 112], "frac": [23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 93, 97, 101, 104, 105, 106, 108, 110, 112, 113, 125, 126], "a_j": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "p_j": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "distanc": [23, 28, 37, 100, 109, 112], "__init__": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 83, 100, 123, 129], "8000": 23, "ab": [23, 70, 80, 127], "denomin": 23, "fraction": [24, 25], "absolut": [24, 26, 27, 29, 30, 33, 34, 35, 78, 86, 108], "fae": 24, "fractional_abs_error": 24, "fb": 25, "fractional_bia": 25, "4000": [25, 101], "geometr": [26, 27, 103, 120], "gmae": 26, "exp": [26, 27, 70, 95, 104], "ln": [26, 27], "2723": 26, "rel": [27, 30, 35, 80], "gmrae": 27, "math": 27, "target": [27, 33, 34, 35, 49, 54, 88, 97, 99, 107, 108, 109, 110, 112, 113, 118, 119, 121, 123, 125], "potenti": [27, 33, 34, 35, 88, 99], "ram": [27, 33, 34, 35, 88, 99], "gmare": 27, "75": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 72, 99, 108, 109, 110, 112, 113, 118, 119, 125, 126, 127], "manhattan": 28, "md": [28, 33, 34, 35], "compat": [28, 39, 125, 126], "maximum": [29, 63, 112], "maxa": 29, "max_": [29, 112], "left": [29, 30, 33, 34, 35, 68, 95, 101, 112], "lvert": [29, 105, 106, 108], "rvert": [29, 105, 106, 108], "right": [29, 30, 33, 34, 35, 68, 95, 101, 112], "mae": [29, 33, 108], "mare": 30, "mape": [30, 34], "me": 31, "625": [31, 33], "normal": [32, 81, 111, 118, 121, 129], "mnb": 32, "median": [33, 34, 35], "mdae": 33, "float32": [33, 34, 35, 36, 99, 118], "mdape": 34, "cdot": [34, 68, 95, 97], "mdrae": 35, "mrae": 35, "r": [36, 95, 101, 114, 115, 116, 124], "squar": [36, 100, 110, 112, 113], "coeffici": [36, 98], "r2": 36, "8035": 36, "wave": [37, 73], "hedg": 37, "whd": 37, "auto": [38, 39, 40, 41, 128], "num_replica": 38, "proxi": 38, "23430": 38, "issuecom": 38, "562350407": 38, "assum": [38, 96, 129], "constant": [38, 68], "follow": [39, 40, 49, 51, 55, 65, 68, 93, 94, 100, 101, 103, 111, 117, 118, 120, 121, 123, 125, 126, 129], "scale": [39, 44, 59, 70], "equal": [39, 65, 66, 67, 79, 92, 121, 130], "nproc": 39, "distributedproxysampl": 39, "pin_memori": [39, 129], "iterabledataset": 39, "mpdeviceload": 39, "_mpdeviceload": 39, "distribt": [39, 40], "train_dataset": 39, "drop_last": 39, "sync_bn": 40, "distributeddataparallel": [40, 44, 65, 68, 129], "dataparallel": [40, 65, 68], "convert_sync_batchnorm": 40, "nvidia": [40, 44], "apex": [40, 44, 60], "batchnorm": 40, "convers": 40, "amp": [40, 43, 44, 57, 59], "opt_level": 40, "goal": 41, "distributedoptim": 41, "launcher": [42, 128, 130], "spawn_kwarg": 42, "child": 42, "script": 42, "horovodrun": 42, "total": [42, 49, 55, 90, 91, 92], "machin": 42, "mandatori": 42, "tcp": 42, "ip": 42, "address": 42, "np": [42, 78, 86, 127], "3344": 42, "h": [42, 112], "hostname1": 42, "hostname2": 42, "both": [42, 111, 125, 126], "some_fil": 42, "23456": 42, "15000": 42, "func": [42, 47, 49, 129, 130], "model_transform": [43, 44, 56, 57, 58, 59, 60, 61], "amp_mod": [43, 44], "model_fn": [43, 44, 56, 57, 58, 59, 60, 61], "factori": [43, 44, 56, 57, 58, 59, 60, 61], "convert": [43, 44, 56, 57, 58, 59, 60, 61, 100, 104, 130], "assign": [43, 44, 56, 57, 58, 59, 60, 61, 100, 104, 121], "fit": [43, 56, 57], "cast": [43, 44], "float16": [43, 44, 118], "infer": [43, 56, 57, 111], "batch_pr": [43, 56, 57], "mix": [43, 44, 52], "determinist": [44, 45, 46, 47, 48, 128], "scaler": [44, 59], "gradient_accumulation_step": [44, 58, 59, 60, 61], "item": [44, 49, 58, 59, 60, 61, 65, 99, 117, 124, 129], "gradscal": [44, 59], "convert_tensor": [44, 128, 130], "tqdm_logger": 44, "prepare_batch_fn": 44, "output_transform_fn": 44, "behavior": 44, "beforehand": 44, "finish": 44, "io": 44, "html": [44, 82, 84, 87, 95], "deriv": [45, 49, 64], "dataflow": [45, 47, 90, 91, 128], "seed_offset": 45, "resum": [45, 49, 68, 92, 128], "setup_saved_rng_st": 45, "setup_sampl": 45, "benchmark": 45, "restart": [45, 49], "handl": [45, 49, 54, 65, 68, 95, 129], "state_dict_user_kei": [45, 49], "append": [45, 49, 88], "init_user_valu": [45, 49], "save_engin": [45, 49], "batch_sampl": 46, "start_iter": 46, "batchsampl": [46, 48], "update_dataload": 46, "rewind": 46, "setup_batch_indic": 46, "intact": 47, "new_batch_sampl": 48, "emit": 49, "goe": [49, 72, 73, 74, 76], "last_event_nam": 49, "interrupt": [49, 52], "featur": [49, 100, 104, 129], "behav": 49, "certain": [49, 129], "corner": 49, "compar": [49, 100], "interrupt_resume_en": 49, "basic": 49, "criterion": [49, 51, 107], "zero_grad": 49, "backward": [49, 51, 125, 126], "update_model": 49, "log_train": 49, "batch_loss": 49, "10874069479016124": 49, "1700": 49, "4217900575859437": 49, "predict_on_batch": 49, "eval": [49, 68, 100], "no_grad": [49, 100], "val_acc": [49, 64], "val_dataload": 49, "imag": [49, 100, 104, 112, 118], "std": [49, 90, 91], "compute_mean_std": 49, "reshap": 49, "dtype": [49, 94, 95, 98, 101, 103, 105, 106, 112, 118, 125, 126], "float64": [49, 94, 95, 98, 101, 103, 105, 106, 118, 125, 126], "mean2": 49, "compute_engin": 49, "img_mean": 49, "img_mean2": 49, "sqrt": [49, 100, 113], "len": [49, 107], "fire": [49, 52], "invok": 49, "No": 49, "restrict": [49, 99], "signatur": [49, 120], "bound": [49, 70, 73, 74, 76], "exception_rais": [49, 52], "print_epoch": [49, 54], "events_list": 49, "execute_someth": 49, "thing": 49, "relat": 49, "becom": [49, 52], "flexibl": [49, 52], "allow": [49, 52], "fire_ev": [49, 51], "thei": [49, 107, 111, 118], "exchang": 49, "dynam": 49, "among": 49, "has_event_handl": 49, "check": [49, 89, 123, 124, 129], "search": [49, 70], "signal": [49, 112], "check_input_data": 49, "call_interrupt": 49, "4rd": 49, "500th": 49, "499": 49, "event_to_attr": 49, "let": [49, 65, 107, 112, 123], "point": 49, "door": 49, "loop": 49, "even": [49, 52], "being": [49, 94, 103, 104], "customev": [49, 52], "foo_ev": [49, 52], "bar_ev": [49, 52], "bwd_event": 49, "opt_ev": 49, "trigger_custom_ev": 49, "do_foo_op": 49, "do_bar_op": 49, "enum": [49, 50, 54], "time_iteration_start": 49, "time_iteration_complet": 49, "tbptt_event_to_attr": 49, "time_iter": 49, "remove_event_handl": 49, "max_it": [49, 55], "At": [49, 65], "timer": [49, 63], "kept": [49, 65, 66], "NOT": 49, "repeat": [49, 72], "again": [49, 68], "taken": [49, 72, 121, 130], "account": [49, 82, 83, 84, 85, 86, 87], "count": [49, 67, 111, 125, 126], "stopiter": 49, "preprocess": 49, "latter": [49, 107, 117, 123], "usual": [49, 73, 74, 76, 107], "switch_batch": 49, "preprocess_batch": 49, "begin": 49, "set_data": 49, "next": [49, 52, 72, 73, 74, 76, 79, 80, 85], "processing_funct": 49, "newli": [49, 78, 86], "modifi": [49, 95], "switch": 49, "data1": [49, 65], "data2": 49, "switch_iter": 49, "5000": [49, 94, 101, 105, 106, 125, 126], "switch_dataload": 49, "termin": [49, 52, 63], "2669": 49, "terminate_epoch": [49, 52], "terminate_single_epoch": [49, 52], "epoch_start": [49, 52, 88, 90, 129], "event_filt": [50, 52], "touch": 50, "boolean": 50, "alwai": [50, 65], "static": [50, 65, 90, 91, 121], "before_and_after_event_filt": 50, "default_event_filt": 50, "every_before_and_after_event_filt": 50, "every_event_filt": 50, "member": [50, 125], "once_event_filt": 50, "backpropev": 51, "backward_start": 51, "backward_complet": 51, "optim_step_complet": 51, "function_before_backprop": 51, "built": [52, 107], "get_batch_start": 52, "get_batch_complet": 52, "dataloader_stop_iter": 52, "encount": [52, 121], "tabl": [52, 117, 125], "illustr": [52, 129], "custom_event_filt": 52, "call_on_special_ev": 52, "someth": [52, 53, 88, 124], "call_everi": 52, "10th": [52, 79], "call_onc": 52, "50th": [52, 102], "call_befor": 52, "call_every_itr_before_aft": 52, "depend": [52, 100, 118, 124], "combin": [52, 129], "call_on_ev": [52, 53], "stack": 53, "__or__": 53, "weakref": 54, "protocol": 54, "unregist": 54, "atom": [62, 66], "save_on_rank": [62, 65, 66], "destin": [62, 66], "damag": [62, 66], "doesnt": 62, "limit_sec": 63, "28800": 63, "limit": [63, 129], "gracefulli": 63, "exce": 63, "second": [63, 90, 92, 102, 130], "hour": 63, "__call__": [64, 83], "treat": 64, "slightli": 64, "stuck": [64, 65], "abstract": [64, 71, 74, 78, 86, 123], "metadata": 64, "addition": 64, "basenam": 64, "epoch_checkpoint": 64, "prioriti": [64, 65], "higher": [64, 67], "6554435": 64, "filename_pattern": [65, 66], "include_self": [65, 66], "greater_or_equ": [65, 66], "write": 65, "alon": 65, "get_default_score_fn": 65, "older": [65, 66], "pattern": [65, 66], "would": [65, 66, 80, 124, 129], "latest": [65, 66], "instanti": [65, 66], "structur": [65, 118], "suffix": 65, "ext": [65, 130], "constructor": 65, "compos": 65, "neg_val_loss": 65, "_neg_val_loss": 65, "1234": 65, "templat": 65, "30000": 65, "94": 65, "collid": 65, "overwritten": 65, "newer": 65, "expos": 65, "last_checkpoint": [65, 66], "checkpoint_12345": 65, "friendli": 65, "zeroredundancyoptim": 65, "wrong": [65, 129], "checkpoint_it": 65, "checkpoint_": 65, "gst": 65, "checkpoint_7000": 65, "checkpoint_8000": 65, "checkpoint_5": 65, "checkpoint_6": 65, "best_model_9_accuraci": 65, "best_model_10_accuraci": 65, "78": [65, 127], "customis": 65, "alia": 65, "field": 65, "best_acc_scor": 65, "best_model_handl": 65, "val_accuraci": 65, "neg_loss_scor": 65, "val_neg_loss": 65, "filepath": [65, 130], "model_state_dict": 65, "opt_state_dict": 65, "strict": 65, "enabl": [65, 95], "part": [65, 70], "pretrain": [65, 100, 104], "transfer": 65, "tempfil": 65, "pathlib": 65, "temporarydirectori": 65, "tmpdirnam": 65, "myprefix": [65, 66], "1e": [65, 71, 78, 97, 109, 124, 127], "randn": 65, "checkpoint_fp": 65, "myprefix_checkpoint_40": 65, "obj": 65, "reload_object": 65, "load_kwarg": 65, "filename_compon": 65, "compon": 65, "global_st": 65, "independ": [65, 78, 86], "fold": 65, "data0": 65, "setup_filename_pattern": 65, "with_prefix": 65, "with_scor": 65, "with_score_nam": 65, "with_global_step": 65, "least": [65, 89, 129], "consid": [66, 67, 124, 125, 126], "further": 66, "There": [66, 68], "counter": [66, 67, 92, 129], "action": 66, "step_numb": 66, "parent": 66, "pariti": 66, "mymodel": 66, "sort": 66, "listdir": 66, "myprefix_mymodel_20": 66, "myprefix_mymodel_30": 66, "early_stop": 67, "min_delta": 67, "cumulative_delta": 67, "minimum": [67, 70, 112], "val_loss": 67, "best_scor": 67, "ema_handl": 68, "momentum": [68, 127], "0002": 68, "momentum_warmup": 68, "warmup_it": 68, "handle_buff": 68, "exponenti": [68, 70, 82], "ema": 68, "smooth": [68, 70, 95], "theta_": 68, "t": [68, 92, 95, 96, 117, 123], "onlin": [68, 100, 129], "th": [68, 77, 111, 117, 123, 124], "retriev": [68, 86, 117], "ema_momentum": 68, "warmup": 68, "phase": [68, 81], "buffer": 68, "three": [68, 80, 129], "ema_train": 68, "ema_model": 68, "build": [68, 96], "train_step_fn": 68, "resume_from": 68, "ckpt_handler": 68, "print_ema_momentum": 68, "val_step_fn": 68, "get_val_step_fn": 68, "run_valid": 68, "val_data_load": 68, "warm": [68, 73, 74, 76, 81], "linearli": [68, 72, 73, 74, 76, 79, 85], "002": 68, "afterward": 68, "step_fn": 68, "build_gener": 68, "discrimin": 68, "build_discrimin": 68, "gen_handl": 68, "disc_handl": 68, "get_step_fn": 68, "gen_ema_momentum": 68, "dis_ema_momentum": 68, "disc_ema_momentum": 68, "warn_if_exist": 68, "suppress": 68, "choos": 68, "uniqu": 68, "thrown": 68, "lr_finder": 70, "finder": [70, 128], "boundari": 70, "manner": [70, 117], "valuabl": 70, "well": [70, 124, 125, 126], "network": [70, 73, 121], "trainer_with_lr_find": 70, "get_result": [70, 90, 91], "matplotlib": [70, 71, 86, 127], "suggest": [70, 73], "lr_suggest": 70, "exit": 70, "cyclic": [70, 73, 74, 76, 127], "neural": [70, 73, 128], "arxiv": 70, "1506": 70, "01186": 70, "fastai": 70, "lr_find": 70, "apply_suggested_lr": 70, "num_it": 70, "start_lr": 70, "end_lr": 70, "step_mod": 70, "smooth_f": 70, "05": [70, 76, 79, 80, 81, 119], "diverge_th": 70, "lower": 70, "upper": 70, "factor": [70, 80, 82, 84, 87, 101, 117, 127], "best_loss": 70, "find": [70, 100], "numer": 70, "skip_start": 70, "skip_end": 70, "log_lr": 70, "display_suggest": 70, "ax": 70, "trim": 70, "logarithm": 70, "red": 70, "dot": 70, "pre": 70, "plt": [70, 71, 78, 86, 127], "subplot": [70, 127], "figur": [70, 71, 127], "savefig": 70, "jpg": 70, "param_schedul": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "save_histori": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "param_histori": [71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "get_param": [71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87], "plot_valu": 71, "num_ev": [71, 72, 75, 77, 78, 80, 86, 127], "scheduler_kwarg": [71, 78, 80, 86], "line": 71, "line2d": 71, "pylab": [71, 127], "figsiz": [71, 127], "linearcyclicalschedul": [71, 72, 78], "start_valu": [71, 73, 74, 76, 78, 127], "end_valu": [71, 73, 74, 76, 78, 127], "cycle_s": [71, 73, 74, 76, 78, 127], "simulate_valu": [71, 72, 75, 77, 78, 80, 86, 127], "event_index": [71, 72, 75, 77, 78, 80, 83, 86], "durat": [72, 73, 74, 76, 81, 127], "concat": [72, 127], "default_train": [72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 117], "scheduler_1": [72, 73, 77, 127], "scheduler_2": [72, 73, 77, 127], "cosineannealingschedul": [72, 77], "anneal": [72, 73, 127], "cycl": [72, 73, 74, 76, 77], "indefinit": 72, "combined_schedul": 72, "print_lr": [72, 73, 75, 76, 77, 79, 81], "8828": 72, "6000": 72, "3171": 72, "value_0": 72, "value_1": 72, "cycle_mult": [73, 74, 76, 127], "start_value_mult": [73, 74, 76, 127], "end_value_mult": [73, 74, 76, 127], "warmup_dur": [73, 74, 76, 81], "param_group_index": [73, 74, 76, 77, 78, 79, 80], "half": [73, 76], "cosin": [73, 97, 127], "smith17": 73, "ratio": [73, 74, 76, 112], "iteration_": [73, 74, 76], "cosineann": [73, 77], "1464": [73, 77], "4999": [73, 77, 96], "8535": [73, 77], "001": [73, 75, 76, 77, 127], "01464": [73, 77], "04999": [73, 77], "08535": [73, 77], "smith": 73, "lesli": 73, "vision": 73, "wacv": 73, "2017": [73, 100], "ieee": 73, "winter": 73, "confer": 73, "use_legaci": 75, "steplr": [75, 87, 127], "torch_lr_schedul": [75, 81], "step_siz": [75, 86, 87, 127], "gamma": [75, 81, 82, 83, 84, 86, 87, 127], "010": 75, "monoton": 76, "kwagr": 76, "adjust": [76, 118], "descend": 76, "ascend": 76, "togeth": [76, 129], "scheduler1": [76, 79], "scheduler2": [76, 79], "histori": [77, 80, 88, 99, 129], "scheduler_0_valu": 77, "scheduler_1_valu": 77, "scheduler_i_valu": 77, "lr_valu": [78, 127], "arrai": [78, 86, 127], "xlabel": [78, 86, 127], "ylabel": [78, 86, 127], "milestones_valu": [79, 85], "piecewis": [79, 85], "mileston": [79, 84, 85], "45": 79, "decreas": [79, 80], "20th": 79, "jump": 79, "21st": 79, "30th": 79, "till": 79, "third": [79, 129], "fifth": 79, "milestones_values1": 79, "08": [79, 97], "02": [79, 130], "milestones_values2": 79, "09": 79, "reducelronplateau": 80, "whose": [80, 125], "monitor": 80, "paramat": 80, "unit": [80, 121], "most": [80, 129], "multipli": 80, "threshold_mod": [80, 127], "metric_valu": [80, 127], "set_metric_v": 80, "trigger_ev": 80, "init_lr": [80, 127], "warmup_start_valu": 81, "warmup_end_valu": 81, "output_simulated_valu": 81, "fill": 81, "concatschedul": 81, "exponentiallr": [81, 82, 127], "98": [81, 117, 127], "098": 81, "09604": 81, "09411": 81, "09223": 81, "09039": 81, "state_param_schedul": [82, 83, 84, 85, 86, 87], "initial_valu": [82, 83, 84, 86, 87], "create_new": [82, 83, 84, 85, 86, 87], "decai": [82, 84, 87, 117], "stabl": [82, 84, 87], "81": [82, 83, 84, 87, 127], "729": [82, 83, 84, 87], "6561": [82, 83, 84, 87], "print_param": [82, 83, 84, 85, 87], "7290": [82, 83, 84, 87], "lambda_obj": 83, "lambdast": 83, "self": [83, 88, 100, 123, 129], "event_endex": 83, "5904": [83, 87], "5314": 83, "4782": 83, "4304": 83, "reach": 84, "multisteplr": 84, "96": 85, "92": 85, "88": 85, "8400": 85, "76": 85, "72": 85, "68": 85, "pyplot": [86, 127], "step_state_param_valu": 86, "stepstateschedul": 86, "step_scheduled_param": 86, "99": 86, "visual": [88, 127], "purpos": [88, 129], "eo": 88, "log_training_result": [88, 91], "y_pred0": 88, "y0": 88, "y_pred1": 88, "y1": 88, "terminate_on_nan": 89, "nan": [89, 103], "infinit": 89, "time_profil": [90, 91], "profil": [90, 91, 128], "train_updat": [90, 91], "log_intermediate_result": [90, 91], "print_result": [90, 91], "write_result": [90, 91], "path_to_dir": [90, 91], "csv": [90, 91], "aggreg": [90, 91, 103], "stat": [90, 125, 126], "157": 90, "46292": 90, "01452": 90, "1501": 90, "26905": 90, "07730": 90, "01258": 90, "11384": 90, "00008": 90, "1935": 90, "28461": 90, "1551": 90, "00300": 90, "02693": 90, "82721": 90, "00000": 90, "00006": 90, "piecewiselinear": 90, "03482": 90, "00001": 90, "188": 90, "00018": 90, "679": 90, "00002": 90, "20037": 90, "866": 90, "00089": 90, "1943": 90, "00010": 90, "00003": [90, 91], "empty_cuda_cach": 90, "log_elapsed_tim": [90, 91], "57860": 90, "11529": 90, "14977": 90, "12893": 90, "00790": 90, "yet": 90, "unaggreg": [90, 91], "awesome_filenam": [90, 91], "processing_stat": [90, 91], "dataflow_stat": [90, 91], "event_start": 90, "252387": [90, 91], "125676": [90, 91], "00029": [90, 91], "252342": [90, 91], "125123": [90, 91], "43245": 91, "log_validation_result": 91, "55271": 91, "log_tim": 91, "00049": 91, "00106": 91, "log_training_loss": 91, "059": 91, "04571": 91, "took": 91, "29543": 91, "00393": 91, "1875": 91, "00784": 91, "00602": 91, "00034": 91, "24365": 91, "00533": 91, "1874": 91, "01129": 91, "937": 91, "00866": 91, "00113": 91, "divid": 92, "step_count": 92, "increment": 92, "forget": 92, "sleep": 92, "idl": 92, "003073937026784": 92, "2003182829997968": 92, "paus": 92, "10016545779653825": 92, "training_update_funct": 92, "callback": 92, "is_multilabel": [93, 96, 125, 126], "multiclass": [93, 96, 101, 125, 126], "multilabel": [93, 96, 125, 126], "tp": [93, 125, 126], "tn": 93, "fp": [93, 125], "num_categori": [93, 96, 101, 125, 126], "greater": 93, "visit": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126], "0266": [93, 96, 101, 125, 126], "1719": [93, 96, 101, 125, 126], "3055": [93, 96, 101, 125, 126], "6886": [93, 96, 101, 125, 126], "3978": [93, 96, 101, 125, 126], "8176": [93, 96, 101, 125, 126], "9230": [93, 96, 101, 125, 126], "0197": [93, 96, 101, 125, 126], "8395": [93, 96, 101, 125, 126], "1785": [93, 96, 101, 125, 126], "2670": [93, 96, 101, 125, 126], "6084": [93, 96, 101, 125, 126], "8448": [93, 96, 101, 125, 126], "7177": [93, 96, 101, 125, 126], "7288": [93, 96, 101, 125, 126], "7748": [93, 96, 101], "9542": [93, 96, 101], "8573": [93, 96, 101], "element": [93, 101, 125, 126], "thresholded_output_transform": [93, 101, 125, 126], "65": [93, 101, 125, 126], "arithmet": [94, 120, 128], "rule": [94, 103, 120], "nd": [94, 103, 120], "seen": [94, 103, 121], "avg": [94, 96, 103], "er": [94, 103], "ngram": [95, 116], "no_smooth": 95, "macro": [95, 96, 125, 126], "b_": 95, "w_": 95, "p_": 95, "gram": 95, "sentenc": 95, "breveti": 95, "penalti": 95, "papineni": 95, "et": [95, 100, 104], "al": [95, 100, 104], "2002": 95, "review": 95, "techniqu": 95, "chen": 95, "2014": 95, "hypothes": 95, "corpu": 95, "remark": [95, 100], "inspir": [95, 100], "nltk": 95, "smooth1": 95, "nltk_smooth2": 95, "smooth2": 95, "micro": [95, 125, 126], "www": 95, "_modul": 95, "translat": 95, "bleu_scor": 95, "nlp": 95, "m": [95, 111, 114, 115, 116, 129], "cat": [95, 114, 115, 116], "mat": [95, 114, 115, 116], "split": [95, 114, 115, 116], "_y": 95, "0393": 95, "output_dict": 96, "resembl": 96, "classification_report": 96, "underli": 96, "doesn": [96, 117], "harmon": [96, 101, 120], "metricslambda": [96, 98, 101, 105, 106, 122, 129], "cr": 96, "dict_kei": 96, "f1": [96, 124, 129], "3333": [96, 125], "3999": 96, "6111": 96, "5222": [96, 101], "2333": 96, "ep": [97, 109], "similar": [97, 118, 129], "_similar": 97, "x_i": 97, "y_i": 97, "_2": 97, "epsilon": 97, "y_": [97, 108, 110, 113], "x_": [97, 108, 110, 113], "small": [97, 109], "divis": [97, 109], "cosine_similar": 97, "pred": [97, 108, 109, 110, 112, 113, 118, 119], "5080491304397583": 97, "ignore_index": [98, 105, 106, 122], "dice": 98, "confusionmatrix": [98, 105, 106, 122, 129], "confus": [98, 105, 106, 111, 121, 122], "matrix": [98, 100, 105, 106, 111, 121, 122, 129], "background": [98, 105, 106, 121, 122, 129], "num_class": [98, 105, 106, 111, 121, 122, 129, 130], "0000": [98, 105, 106, 125, 126], "compute_fn": 99, "entir": [99, 129], "n_target": 99, "datatyp": 99, "might": [99, 118], "mse_fn": 99, "y_target": 99, "type_a": 99, "mse": [99, 110, 112], "5729": 99, "epochmetricwarn": 99, "disabl": 99, "num_featur": [100, 104], "feature_extractor": [100, 104], "frechet": 100, "incept": [100, 104], "mu_": 100, "tr": 100, "sigma_": 100, "sigma_1": 100, "sigma_2": 100, "mu_1": 100, "covari": 100, "mu_2": 100, "heusel": 100, "faster": 100, "approach": 100, "mathiasen": 100, "2020": [100, 130], "pytorch_fid": 100, "torchvis": [100, 104], "scipi": 100, "root": [100, 113], "vector": [100, 119, 121, 129], "2048": 100, "extract": 100, "neither": [100, 104], "nor": [100, 104], "imagenet": [100, 104], "ident": [100, 104], "implicitli": [100, 104], "mention": [100, 104], "inceptionv3": 100, "wrapperinceptionv3": 100, "fid_incv3": 100, "super": [100, 123, 129], "block_idx": 100, "block_index_by_dim": 100, "wrapper_model": 100, "pytorch_fid_metr": 100, "f_": 101, "real": [101, 104], "unweight": [101, 125, 126], "7499": 101, "wps_metric": 102, "ntoken": 102, "wp": 102, "400": 102, "prod": 103, "8171": 103, "2134": 103, "d_": 104, "kl": 104, "hat": 104, "condit": [104, 129], "margin": 104, "diverg": 104, "barratt": 104, "299": 104, "intersect": [105, 122], "cap": [105, 106], "cup": [105, 106], "jaccard": 106, "iou": [106, 129], "jac": 106, "observ": 107, "extra": 107, "required_output_kei": [107, 117, 120, 123], "criterion_kwarg": 107, "standard": [107, 118, 123, 130], "nllloss": 107, "3499999": 107, "9375": [108, 124], "pairwisedist": 109, "pairwis": 109, "degre": 109, "mpd": 109, "5955": 109, "828125": 110, "denot": 111, "uint8": [111, 130], "int8": 111, "int16": 111, "int32": 111, "int64": 111, "mlcm": 111, "data_rang": [112, 118], "peak": 112, "nois": 112, "log_": 112, "8671405": 112, "grayscal": 112, "rgb": 112, "But": 112, "ycbcr": 112, "yuv": 112, "channel": 112, "And": [112, 129], "get_y_channel": 112, "219": 112, "7027966": 112, "rmse": 113, "956559480312316": 113, "variant": 114, "multiref": [114, 115, 116], "lin": [114, 115, 116], "2004": [114, 115, 116], "candid": [114, 115, 116], "roug": [115, 116], "longest": 115, "co": 116, "epoch_bound": 117, "hold": 117, "deprac": 117, "singleepochrunningbatchwis": 117, "runningbatchwis": 117, "running_avg_accuraci": 117, "log_running_avg_metr": 117, "zip": 117, "98039": 117, "98079": 117, "96117": 117, "96195": 117, "020000": 117, "019600": 117, "039208": 117, "038423": 117, "057655": 117, "insert": 117, "metricusag": [117, 123, 124], "former": 117, "runningepochwis": 117, "much": 117, "sens": [117, 125, 126], "detach": [117, 123, 124, 129], "conjunct": [117, 123, 124], "sever": [117, 123, 124], "expens": [117, 123, 124], "epoch_wis": [117, 123, 124], "batch_wis": [117, 123, 124], "kernel_s": 118, "sigma": 118, "k1": 118, "k2": 118, "03": 118, "gaussian": 118, "bfloat16": 118, "typic": 118, "255": [118, 121], "kernel": 118, "deviat": 118, "uniform": 118, "un": 118, "9218971": 118, "k": [119, 125, 126], "categor": 119, "one_hot_to_binary_output_transform": 119, "argmax": [119, 121, 129], "hot": [119, 121, 130], "top_k_accuraci": 119, "public": [120, 123], "num_exampl": 120, "confusion_matrix": 121, "logit": 121, "schema": 121, "diagon": 121, "column": 121, "row": 121, "were": [121, 125, 126], "correctli": 121, "horizont": 121, "vertic": 121, "neglect": 121, "binary_one_hot_output_transform": 121, "to_onehot": [121, 128, 130], "24999": 122, "discuss": 123, "91221": 123, "custommetr": 123, "re": [123, 129], "becam": 123, "written": [123, 124, 130], "major": 123, "pick": 123, "proper": 123, "_state_dict_all_req_kei": 123, "metrics_lambda": 124, "obtain": 124, "recurs": 124, "partial": [124, 129], "fed": 124, "fbeta": 124, "f2": 124, "f3": 124, "f4": 124, "8571": 124, "9677": 124, "9807": 124, "too": 124, "ap": 124, "_baseprecisionrecal": [125, 126], "multicalss": [125, 126], "altogeth": [125, 126], "tp_k": [125, 126], "fp_k": 125, "v": [125, 126], "rest": [125, 126], "basi": [125, 126], "tp_n": [125, 126], "fp_n": 125, "incompat": [125, 126], "imbal": [125, 126], "precision_k": 125, "p_k": [125, 126], "weighted_metr": 125, "two_class_metr": [125, 126], "6666666666666666": [125, 126], "7500": [125, 126], "macro_metr": [125, 126], "27777777777777773": 125, "3333333333333333": [125, 126, 129], "num_label": 125, "micro_metr": [125, 126], "samples_metr": [125, 126], "2000": 125, "2222222222222222": 125, "2333333333333333": 125, "175": 125, "stand": 125, "consist": 125, "fn_k": 126, "fn_n": 126, "recall_k": 126, "section": 127, "lr_values_1": 127, "2e": 127, "lr_values_2": 127, "lr_values_3": 127, "lr_values_4": 127, "141": 127, "ylim": 127, "142": 127, "143": 127, "144": 127, "131": 127, "132": 127, "133": 127, "150": 127, "cosineannealinglr": 127, "lr_scheduler_1": 127, "lr_scheduler_2": 127, "lr_scheduler_3": 127, "t_max": 127, "eta_min": 127, "121": 127, "122": 127, "82": 127, "83": 127, "80": 127, "suptitl": 127, "xtick": 127, "high": 128, "flexibli": 128, "our": 128, "apply_to_tensor": [128, 130], "apply_to_typ": [128, 130], "hash_checkpoint": [128, 130], "setup_logg": [128, 130], "truncat": 128, "backpropag": 128, "throught": 128, "fashion": 129, "practic": 129, "respons": 129, "care": 129, "metrics_group": 129, "As": 129, "functool": 129, "ot_func": 129, "snippet": 129, "device_id": 129, "output_devic": 129, "test_sampl": 129, "test_dataset": 129, "test_load": 129, "becaus": 129, "parti": 129, "dill": 129, "overcom": 129, "give": 129, "fine": 129, "grain": 129, "metric1": 129, "metric2": 129, "pow": 129, "unaverag": 129, "iou_metr": 129, "iou_no_bg_metr": 129, "mean_iou_no_bg_metr": 129, "12345": 129, "These": 129, "customaccuraci": 129, "ignored_class": 129, "_num_correct": 129, "_num_exampl": 129, "_devic": 129, "mask": 129, "eq": 129, "view": 129, "necessari": 129, "notic": 129, "differenti": 129, "inter": 129, "four": 129, "accompani": 129, "reinit": 129, "attr": 129, "abil": 129, "byte": 130, "input_typ": 130, "relev": 130, "pin": 130, "checkpoint_path": 130, "output_dir": 130, "hash": 130, "check_hash": 130, "hub": 130, "load_state_dict_from_url": 130, "digit": 130, "sha256": 130, "manual_seed_al": 130, "set_rng_stat": 130, "stream": 130, "asctim": 130, "levelnam": 130, "distributed_rank": 130, "critic": 130, "debug": 130, "textio": 130, "sy": 130, "readabl": 130, "07": 130, "356": 130, "358": 130, "my": 130, "torchscript": 130}, "objects": {"": [[128, 0, 0, "-", "ignite"]], "ignite": [[128, 0, 0, "-", "contrib"], [130, 0, 0, "-", "utils"]], "ignite.contrib.engines": [[0, 0, 0, "-", "common"], [0, 0, 0, "-", "tbptt"]], "ignite.contrib.engines.common": [[0, 1, 1, "", "add_early_stopping_by_val_score"], [0, 1, 1, "", "gen_save_best_models_by_val_score"], [0, 1, 1, "", "save_best_model_by_val_score"], [0, 1, 1, "", "setup_any_logging"], [0, 1, 1, "", "setup_clearml_logging"], [0, 1, 1, "", "setup_common_distrib_training_handlers"], [0, 1, 1, "", "setup_common_training_handlers"], [0, 1, 1, "", "setup_mlflow_logging"], [0, 1, 1, "", "setup_neptune_logging"], [0, 1, 1, "", "setup_plx_logging"], [0, 1, 1, "", "setup_tb_logging"], [0, 1, 1, "", "setup_trains_logging"], [0, 1, 1, "", "setup_visdom_logging"], [0, 1, 1, "", "setup_wandb_logging"]], "ignite.contrib.engines.tbptt": [[0, 2, 1, "", "Tbptt_Events"], [0, 1, 1, "", "create_supervised_tbptt_trainer"]], "ignite.contrib.handlers": [[8, 0, 0, "-", "base_logger"], [9, 0, 0, "-", "clearml_logger"], [10, 0, 0, "-", "mlflow_logger"], [11, 0, 0, "-", "neptune_logger"], [12, 0, 0, "-", "polyaxon_logger"], [13, 0, 0, "-", "tensorboard_logger"], [14, 0, 0, "-", "tqdm_logger"], [15, 0, 0, "-", "visdom_logger"], [16, 0, 0, "-", "wandb_logger"]], "ignite.contrib.handlers.base_logger": [[8, 2, 1, "", "BaseHandler"], [8, 2, 1, "", "BaseLogger"], [8, 2, 1, "", "BaseOptimizerParamsHandler"], [8, 2, 1, "", "BaseOutputHandler"], [8, 2, 1, "", "BaseWeightsHandler"], [8, 2, 1, "", "BaseWeightsScalarHandler"]], "ignite.contrib.handlers.base_logger.BaseLogger": [[8, 3, 1, "", "attach"], [8, 3, 1, "", "attach_opt_params_handler"], [8, 3, 1, "", "attach_output_handler"]], "ignite.contrib.handlers.clearml_logger": [[9, 2, 1, "", "ClearMLLogger"], [9, 2, 1, "", "ClearMLSaver"], [9, 2, 1, "", "GradsHistHandler"], [9, 2, 1, "", "GradsScalarHandler"], [9, 2, 1, "", "OptimizerParamsHandler"], [9, 2, 1, "", "OutputHandler"], [9, 2, 1, "", "WeightsHistHandler"], [9, 2, 1, "", "WeightsScalarHandler"], [9, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.clearml_logger.ClearMLLogger": [[9, 3, 1, "", "bypass_mode"], [9, 3, 1, "", "get_task"], [9, 3, 1, "", "set_bypass_mode"]], "ignite.contrib.handlers.clearml_logger.ClearMLSaver": [[9, 3, 1, "", "get_local_copy"], [9, 3, 1, "", "remove"]], "ignite.contrib.handlers.mlflow_logger": [[10, 2, 1, "", "MLflowLogger"], [10, 2, 1, "", "OptimizerParamsHandler"], [10, 2, 1, "", "OutputHandler"], [10, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger": [[11, 2, 1, "", "GradsScalarHandler"], [11, 2, 1, "", "NeptuneLogger"], [11, 2, 1, "", "NeptuneSaver"], [11, 2, 1, "", "OptimizerParamsHandler"], [11, 2, 1, "", "OutputHandler"], [11, 2, 1, "", "WeightsScalarHandler"], [11, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger.NeptuneSaver": [[11, 3, 1, "", "remove"]], "ignite.contrib.handlers.polyaxon_logger": [[12, 2, 1, "", "OptimizerParamsHandler"], [12, 2, 1, "", "OutputHandler"], [12, 2, 1, "", "PolyaxonLogger"], [12, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.tensorboard_logger": [[13, 2, 1, "", "GradsHistHandler"], [13, 2, 1, "", "GradsScalarHandler"], [13, 2, 1, "", "OptimizerParamsHandler"], [13, 2, 1, "", "OutputHandler"], [13, 2, 1, "", "TensorboardLogger"], [13, 2, 1, "", "WeightsHistHandler"], [13, 2, 1, "", "WeightsScalarHandler"], [13, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.tqdm_logger": [[14, 2, 1, "", "ProgressBar"]], "ignite.contrib.handlers.tqdm_logger.ProgressBar": [[14, 3, 1, "", "attach"], [14, 3, 1, "", "attach_opt_params_handler"], [14, 3, 1, "", "log_message"]], "ignite.contrib.handlers.visdom_logger": [[15, 2, 1, "", "GradsScalarHandler"], [15, 2, 1, "", "OptimizerParamsHandler"], [15, 2, 1, "", "OutputHandler"], [15, 2, 1, "", "VisdomLogger"], [15, 2, 1, "", "WeightsScalarHandler"], [15, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.handlers.wandb_logger": [[16, 2, 1, "", "OptimizerParamsHandler"], [16, 2, 1, "", "OutputHandler"], [16, 2, 1, "", "WandBLogger"], [16, 1, 1, "", "global_step_from_engine"]], "ignite.contrib.metrics": [[17, 2, 1, "", "AveragePrecision"], [18, 2, 1, "", "CohenKappa"], [19, 2, 1, "", "GpuInfo"], [20, 2, 1, "", "PrecisionRecallCurve"], [21, 2, 1, "", "ROC_AUC"], [22, 2, 1, "", "RocCurve"], [2, 0, 0, "-", "regression"]], "ignite.contrib.metrics.CohenKappa": [[18, 3, 1, "", "get_cohen_kappa_fn"]], "ignite.contrib.metrics.GpuInfo": [[19, 3, 1, "", "attach"], [19, 3, 1, "", "completed"], [19, 3, 1, "", "compute"], [19, 3, 1, "", "reset"], [19, 3, 1, "", "update"]], "ignite.contrib.metrics.PrecisionRecallCurve": [[20, 3, 1, "", "compute"]], "ignite.contrib.metrics.RocCurve": [[22, 3, 1, "", "compute"]], "ignite.contrib.metrics.regression": [[23, 2, 1, "", "CanberraMetric"], [24, 2, 1, "", "FractionalAbsoluteError"], [25, 2, 1, "", "FractionalBias"], [26, 2, 1, "", "GeometricMeanAbsoluteError"], [27, 2, 1, "", "GeometricMeanRelativeAbsoluteError"], [28, 2, 1, "", "ManhattanDistance"], [29, 2, 1, "", "MaximumAbsoluteError"], [30, 2, 1, "", "MeanAbsoluteRelativeError"], [31, 2, 1, "", "MeanError"], [32, 2, 1, "", "MeanNormalizedBias"], [33, 2, 1, "", "MedianAbsoluteError"], [34, 2, 1, "", "MedianAbsolutePercentageError"], [35, 2, 1, "", "MedianRelativeAbsoluteError"], [36, 2, 1, "", "R2Score"], [37, 2, 1, "", "WaveHedgesDistance"]], "ignite.contrib.metrics.regression.CanberraMetric": [[23, 3, 1, "", "compute"], [23, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalAbsoluteError": [[24, 3, 1, "", "compute"], [24, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.FractionalBias": [[25, 3, 1, "", "compute"], [25, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError": [[26, 3, 1, "", "compute"], [26, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError": [[27, 3, 1, "", "compute"], [27, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.ManhattanDistance": [[28, 3, 1, "", "compute"], [28, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MaximumAbsoluteError": [[29, 3, 1, "", "compute"], [29, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError": [[30, 3, 1, "", "compute"], [30, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanError": [[31, 3, 1, "", "compute"], [31, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.MeanNormalizedBias": [[32, 3, 1, "", "compute"], [32, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.R2Score": [[36, 3, 1, "", "compute"], [36, 3, 1, "", "reset"]], "ignite.contrib.metrics.regression.WaveHedgesDistance": [[37, 3, 1, "", "compute"], [37, 3, 1, "", "reset"]], "ignite.distributed.auto": [[38, 2, 1, "", "DistributedProxySampler"], [39, 1, 1, "", "auto_dataloader"], [40, 1, 1, "", "auto_model"], [41, 1, 1, "", "auto_optim"]], "ignite.distributed.launcher": [[42, 2, 1, "", "Parallel"]], "ignite.distributed.launcher.Parallel": [[42, 3, 1, "", "run"]], "ignite.distributed": [[4, 0, 0, "-", "utils"]], "ignite.distributed.utils": [[4, 1, 1, "", "all_gather"], [4, 1, 1, "", "all_reduce"], [4, 1, 1, "", "available_backends"], [4, 1, 1, "", "backend"], [4, 1, 1, "", "barrier"], [4, 1, 1, "", "broadcast"], [4, 1, 1, "", "device"], [4, 1, 1, "", "finalize"], [4, 1, 1, "", "get_local_rank"], [4, 1, 1, "", "get_nnodes"], [4, 1, 1, "", "get_node_rank"], [4, 1, 1, "", "get_nproc_per_node"], [4, 1, 1, "", "get_rank"], [4, 1, 1, "", "get_world_size"], [4, 4, 1, "", "has_native_dist_support"], [4, 4, 1, "", "has_xla_support"], [4, 1, 1, "", "hostname"], [4, 1, 1, "", "initialize"], [4, 1, 1, "", "model_name"], [4, 1, 1, "", "new_group"], [4, 1, 1, "", "one_rank_first"], [4, 1, 1, "", "one_rank_only"], [4, 1, 1, "", "set_local_rank"], [4, 1, 1, "", "show_config"], [4, 1, 1, "", "spawn"], [4, 1, 1, "", "sync"]], "ignite.engine": [[43, 1, 1, "", "create_supervised_evaluator"], [44, 1, 1, "", "create_supervised_trainer"], [56, 1, 1, "", "supervised_evaluation_step"], [57, 1, 1, "", "supervised_evaluation_step_amp"], [58, 1, 1, "", "supervised_training_step"], [59, 1, 1, "", "supervised_training_step_amp"], [60, 1, 1, "", "supervised_training_step_apex"], [61, 1, 1, "", "supervised_training_step_tpu"]], "ignite.engine.deterministic": [[45, 2, 1, "", "DeterministicEngine"], [46, 2, 1, "", "ReproducibleBatchSampler"], [47, 1, 1, "", "keep_random_state"], [48, 1, 1, "", "update_dataloader"]], "ignite.engine.deterministic.DeterministicEngine": [[45, 3, 1, "", "state_dict"]], "ignite.engine.deterministic.ReproducibleBatchSampler": [[46, 3, 1, "", "setup_batch_indices"]], "ignite.engine.engine": [[49, 2, 1, "", "Engine"]], "ignite.engine.engine.Engine": [[49, 3, 1, "", "add_event_handler"], [49, 3, 1, "", "fire_event"], [49, 3, 1, "", "has_event_handler"], [49, 3, 1, "", "interrupt"], [49, 4, 1, "", "last_event_name"], [49, 3, 1, "", "load_state_dict"], [49, 3, 1, "", "on"], [49, 3, 1, "", "register_events"], [49, 3, 1, "", "remove_event_handler"], [49, 3, 1, "", "run"], [49, 3, 1, "", "set_data"], [49, 4, 1, "", "state"], [49, 3, 1, "", "state_dict"], [49, 3, 1, "", "terminate"], [49, 3, 1, "", "terminate_epoch"]], "ignite.engine.events": [[50, 2, 1, "", "CallableEventWithFilter"], [51, 2, 1, "", "EventEnum"], [52, 2, 1, "", "Events"], [53, 2, 1, "", "EventsList"], [54, 2, 1, "", "RemovableEventHandle"], [55, 2, 1, "", "State"]], "ignite.engine.events.CallableEventWithFilter": [[50, 3, 1, "", "before_and_after_event_filter"], [50, 3, 1, "", "default_event_filter"], [50, 3, 1, "", "every_before_and_after_event_filter"], [50, 3, 1, "", "every_event_filter"], [50, 4, 1, "", "name"], [50, 3, 1, "", "once_event_filter"], [50, 4, 1, "", "value"]], "ignite.engine.events.Events": [[52, 4, 1, "", "COMPLETED"], [52, 4, 1, "", "DATALOADER_STOP_ITERATION"], [52, 4, 1, "", "EPOCH_COMPLETED"], [52, 4, 1, "", "EPOCH_STARTED"], [52, 4, 1, "", "EXCEPTION_RAISED"], [52, 4, 1, "", "GET_BATCH_COMPLETED"], [52, 4, 1, "", "GET_BATCH_STARTED"], [52, 4, 1, "", "INTERRUPT"], [52, 4, 1, "", "ITERATION_COMPLETED"], [52, 4, 1, "", "ITERATION_STARTED"], [52, 4, 1, "", "STARTED"], [52, 4, 1, "", "TERMINATE"], [52, 4, 1, "", "TERMINATE_SINGLE_EPOCH"]], "ignite.engine.events.RemovableEventHandle": [[54, 3, 1, "", "remove"]], "ignite.engine.events.State": [[55, 3, 1, "", "get_event_attrib_value"]], "ignite.exceptions": [[6, 2, 1, "", "NotComputableError"]], "ignite.handlers": [[62, 2, 1, "", "DiskSaver"], [63, 2, 1, "", "TimeLimit"], [69, 1, 1, "", "global_step_from_engine"]], "ignite.handlers.DiskSaver": [[62, 3, 1, "", "remove"]], "ignite.handlers.checkpoint": [[64, 2, 1, "", "BaseSaveHandler"], [65, 2, 1, "", "Checkpoint"], [66, 2, 1, "", "ModelCheckpoint"]], "ignite.handlers.checkpoint.BaseSaveHandler": [[64, 3, 1, "", "__call__"], [64, 3, 1, "", "remove"]], "ignite.handlers.checkpoint.Checkpoint": [[65, 2, 1, "", "Item"], [65, 3, 1, "", "get_default_score_fn"], [65, 3, 1, "", "load_objects"], [65, 3, 1, "", "load_state_dict"], [65, 3, 1, "", "reload_objects"], [65, 3, 1, "", "reset"], [65, 3, 1, "", "setup_filename_pattern"], [65, 3, 1, "", "state_dict"]], "ignite.handlers.checkpoint.Checkpoint.Item": [[65, 4, 1, "", "filename"], [65, 4, 1, "", "priority"]], "ignite.handlers.early_stopping": [[67, 2, 1, "", "EarlyStopping"]], "ignite.handlers.early_stopping.EarlyStopping": [[67, 3, 1, "", "load_state_dict"], [67, 3, 1, "", "state_dict"]], "ignite.handlers.ema_handler": [[68, 2, 1, "", "EMAHandler"]], "ignite.handlers.ema_handler.EMAHandler": [[68, 3, 1, "", "attach"], [68, 4, 1, "", "ema_model"], [68, 4, 1, "", "handle_buffers"], [68, 4, 1, "", "model"], [68, 4, 1, "", "momentum"]], "ignite.handlers.lr_finder": [[70, 2, 1, "", "FastaiLRFinder"]], "ignite.handlers.lr_finder.FastaiLRFinder": [[70, 3, 1, "", "apply_suggested_lr"], [70, 3, 1, "", "attach"], [70, 3, 1, "", "get_results"], [70, 3, 1, "", "lr_suggestion"], [70, 3, 1, "", "plot"]], "ignite.handlers.param_scheduler": [[71, 2, 1, "", "BaseParamScheduler"], [72, 2, 1, "", "ConcatScheduler"], [73, 2, 1, "", "CosineAnnealingScheduler"], [74, 2, 1, "", "CyclicalScheduler"], [75, 2, 1, "", "LRScheduler"], [76, 2, 1, "", "LinearCyclicalScheduler"], [77, 2, 1, "", "ParamGroupScheduler"], [78, 2, 1, "", "ParamScheduler"], [79, 2, 1, "", "PiecewiseLinear"], [80, 2, 1, "", "ReduceLROnPlateauScheduler"], [81, 1, 1, "", "create_lr_scheduler_with_warmup"]], "ignite.handlers.param_scheduler.BaseParamScheduler": [[71, 3, 1, "", "get_param"], [71, 3, 1, "", "load_state_dict"], [71, 3, 1, "", "plot_values"], [71, 3, 1, "", "simulate_values"], [71, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ConcatScheduler": [[72, 3, 1, "", "get_param"], [72, 3, 1, "", "load_state_dict"], [72, 3, 1, "", "simulate_values"], [72, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.CosineAnnealingScheduler": [[73, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.LRScheduler": [[75, 3, 1, "", "get_param"], [75, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[76, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ParamGroupScheduler": [[77, 3, 1, "", "get_param"], [77, 3, 1, "", "load_state_dict"], [77, 3, 1, "", "simulate_values"], [77, 3, 1, "", "state_dict"]], "ignite.handlers.param_scheduler.ParamScheduler": [[78, 3, 1, "", "simulate_values"]], "ignite.handlers.param_scheduler.PiecewiseLinear": [[79, 3, 1, "", "get_param"]], "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[80, 3, 1, "", "get_param"], [80, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler": [[82, 2, 1, "", "ExpStateScheduler"], [83, 2, 1, "", "LambdaStateScheduler"], [84, 2, 1, "", "MultiStepStateScheduler"], [85, 2, 1, "", "PiecewiseLinearStateScheduler"], [86, 2, 1, "", "StateParamScheduler"], [87, 2, 1, "", "StepStateScheduler"]], "ignite.handlers.state_param_scheduler.ExpStateScheduler": [[82, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.LambdaStateScheduler": [[83, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.MultiStepStateScheduler": [[84, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler": [[85, 3, 1, "", "get_param"]], "ignite.handlers.state_param_scheduler.StateParamScheduler": [[86, 3, 1, "", "attach"], [86, 3, 1, "", "simulate_values"]], "ignite.handlers.state_param_scheduler.StepStateScheduler": [[87, 3, 1, "", "get_param"]], "ignite.handlers.stores": [[88, 2, 1, "", "EpochOutputStore"]], "ignite.handlers.stores.EpochOutputStore": [[88, 3, 1, "", "attach"], [88, 4, 1, "", "data"], [88, 3, 1, "", "reset"], [88, 3, 1, "", "store"], [88, 3, 1, "", "update"]], "ignite.handlers.terminate_on_nan": [[89, 2, 1, "", "TerminateOnNan"]], "ignite.handlers.time_profilers": [[90, 2, 1, "", "BasicTimeProfiler"], [91, 2, 1, "", "HandlersTimeProfiler"]], "ignite.handlers.time_profilers.BasicTimeProfiler": [[90, 3, 1, "", "attach"], [90, 3, 1, "", "get_results"], [90, 3, 1, "", "print_results"], [90, 3, 1, "", "write_results"]], "ignite.handlers.time_profilers.HandlersTimeProfiler": [[91, 3, 1, "", "attach"], [91, 3, 1, "", "get_results"], [91, 3, 1, "", "print_results"], [91, 3, 1, "", "write_results"]], "ignite.handlers.timing": [[92, 2, 1, "", "Timer"]], "ignite.handlers.timing.Timer": [[92, 3, 1, "", "attach"], [92, 3, 1, "", "pause"], [92, 3, 1, "", "reset"], [92, 3, 1, "", "resume"], [92, 4, 1, "", "running"], [92, 3, 1, "", "step"], [92, 4, 1, "", "step_count"], [92, 4, 1, "", "total"], [92, 3, 1, "", "value"]], "ignite.metrics": [[93, 2, 1, "", "Accuracy"], [94, 2, 1, "", "Average"], [95, 2, 1, "", "Bleu"], [96, 1, 1, "", "ClassificationReport"], [97, 2, 1, "", "CosineSimilarity"], [98, 1, 1, "", "DiceCoefficient"], [99, 2, 1, "", "EpochMetric"], [100, 2, 1, "", "FID"], [101, 1, 1, "", "Fbeta"], [102, 2, 1, "", "Frequency"], [103, 2, 1, "", "GeometricAverage"], [104, 2, 1, "", "InceptionScore"], [105, 1, 1, "", "IoU"], [106, 1, 1, "", "JaccardIndex"], [107, 2, 1, "", "Loss"], [108, 2, 1, "", "MeanAbsoluteError"], [109, 2, 1, "", "MeanPairwiseDistance"], [110, 2, 1, "", "MeanSquaredError"], [111, 2, 1, "", "MultiLabelConfusionMatrix"], [112, 2, 1, "", "PSNR"], [113, 2, 1, "", "RootMeanSquaredError"], [114, 2, 1, "", "Rouge"], [115, 2, 1, "", "RougeL"], [116, 2, 1, "", "RougeN"], [117, 2, 1, "", "RunningAverage"], [118, 2, 1, "", "SSIM"], [119, 2, 1, "", "TopKCategoricalAccuracy"], [120, 2, 1, "", "VariableAccumulation"], [122, 1, 1, "", "mIoU"]], "ignite.metrics.Accuracy": [[93, 3, 1, "", "compute"], [93, 3, 1, "", "reset"], [93, 3, 1, "", "update"]], "ignite.metrics.Average": [[94, 3, 1, "", "compute"]], "ignite.metrics.Bleu": [[95, 3, 1, "", "compute"], [95, 3, 1, "", "reset"], [95, 3, 1, "", "update"]], "ignite.metrics.CosineSimilarity": [[97, 3, 1, "", "compute"], [97, 3, 1, "", "reset"], [97, 3, 1, "", "update"]], "ignite.metrics.EpochMetric": [[99, 3, 1, "", "compute"], [99, 3, 1, "", "reset"], [99, 3, 1, "", "update"]], "ignite.metrics.FID": [[100, 3, 1, "", "compute"], [100, 3, 1, "", "reset"], [100, 3, 1, "", "update"]], "ignite.metrics.Frequency": [[102, 3, 1, "", "attach"], [102, 3, 1, "", "completed"], [102, 3, 1, "", "compute"], [102, 3, 1, "", "reset"], [102, 3, 1, "", "update"]], "ignite.metrics.GeometricAverage": [[103, 3, 1, "", "compute"]], "ignite.metrics.InceptionScore": [[104, 3, 1, "", "compute"], [104, 3, 1, "", "reset"], [104, 3, 1, "", "update"]], "ignite.metrics.Loss": [[107, 3, 1, "", "compute"], [107, 4, 1, "", "required_output_keys"], [107, 3, 1, "", "reset"], [107, 3, 1, "", "update"]], "ignite.metrics.MeanAbsoluteError": [[108, 3, 1, "", "compute"], [108, 3, 1, "", "reset"], [108, 3, 1, "", "update"]], "ignite.metrics.MeanPairwiseDistance": [[109, 3, 1, "", "compute"], [109, 3, 1, "", "reset"], [109, 3, 1, "", "update"]], "ignite.metrics.MeanSquaredError": [[110, 3, 1, "", "compute"], [110, 3, 1, "", "reset"], [110, 3, 1, "", "update"]], "ignite.metrics.MultiLabelConfusionMatrix": [[111, 3, 1, "", "compute"], [111, 3, 1, "", "reset"], [111, 3, 1, "", "update"]], "ignite.metrics.PSNR": [[112, 3, 1, "", "compute"], [112, 3, 1, "", "reset"], [112, 3, 1, "", "update"]], "ignite.metrics.RootMeanSquaredError": [[113, 3, 1, "", "compute"]], "ignite.metrics.Rouge": [[114, 3, 1, "", "compute"], [114, 3, 1, "", "reset"], [114, 3, 1, "", "update"]], "ignite.metrics.RunningAverage": [[117, 3, 1, "", "attach"], [117, 3, 1, "", "compute"], [117, 3, 1, "", "detach"], [117, 4, 1, "", "required_output_keys"], [117, 3, 1, "", "reset"], [117, 3, 1, "", "update"]], "ignite.metrics.SSIM": [[118, 3, 1, "", "compute"], [118, 3, 1, "", "reset"], [118, 3, 1, "", "update"]], "ignite.metrics.TopKCategoricalAccuracy": [[119, 3, 1, "", "compute"], [119, 3, 1, "", "reset"], [119, 3, 1, "", "update"]], "ignite.metrics.VariableAccumulation": [[120, 3, 1, "", "compute"], [120, 4, 1, "", "required_output_keys"], [120, 3, 1, "", "reset"], [120, 3, 1, "", "update"]], "ignite.metrics.confusion_matrix": [[121, 2, 1, "", "ConfusionMatrix"]], "ignite.metrics.confusion_matrix.ConfusionMatrix": [[121, 3, 1, "", "compute"], [121, 3, 1, "", "normalize"], [121, 3, 1, "", "reset"], [121, 3, 1, "", "update"]], "ignite.metrics.metric": [[129, 2, 1, "", "BatchFiltered"], [129, 2, 1, "", "BatchWise"], [129, 2, 1, "", "EpochWise"], [123, 2, 1, "", "Metric"], [129, 2, 1, "", "MetricUsage"], [129, 2, 1, "", "RunningBatchWise"], [129, 2, 1, "", "RunningEpochWise"], [129, 2, 1, "", "SingleEpochRunningBatchWise"], [129, 1, 1, "", "reinit__is_reduced"], [129, 1, 1, "", "sync_all_reduce"]], "ignite.metrics.metric.BatchWise": [[129, 4, 1, "", "usage_name"]], "ignite.metrics.metric.EpochWise": [[129, 4, 1, "", "usage_name"]], "ignite.metrics.metric.Metric": [[123, 3, 1, "", "attach"], [123, 3, 1, "", "completed"], [123, 3, 1, "", "compute"], [123, 3, 1, "", "detach"], [123, 3, 1, "", "is_attached"], [123, 3, 1, "", "iteration_completed"], [123, 3, 1, "", "load_state_dict"], [123, 4, 1, "", "required_output_keys"], [123, 3, 1, "", "reset"], [123, 3, 1, "", "started"], [123, 3, 1, "", "state_dict"], [123, 3, 1, "", "update"]], "ignite.metrics.metric.RunningBatchWise": [[129, 4, 1, "", "usage_name"]], "ignite.metrics.metric.RunningEpochWise": [[129, 4, 1, "", "usage_name"]], "ignite.metrics.metric.SingleEpochRunningBatchWise": [[129, 4, 1, "", "usage_name"]], "ignite.metrics.metrics_lambda": [[124, 2, 1, "", "MetricsLambda"]], "ignite.metrics.metrics_lambda.MetricsLambda": [[124, 3, 1, "", "attach"], [124, 3, 1, "", "compute"], [124, 3, 1, "", "detach"], [124, 3, 1, "", "is_attached"], [124, 3, 1, "", "reset"], [124, 3, 1, "", "update"]], "ignite.metrics.precision": [[125, 2, 1, "", "Precision"]], "ignite.metrics.precision.Precision": [[125, 3, 1, "", "update"]], "ignite.metrics.recall": [[126, 2, 1, "", "Recall"]], "ignite.metrics.recall.Recall": [[126, 3, 1, "", "update"]], "ignite.utils": [[130, 1, 1, "", "apply_to_tensor"], [130, 1, 1, "", "apply_to_type"], [130, 1, 1, "", "convert_tensor"], [130, 1, 1, "", "hash_checkpoint"], [130, 1, 1, "", "manual_seed"], [130, 1, 1, "", "setup_logger"], [130, 1, 1, "", "to_onehot"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"ignit": [0, 1, 2, 4, 5, 6, 127, 128, 129, 130], "contrib": [0, 1, 2, 128], "engin": [0, 5, 49, 129], "truncat": 0, "backpropag": 0, "throught": 0, "time": [0, 1], "helper": [0, 4, 5, 129], "method": [0, 5], "setup": 0, "trainer": [0, 5], "evalu": [0, 5], "handler": [1, 127], "paramet": [1, 127], "schedul": [1, 127], "deprec": 1, "lr": 1, "finder": 1, "profil": 1, "logger": 1, "metric": [2, 123, 129], "modul": 2, "regress": 2, "distribut": [4, 129], "launcher": 4, "auto": 4, "util": [4, 130], "event": [5, 52], "determinist": 5, "defin": 5, "supervis": 5, "resum": 5, "train": 5, "dataflow": 5, "synchron": 5, "except": 6, "base_logg": 8, "clearml_logg": 9, "mlflow_logg": 10, "neptune_logg": 11, "polyaxon_logg": 12, "tensorboard_logg": 13, "tqdm_logger": 14, "visdom_logg": 15, "wandb_logg": 16, "averageprecis": 17, "cohenkappa": 18, "gpuinfo": 19, "precisionrecallcurv": 20, "roc_auc": 21, "roccurv": 22, "canberrametr": 23, "fractionalabsoluteerror": 24, "fractionalbia": 25, "geometricmeanabsoluteerror": 26, "geometricmeanrelativeabsoluteerror": 27, "manhattandist": 28, "maximumabsoluteerror": 29, "meanabsoluterelativeerror": 30, "meanerror": 31, "meannormalizedbia": 32, "medianabsoluteerror": 33, "medianabsolutepercentageerror": 34, "medianrelativeabsoluteerror": 35, "r2score": 36, "wavehedgesdist": 37, "distributedproxysampl": 38, "auto_dataload": 39, "auto_model": 40, "auto_optim": 41, "parallel": 42, "create_supervised_evalu": 43, "create_supervised_train": 44, "deterministicengin": 45, "reproduciblebatchsampl": 46, "keep_random_st": 47, "update_dataload": 48, "callableeventwithfilt": 50, "eventenum": 51, "eventslist": 53, "removableeventhandl": 54, "state": [55, 127], "supervised_evaluation_step": 56, "supervised_evaluation_step_amp": 57, "supervised_training_step": 58, "supervised_training_step_amp": 59, "supervised_training_step_apex": 60, "supervised_training_step_tpu": 61, "disksav": 62, "timelimit": 63, "basesavehandl": 64, "checkpoint": 65, "modelcheckpoint": 66, "earlystop": 67, "emahandl": 68, "global_step_from_engin": 69, "fastailrfind": 70, "baseparamschedul": 71, "concatschedul": [72, 127], "cosineannealingschedul": [73, 127], "cyclicalschedul": 74, "lrschedul": [75, 127], "linearcyclicalschedul": [76, 127], "paramgroupschedul": 77, "paramschedul": 78, "piecewiselinear": 79, "reducelronplateauschedul": [80, 127], "create_lr_scheduler_with_warmup": 81, "expstateschedul": 82, "lambdastateschedul": 83, "multistepstateschedul": 84, "piecewiselinearstateschedul": 85, "stateparamschedul": 86, "stepstateschedul": 87, "epochoutputstor": 88, "terminateonnan": 89, "basictimeprofil": 90, "handlerstimeprofil": 91, "timer": 92, "accuraci": 93, "averag": 94, "bleu": 95, "classificationreport": 96, "cosinesimilar": 97, "dicecoeffici": 98, "epochmetr": 99, "fid": 100, "fbeta": 101, "frequenc": 102, "geometricaverag": 103, "inceptionscor": 104, "iou": 105, "jaccardindex": 106, "loss": 107, "meanabsoluteerror": 108, "meanpairwisedist": 109, "meansquarederror": 110, "multilabelconfusionmatrix": 111, "psnr": 112, "rootmeansquarederror": 113, "roug": 114, "rougel": 115, "rougen": 116, "runningaverag": 117, "ssim": 118, "topkcategoricalaccuraci": 119, "variableaccumul": 120, "confusionmatrix": 121, "miou": 122, "metricslambda": 124, "precis": 125, "recal": 126, "complet": [127, 129], "list": [127, 129], "more": 127, "exampl": 127, "param_schedul": 127, "piecewis": 127, "linear": 127, "concaten": 127, "torch": 127, "your": 128, "network": 128, "packag": 128, "refer": 128, "attach": 129, "api": 129, "reset": 129, "updat": 129, "comput": 129, "arithmet": 129, "how": 129, "creat": 129, "custom": 129, "its": 129, "usag": 129, "metricusag": 129, "epochwis": 129, "runningepochwis": 129, "batchwis": 129, "runningbatchwis": 129, "singleepochrunningbatchwis": 129, "batchfilt": 129, "reinit__is_reduc": 129, "sync_all_reduc": 129}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ignite.contrib.engines": [[0, "ignite-contrib-engines"]], "Truncated Backpropagation Throught Time": [[0, "module-ignite.contrib.engines.tbptt"]], "Helper methods to setup trainer/evaluator": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.handlers": [[1, "ignite-contrib-handlers"]], "Parameter scheduler [deprecated]": [[1, "parameter-scheduler-deprecated"]], "LR finder [deprecated]": [[1, "lr-finder-deprecated"]], "Time profilers [deprecated]": [[1, "time-profilers-deprecated"]], "Loggers": [[1, "loggers"]], "ignite.contrib.metrics": [[2, "ignite-contrib-metrics"]], "Contrib module metrics": [[2, "contrib-module-metrics"]], "Regression metrics": [[2, "module-ignite.contrib.metrics.regression"]], "ignite.distributed": [[4, "ignite-distributed"]], "Distributed launcher and auto helpers": [[4, "distributed-launcher-and-auto-helpers"]], "ignite.distributed.auto": [[4, "ignite-distributed-auto"]], "ignite.distributed.launcher": [[4, "ignite-distributed-launcher"]], "ignite.distributed.utils": [[4, "ignite-distributed-utils"]], "ignite.engine": [[5, "ignite-engine"]], "ignite.engine.engine": [[5, "ignite-engine-engine"]], "ignite.engine.events": [[5, "ignite-engine-events"]], "ignite.engine.deterministic": [[5, "ignite-engine-deterministic"]], "helper methods to define supervised trainer and evaluator": [[5, "helper-methods-to-define-supervised-trainer-and-evaluator"]], "Resuming the training": [[5, "resuming-the-training"]], "Deterministic training": [[5, "deterministic-training"]], "Dataflow synchronization": [[5, "dataflow-synchronization"]], "ignite.exceptions": [[6, "ignite-exceptions"]], "base_logger": [[8, "module-ignite.contrib.handlers.base_logger"]], "clearml_logger": [[9, "module-ignite.contrib.handlers.clearml_logger"]], "mlflow_logger": [[10, "module-ignite.contrib.handlers.mlflow_logger"]], "neptune_logger": [[11, "module-ignite.contrib.handlers.neptune_logger"]], "polyaxon_logger": [[12, "module-ignite.contrib.handlers.polyaxon_logger"]], "tensorboard_logger": [[13, "module-ignite.contrib.handlers.tensorboard_logger"]], "tqdm_logger": [[14, "module-ignite.contrib.handlers.tqdm_logger"]], "visdom_logger": [[15, "module-ignite.contrib.handlers.visdom_logger"]], "wandb_logger": [[16, "module-ignite.contrib.handlers.wandb_logger"]], "AveragePrecision": [[17, "averageprecision"]], "CohenKappa": [[18, "cohenkappa"]], "GpuInfo": [[19, "gpuinfo"]], "PrecisionRecallCurve": [[20, "precisionrecallcurve"]], "ROC_AUC": [[21, "roc-auc"]], "RocCurve": [[22, "roccurve"]], "CanberraMetric": [[23, "canberrametric"]], "FractionalAbsoluteError": [[24, "fractionalabsoluteerror"]], "FractionalBias": [[25, "fractionalbias"]], "GeometricMeanAbsoluteError": [[26, "geometricmeanabsoluteerror"]], "GeometricMeanRelativeAbsoluteError": [[27, "geometricmeanrelativeabsoluteerror"]], "ManhattanDistance": [[28, "manhattandistance"]], "MaximumAbsoluteError": [[29, "maximumabsoluteerror"]], "MeanAbsoluteRelativeError": [[30, "meanabsoluterelativeerror"]], "MeanError": [[31, "meanerror"]], "MeanNormalizedBias": [[32, "meannormalizedbias"]], "MedianAbsoluteError": [[33, "medianabsoluteerror"]], "MedianAbsolutePercentageError": [[34, "medianabsolutepercentageerror"]], "MedianRelativeAbsoluteError": [[35, "medianrelativeabsoluteerror"]], "R2Score": [[36, "r2score"]], "WaveHedgesDistance": [[37, "wavehedgesdistance"]], "DistributedProxySampler": [[38, "distributedproxysampler"]], "auto_dataloader": [[39, "auto-dataloader"]], "auto_model": [[40, "auto-model"]], "auto_optim": [[41, "auto-optim"]], "Parallel": [[42, "parallel"]], "create_supervised_evaluator": [[43, "create-supervised-evaluator"]], "create_supervised_trainer": [[44, "create-supervised-trainer"]], "DeterministicEngine": [[45, "deterministicengine"]], "ReproducibleBatchSampler": [[46, "reproduciblebatchsampler"]], "keep_random_state": [[47, "keep-random-state"]], "update_dataloader": [[48, "update-dataloader"]], "Engine": [[49, "engine"]], "CallableEventWithFilter": [[50, "callableeventwithfilter"]], "EventEnum": [[51, "eventenum"]], "Events": [[52, "events"]], "EventsList": [[53, "eventslist"]], "RemovableEventHandle": [[54, "removableeventhandle"]], "State": [[55, "state"]], "supervised_evaluation_step": [[56, "supervised-evaluation-step"]], "supervised_evaluation_step_amp": [[57, "supervised-evaluation-step-amp"]], "supervised_training_step": [[58, "supervised-training-step"]], "supervised_training_step_amp": [[59, "supervised-training-step-amp"]], "supervised_training_step_apex": [[60, "supervised-training-step-apex"]], "supervised_training_step_tpu": [[61, "supervised-training-step-tpu"]], "DiskSaver": [[62, "disksaver"]], "TimeLimit": [[63, "timelimit"]], "BaseSaveHandler": [[64, "basesavehandler"]], "Checkpoint": [[65, "checkpoint"]], "ModelCheckpoint": [[66, "modelcheckpoint"]], "EarlyStopping": [[67, "earlystopping"]], "EMAHandler": [[68, "emahandler"]], "global_step_from_engine": [[69, "global-step-from-engine"]], "FastaiLRFinder": [[70, "fastailrfinder"]], "BaseParamScheduler": [[71, "baseparamscheduler"]], "ConcatScheduler": [[72, "concatscheduler"]], "CosineAnnealingScheduler": [[73, "cosineannealingscheduler"]], "CyclicalScheduler": [[74, "cyclicalscheduler"]], "LRScheduler": [[75, "lrscheduler"]], "LinearCyclicalScheduler": [[76, "linearcyclicalscheduler"]], "ParamGroupScheduler": [[77, "paramgroupscheduler"]], "ParamScheduler": [[78, "paramscheduler"]], "PiecewiseLinear": [[79, "piecewiselinear"]], "ReduceLROnPlateauScheduler": [[80, "reducelronplateauscheduler"]], "create_lr_scheduler_with_warmup": [[81, "create-lr-scheduler-with-warmup"]], "ExpStateScheduler": [[82, "expstatescheduler"]], "LambdaStateScheduler": [[83, "lambdastatescheduler"]], "MultiStepStateScheduler": [[84, "multistepstatescheduler"]], "PiecewiseLinearStateScheduler": [[85, "piecewiselinearstatescheduler"]], "StateParamScheduler": [[86, "stateparamscheduler"]], "StepStateScheduler": [[87, "stepstatescheduler"]], "EpochOutputStore": [[88, "epochoutputstore"]], "TerminateOnNan": [[89, "terminateonnan"]], "BasicTimeProfiler": [[90, "basictimeprofiler"]], "HandlersTimeProfiler": [[91, "handlerstimeprofiler"]], "Timer": [[92, "timer"]], "Accuracy": [[93, "accuracy"]], "Average": [[94, "average"]], "Bleu": [[95, "bleu"]], "ClassificationReport": [[96, "classificationreport"]], "CosineSimilarity": [[97, "cosinesimilarity"]], "DiceCoefficient": [[98, "dicecoefficient"]], "EpochMetric": [[99, "epochmetric"]], "FID": [[100, "fid"]], "Fbeta": [[101, "fbeta"]], "Frequency": [[102, "frequency"]], "GeometricAverage": [[103, "geometricaverage"]], "InceptionScore": [[104, "inceptionscore"]], "IoU": [[105, "iou"]], "JaccardIndex": [[106, "jaccardindex"]], "Loss": [[107, "loss"]], "MeanAbsoluteError": [[108, "meanabsoluteerror"]], "MeanPairwiseDistance": [[109, "meanpairwisedistance"]], "MeanSquaredError": [[110, "meansquarederror"]], "MultiLabelConfusionMatrix": [[111, "multilabelconfusionmatrix"]], "PSNR": [[112, "psnr"]], "RootMeanSquaredError": [[113, "rootmeansquarederror"]], "Rouge": [[114, "rouge"]], "RougeL": [[115, "rougel"]], "RougeN": [[116, "rougen"]], "RunningAverage": [[117, "runningaverage"]], "SSIM": [[118, "ssim"]], "TopKCategoricalAccuracy": [[119, "topkcategoricalaccuracy"]], "VariableAccumulation": [[120, "variableaccumulation"]], "ConfusionMatrix": [[121, "confusionmatrix"]], "mIoU": [[122, "miou"]], "Metric": [[123, "metric"]], "MetricsLambda": [[124, "metricslambda"]], "Precision": [[125, "precision"]], "Recall": [[126, "recall"]], "ignite.handlers": [[127, "ignite-handlers"]], "Complete list of handlers": [[127, "complete-list-of-handlers"]], "Parameter scheduler": [[127, "parameter-scheduler"]], "State Parameter scheduler": [[127, "state-parameter-scheduler"]], "More on parameter scheduling": [[127, "more-on-parameter-scheduling"]], "Example with CosineAnnealingScheduler": [[127, "example-with-cosineannealingscheduler"]], "Example with ignite.handlers.param_scheduler.LinearCyclicalScheduler": [[127, "example-with-ignite-handlers-param-scheduler-linearcyclicalscheduler"]], "Example with ignite.handlers.param_scheduler.ConcatScheduler": [[127, "example-with-ignite-handlers-param-scheduler-concatscheduler"]], "Piecewise linear scheduler": [[127, "piecewise-linear-scheduler"]], "Example with ignite.handlers.param_scheduler.LRScheduler": [[127, "example-with-ignite-handlers-param-scheduler-lrscheduler"]], "Concatenate with torch schedulers": [[127, "concatenate-with-torch-schedulers"]], "Example with ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler": [[127, "example-with-ignite-handlers-param-scheduler-reducelronplateauscheduler"]], "Ignite Your Networks!": [[128, "ignite-your-networks"]], "Package Reference": [[128, null]], "Contrib Package Reference": [[128, null]], "ignite.metrics": [[129, "ignite-metrics"]], "Attach Engine API": [[129, "attach-engine-api"]], "Reset, Update, Compute API": [[129, "reset-update-compute-api"]], "Metric arithmetics": [[129, "metric-arithmetics"]], "How to create a custom metric": [[129, "how-to-create-a-custom-metric"]], "Metrics and its usages": [[129, "metrics-and-its-usages"]], "Complete list of usages": [[129, "complete-list-of-usages"]], "Metrics and distributed computations": [[129, "metrics-and-distributed-computations"]], "Complete list of metrics": [[129, "complete-list-of-metrics"]], "Helpers for customizing metrics": [[129, "helpers-for-customizing-metrics"]], "MetricUsage": [[129, "metricusage"]], "EpochWise": [[129, "epochwise"]], "RunningEpochWise": [[129, "runningepochwise"]], "BatchWise": [[129, "batchwise"]], "RunningBatchWise": [[129, "runningbatchwise"]], "SingleEpochRunningBatchWise": [[129, "singleepochrunningbatchwise"]], "BatchFiltered": [[129, "batchfiltered"]], "reinit__is_reduced": [[129, "reinit-is-reduced"]], "sync_all_reduce": [[129, "sync-all-reduce"]], "ignite.utils": [[130, "ignite-utils"]]}, "indexentries": {"tbptt_events (class in ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.Tbptt_Events"]], "add_early_stopping_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.add_early_stopping_by_val_score"]], "create_supervised_tbptt_trainer() (in module ignite.contrib.engines.tbptt)": [[0, "ignite.contrib.engines.tbptt.create_supervised_tbptt_trainer"]], "gen_save_best_models_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.gen_save_best_models_by_val_score"]], "ignite.contrib.engines.common": [[0, "module-ignite.contrib.engines.common"]], "ignite.contrib.engines.tbptt": [[0, "module-ignite.contrib.engines.tbptt"]], "module": [[0, "module-ignite.contrib.engines.common"], [0, "module-ignite.contrib.engines.tbptt"], [2, "module-ignite.contrib.metrics.regression"], [4, "module-ignite.distributed.utils"], [8, "module-ignite.contrib.handlers.base_logger"], [9, "module-ignite.contrib.handlers.clearml_logger"], [10, "module-ignite.contrib.handlers.mlflow_logger"], [11, "module-ignite.contrib.handlers.neptune_logger"], [12, "module-ignite.contrib.handlers.polyaxon_logger"], [13, "module-ignite.contrib.handlers.tensorboard_logger"], [14, "module-ignite.contrib.handlers.tqdm_logger"], [15, "module-ignite.contrib.handlers.visdom_logger"], [16, "module-ignite.contrib.handlers.wandb_logger"], [128, "module-ignite"], [128, "module-ignite.contrib"], [130, "module-ignite.utils"]], "save_best_model_by_val_score() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.save_best_model_by_val_score"]], "setup_any_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_any_logging"]], "setup_clearml_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_clearml_logging"]], "setup_common_distrib_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_distrib_training_handlers"]], "setup_common_training_handlers() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_common_training_handlers"]], "setup_mlflow_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_mlflow_logging"]], "setup_neptune_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_neptune_logging"]], "setup_plx_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_plx_logging"]], "setup_tb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_tb_logging"]], "setup_trains_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_trains_logging"]], "setup_visdom_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_visdom_logging"]], "setup_wandb_logging() (in module ignite.contrib.engines.common)": [[0, "ignite.contrib.engines.common.setup_wandb_logging"]], "ignite.contrib.metrics.regression": [[2, "module-ignite.contrib.metrics.regression"]], "all_gather() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_gather"]], "all_reduce() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.all_reduce"]], "available_backends() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.available_backends"]], "backend() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.backend"]], "barrier() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.barrier"]], "broadcast() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.broadcast"]], "device() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.device"]], "finalize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.finalize"]], "get_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_local_rank"]], "get_nnodes() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nnodes"]], "get_node_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_node_rank"]], "get_nproc_per_node() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_nproc_per_node"]], "get_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_rank"]], "get_world_size() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.get_world_size"]], "has_native_dist_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_native_dist_support"]], "has_xla_support (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.has_xla_support"]], "hostname() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.hostname"]], "ignite.distributed.utils": [[4, "module-ignite.distributed.utils"]], "initialize() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.initialize"]], "model_name() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.model_name"]], "new_group() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.new_group"]], "one_rank_first() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_first"]], "one_rank_only() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.one_rank_only"]], "set_local_rank() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.set_local_rank"]], "show_config() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.show_config"]], "spawn() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.spawn"]], "sync() (in module ignite.distributed.utils)": [[4, "ignite.distributed.utils.sync"]], "notcomputableerror (class in ignite.exceptions)": [[6, "ignite.exceptions.NotComputableError"]], "basehandler (class in ignite.contrib.handlers.base_logger)": [[8, "ignite.contrib.handlers.base_logger.BaseHandler"]], "baselogger (class in ignite.contrib.handlers.base_logger)": [[8, "ignite.contrib.handlers.base_logger.BaseLogger"]], "baseoptimizerparamshandler (class in ignite.contrib.handlers.base_logger)": [[8, "ignite.contrib.handlers.base_logger.BaseOptimizerParamsHandler"]], "baseoutputhandler (class in ignite.contrib.handlers.base_logger)": [[8, "ignite.contrib.handlers.base_logger.BaseOutputHandler"]], "baseweightshandler (class in ignite.contrib.handlers.base_logger)": [[8, "ignite.contrib.handlers.base_logger.BaseWeightsHandler"]], "baseweightsscalarhandler (class in ignite.contrib.handlers.base_logger)": [[8, "ignite.contrib.handlers.base_logger.BaseWeightsScalarHandler"]], "attach() (ignite.contrib.handlers.base_logger.baselogger method)": [[8, "ignite.contrib.handlers.base_logger.BaseLogger.attach"]], "attach_opt_params_handler() (ignite.contrib.handlers.base_logger.baselogger method)": [[8, "ignite.contrib.handlers.base_logger.BaseLogger.attach_opt_params_handler"]], "attach_output_handler() (ignite.contrib.handlers.base_logger.baselogger method)": [[8, "ignite.contrib.handlers.base_logger.BaseLogger.attach_output_handler"]], "ignite.contrib.handlers.base_logger": [[8, "module-ignite.contrib.handlers.base_logger"]], "clearmllogger (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLLogger"]], "clearmlsaver (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLSaver"]], "gradshisthandler (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.OutputHandler"]], "weightshisthandler (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.WeightsScalarHandler"]], "bypass_mode() (ignite.contrib.handlers.clearml_logger.clearmllogger class method)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.bypass_mode"]], "get_local_copy() (ignite.contrib.handlers.clearml_logger.clearmlsaver method)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLSaver.get_local_copy"]], "get_task() (ignite.contrib.handlers.clearml_logger.clearmllogger method)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.get_task"]], "global_step_from_engine() (in module ignite.contrib.handlers.clearml_logger)": [[9, "ignite.contrib.handlers.clearml_logger.global_step_from_engine"]], "ignite.contrib.handlers.clearml_logger": [[9, "module-ignite.contrib.handlers.clearml_logger"]], "remove() (ignite.contrib.handlers.clearml_logger.clearmlsaver method)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLSaver.remove"]], "set_bypass_mode() (ignite.contrib.handlers.clearml_logger.clearmllogger class method)": [[9, "ignite.contrib.handlers.clearml_logger.ClearMLLogger.set_bypass_mode"]], "mlflowlogger (class in ignite.contrib.handlers.mlflow_logger)": [[10, "ignite.contrib.handlers.mlflow_logger.MLflowLogger"]], "optimizerparamshandler (class in ignite.contrib.handlers.mlflow_logger)": [[10, "ignite.contrib.handlers.mlflow_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.mlflow_logger)": [[10, "ignite.contrib.handlers.mlflow_logger.OutputHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.mlflow_logger)": [[10, "ignite.contrib.handlers.mlflow_logger.global_step_from_engine"]], "ignite.contrib.handlers.mlflow_logger": [[10, "module-ignite.contrib.handlers.mlflow_logger"]], "gradsscalarhandler (class in ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.GradsScalarHandler"]], "neptunelogger (class in ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.NeptuneLogger"]], "neptunesaver (class in ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.NeptuneSaver"]], "optimizerparamshandler (class in ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.OutputHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.neptune_logger)": [[11, "ignite.contrib.handlers.neptune_logger.global_step_from_engine"]], "ignite.contrib.handlers.neptune_logger": [[11, "module-ignite.contrib.handlers.neptune_logger"]], "remove() (ignite.contrib.handlers.neptune_logger.neptunesaver method)": [[11, "ignite.contrib.handlers.neptune_logger.NeptuneSaver.remove"]], "optimizerparamshandler (class in ignite.contrib.handlers.polyaxon_logger)": [[12, "ignite.contrib.handlers.polyaxon_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.polyaxon_logger)": [[12, "ignite.contrib.handlers.polyaxon_logger.OutputHandler"]], "polyaxonlogger (class in ignite.contrib.handlers.polyaxon_logger)": [[12, "ignite.contrib.handlers.polyaxon_logger.PolyaxonLogger"]], "global_step_from_engine() (in module ignite.contrib.handlers.polyaxon_logger)": [[12, "ignite.contrib.handlers.polyaxon_logger.global_step_from_engine"]], "ignite.contrib.handlers.polyaxon_logger": [[12, "module-ignite.contrib.handlers.polyaxon_logger"]], "gradshisthandler (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.GradsHistHandler"]], "gradsscalarhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.OutputHandler"]], "tensorboardlogger (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.TensorboardLogger"]], "weightshisthandler (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.WeightsHistHandler"]], "weightsscalarhandler (class in ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.tensorboard_logger)": [[13, "ignite.contrib.handlers.tensorboard_logger.global_step_from_engine"]], "ignite.contrib.handlers.tensorboard_logger": [[13, "module-ignite.contrib.handlers.tensorboard_logger"]], "progressbar (class in ignite.contrib.handlers.tqdm_logger)": [[14, "ignite.contrib.handlers.tqdm_logger.ProgressBar"]], "attach() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[14, "ignite.contrib.handlers.tqdm_logger.ProgressBar.attach"]], "attach_opt_params_handler() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[14, "ignite.contrib.handlers.tqdm_logger.ProgressBar.attach_opt_params_handler"]], "ignite.contrib.handlers.tqdm_logger": [[14, "module-ignite.contrib.handlers.tqdm_logger"]], "log_message() (ignite.contrib.handlers.tqdm_logger.progressbar method)": [[14, "ignite.contrib.handlers.tqdm_logger.ProgressBar.log_message"]], "gradsscalarhandler (class in ignite.contrib.handlers.visdom_logger)": [[15, "ignite.contrib.handlers.visdom_logger.GradsScalarHandler"]], "optimizerparamshandler (class in ignite.contrib.handlers.visdom_logger)": [[15, "ignite.contrib.handlers.visdom_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.visdom_logger)": [[15, "ignite.contrib.handlers.visdom_logger.OutputHandler"]], "visdomlogger (class in ignite.contrib.handlers.visdom_logger)": [[15, "ignite.contrib.handlers.visdom_logger.VisdomLogger"]], "weightsscalarhandler (class in ignite.contrib.handlers.visdom_logger)": [[15, "ignite.contrib.handlers.visdom_logger.WeightsScalarHandler"]], "global_step_from_engine() (in module ignite.contrib.handlers.visdom_logger)": [[15, "ignite.contrib.handlers.visdom_logger.global_step_from_engine"]], "ignite.contrib.handlers.visdom_logger": [[15, "module-ignite.contrib.handlers.visdom_logger"]], "optimizerparamshandler (class in ignite.contrib.handlers.wandb_logger)": [[16, "ignite.contrib.handlers.wandb_logger.OptimizerParamsHandler"]], "outputhandler (class in ignite.contrib.handlers.wandb_logger)": [[16, "ignite.contrib.handlers.wandb_logger.OutputHandler"]], "wandblogger (class in ignite.contrib.handlers.wandb_logger)": [[16, "ignite.contrib.handlers.wandb_logger.WandBLogger"]], "global_step_from_engine() (in module ignite.contrib.handlers.wandb_logger)": [[16, "ignite.contrib.handlers.wandb_logger.global_step_from_engine"]], "ignite.contrib.handlers.wandb_logger": [[16, "module-ignite.contrib.handlers.wandb_logger"]], "averageprecision (class in ignite.contrib.metrics)": [[17, "ignite.contrib.metrics.AveragePrecision"]], "cohenkappa (class in ignite.contrib.metrics)": [[18, "ignite.contrib.metrics.CohenKappa"]], "get_cohen_kappa_fn() (ignite.contrib.metrics.cohenkappa method)": [[18, "ignite.contrib.metrics.CohenKappa.get_cohen_kappa_fn"]], "gpuinfo (class in ignite.contrib.metrics)": [[19, "ignite.contrib.metrics.GpuInfo"]], "attach() (ignite.contrib.metrics.gpuinfo method)": [[19, "ignite.contrib.metrics.GpuInfo.attach"]], "completed() (ignite.contrib.metrics.gpuinfo method)": [[19, "ignite.contrib.metrics.GpuInfo.completed"]], "compute() (ignite.contrib.metrics.gpuinfo method)": [[19, "ignite.contrib.metrics.GpuInfo.compute"]], "reset() (ignite.contrib.metrics.gpuinfo method)": [[19, "ignite.contrib.metrics.GpuInfo.reset"]], "update() (ignite.contrib.metrics.gpuinfo method)": [[19, "ignite.contrib.metrics.GpuInfo.update"]], "precisionrecallcurve (class in ignite.contrib.metrics)": [[20, "ignite.contrib.metrics.PrecisionRecallCurve"]], "compute() (ignite.contrib.metrics.precisionrecallcurve method)": [[20, "ignite.contrib.metrics.PrecisionRecallCurve.compute"]], "roc_auc (class in ignite.contrib.metrics)": [[21, "ignite.contrib.metrics.ROC_AUC"]], "roccurve (class in ignite.contrib.metrics)": [[22, "ignite.contrib.metrics.RocCurve"]], "compute() (ignite.contrib.metrics.roccurve method)": [[22, "ignite.contrib.metrics.RocCurve.compute"]], "canberrametric (class in ignite.contrib.metrics.regression)": [[23, "ignite.contrib.metrics.regression.CanberraMetric"]], "compute() (ignite.contrib.metrics.regression.canberrametric method)": [[23, "ignite.contrib.metrics.regression.CanberraMetric.compute"]], "reset() (ignite.contrib.metrics.regression.canberrametric method)": [[23, "ignite.contrib.metrics.regression.CanberraMetric.reset"]], "fractionalabsoluteerror (class in ignite.contrib.metrics.regression)": [[24, "ignite.contrib.metrics.regression.FractionalAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[24, "ignite.contrib.metrics.regression.FractionalAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalabsoluteerror method)": [[24, "ignite.contrib.metrics.regression.FractionalAbsoluteError.reset"]], "fractionalbias (class in ignite.contrib.metrics.regression)": [[25, "ignite.contrib.metrics.regression.FractionalBias"]], "compute() (ignite.contrib.metrics.regression.fractionalbias method)": [[25, "ignite.contrib.metrics.regression.FractionalBias.compute"]], "reset() (ignite.contrib.metrics.regression.fractionalbias method)": [[25, "ignite.contrib.metrics.regression.FractionalBias.reset"]], "geometricmeanabsoluteerror (class in ignite.contrib.metrics.regression)": [[26, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[26, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanabsoluteerror method)": [[26, "ignite.contrib.metrics.regression.GeometricMeanAbsoluteError.reset"]], "geometricmeanrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[27, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[27, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.geometricmeanrelativeabsoluteerror method)": [[27, "ignite.contrib.metrics.regression.GeometricMeanRelativeAbsoluteError.reset"]], "manhattandistance (class in ignite.contrib.metrics.regression)": [[28, "ignite.contrib.metrics.regression.ManhattanDistance"]], "compute() (ignite.contrib.metrics.regression.manhattandistance method)": [[28, "ignite.contrib.metrics.regression.ManhattanDistance.compute"]], "reset() (ignite.contrib.metrics.regression.manhattandistance method)": [[28, "ignite.contrib.metrics.regression.ManhattanDistance.reset"]], "maximumabsoluteerror (class in ignite.contrib.metrics.regression)": [[29, "ignite.contrib.metrics.regression.MaximumAbsoluteError"]], "compute() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[29, "ignite.contrib.metrics.regression.MaximumAbsoluteError.compute"]], "reset() (ignite.contrib.metrics.regression.maximumabsoluteerror method)": [[29, "ignite.contrib.metrics.regression.MaximumAbsoluteError.reset"]], "meanabsoluterelativeerror (class in ignite.contrib.metrics.regression)": [[30, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError"]], "compute() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[30, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.compute"]], "reset() (ignite.contrib.metrics.regression.meanabsoluterelativeerror method)": [[30, "ignite.contrib.metrics.regression.MeanAbsoluteRelativeError.reset"]], "meanerror (class in ignite.contrib.metrics.regression)": [[31, "ignite.contrib.metrics.regression.MeanError"]], "compute() (ignite.contrib.metrics.regression.meanerror method)": [[31, "ignite.contrib.metrics.regression.MeanError.compute"]], "reset() (ignite.contrib.metrics.regression.meanerror method)": [[31, "ignite.contrib.metrics.regression.MeanError.reset"]], "meannormalizedbias (class in ignite.contrib.metrics.regression)": [[32, "ignite.contrib.metrics.regression.MeanNormalizedBias"]], "compute() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[32, "ignite.contrib.metrics.regression.MeanNormalizedBias.compute"]], "reset() (ignite.contrib.metrics.regression.meannormalizedbias method)": [[32, "ignite.contrib.metrics.regression.MeanNormalizedBias.reset"]], "medianabsoluteerror (class in ignite.contrib.metrics.regression)": [[33, "ignite.contrib.metrics.regression.MedianAbsoluteError"]], "medianabsolutepercentageerror (class in ignite.contrib.metrics.regression)": [[34, "ignite.contrib.metrics.regression.MedianAbsolutePercentageError"]], "medianrelativeabsoluteerror (class in ignite.contrib.metrics.regression)": [[35, "ignite.contrib.metrics.regression.MedianRelativeAbsoluteError"]], "r2score (class in ignite.contrib.metrics.regression)": [[36, "ignite.contrib.metrics.regression.R2Score"]], "compute() (ignite.contrib.metrics.regression.r2score method)": [[36, "ignite.contrib.metrics.regression.R2Score.compute"]], "reset() (ignite.contrib.metrics.regression.r2score method)": [[36, "ignite.contrib.metrics.regression.R2Score.reset"]], "wavehedgesdistance (class in ignite.contrib.metrics.regression)": [[37, "ignite.contrib.metrics.regression.WaveHedgesDistance"]], "compute() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[37, "ignite.contrib.metrics.regression.WaveHedgesDistance.compute"]], "reset() (ignite.contrib.metrics.regression.wavehedgesdistance method)": [[37, "ignite.contrib.metrics.regression.WaveHedgesDistance.reset"]], "distributedproxysampler (class in ignite.distributed.auto)": [[38, "ignite.distributed.auto.DistributedProxySampler"]], "auto_dataloader() (in module ignite.distributed.auto)": [[39, "ignite.distributed.auto.auto_dataloader"]], "auto_model() (in module ignite.distributed.auto)": [[40, "ignite.distributed.auto.auto_model"]], "auto_optim() (in module ignite.distributed.auto)": [[41, "ignite.distributed.auto.auto_optim"]], "parallel (class in ignite.distributed.launcher)": [[42, "ignite.distributed.launcher.Parallel"]], "run() (ignite.distributed.launcher.parallel method)": [[42, "ignite.distributed.launcher.Parallel.run"]], "create_supervised_evaluator() (in module ignite.engine)": [[43, "ignite.engine.create_supervised_evaluator"]], "create_supervised_trainer() (in module ignite.engine)": [[44, "ignite.engine.create_supervised_trainer"]], "deterministicengine (class in ignite.engine.deterministic)": [[45, "ignite.engine.deterministic.DeterministicEngine"]], "state_dict() (ignite.engine.deterministic.deterministicengine method)": [[45, "ignite.engine.deterministic.DeterministicEngine.state_dict"]], "reproduciblebatchsampler (class in ignite.engine.deterministic)": [[46, "ignite.engine.deterministic.ReproducibleBatchSampler"]], "setup_batch_indices() (ignite.engine.deterministic.reproduciblebatchsampler method)": [[46, "ignite.engine.deterministic.ReproducibleBatchSampler.setup_batch_indices"]], "keep_random_state() (in module ignite.engine.deterministic)": [[47, "ignite.engine.deterministic.keep_random_state"]], "update_dataloader() (in module ignite.engine.deterministic)": [[48, "ignite.engine.deterministic.update_dataloader"]], "engine (class in ignite.engine.engine)": [[49, "ignite.engine.engine.Engine"]], "add_event_handler() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.add_event_handler"]], "fire_event() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.fire_event"]], "has_event_handler() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.has_event_handler"]], "interrupt() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.interrupt"]], "last_event_name (ignite.engine.engine.engine attribute)": [[49, "ignite.engine.engine.Engine.last_event_name"]], "load_state_dict() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.load_state_dict"]], "on() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.on"]], "register_events() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.register_events"]], "remove_event_handler() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.remove_event_handler"]], "run() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.run"]], "set_data() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.set_data"]], "state (ignite.engine.engine.engine attribute)": [[49, "ignite.engine.engine.Engine.state"]], "state_dict() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.state_dict"]], "terminate() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.terminate"]], "terminate_epoch() (ignite.engine.engine.engine method)": [[49, "ignite.engine.engine.Engine.terminate_epoch"]], "callableeventwithfilter (class in ignite.engine.events)": [[50, "ignite.engine.events.CallableEventWithFilter"]], "before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[50, "ignite.engine.events.CallableEventWithFilter.before_and_after_event_filter"]], "default_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[50, "ignite.engine.events.CallableEventWithFilter.default_event_filter"]], "every_before_and_after_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[50, "ignite.engine.events.CallableEventWithFilter.every_before_and_after_event_filter"]], "every_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[50, "ignite.engine.events.CallableEventWithFilter.every_event_filter"]], "name (ignite.engine.events.callableeventwithfilter attribute)": [[50, "ignite.engine.events.CallableEventWithFilter.name"]], "once_event_filter() (ignite.engine.events.callableeventwithfilter static method)": [[50, "ignite.engine.events.CallableEventWithFilter.once_event_filter"]], "value (ignite.engine.events.callableeventwithfilter attribute)": [[50, "ignite.engine.events.CallableEventWithFilter.value"]], "eventenum (class in ignite.engine.events)": [[51, "ignite.engine.events.EventEnum"]], "completed (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.COMPLETED"]], "dataloader_stop_iteration (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.DATALOADER_STOP_ITERATION"]], "epoch_completed (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.EPOCH_COMPLETED"]], "epoch_started (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.EPOCH_STARTED"]], "exception_raised (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.EXCEPTION_RAISED"]], "events (class in ignite.engine.events)": [[52, "ignite.engine.events.Events"]], "get_batch_completed (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.GET_BATCH_COMPLETED"]], "get_batch_started (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.GET_BATCH_STARTED"]], "interrupt (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.INTERRUPT"]], "iteration_completed (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.ITERATION_COMPLETED"]], "iteration_started (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.ITERATION_STARTED"]], "started (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.STARTED"]], "terminate (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.TERMINATE"]], "terminate_single_epoch (ignite.engine.events.events attribute)": [[52, "ignite.engine.events.Events.TERMINATE_SINGLE_EPOCH"]], "eventslist (class in ignite.engine.events)": [[53, "ignite.engine.events.EventsList"]], "removableeventhandle (class in ignite.engine.events)": [[54, "ignite.engine.events.RemovableEventHandle"]], "remove() (ignite.engine.events.removableeventhandle method)": [[54, "ignite.engine.events.RemovableEventHandle.remove"]], "state (class in ignite.engine.events)": [[55, "ignite.engine.events.State"]], "get_event_attrib_value() (ignite.engine.events.state method)": [[55, "ignite.engine.events.State.get_event_attrib_value"]], "supervised_evaluation_step() (in module ignite.engine)": [[56, "ignite.engine.supervised_evaluation_step"]], "supervised_evaluation_step_amp() (in module ignite.engine)": [[57, "ignite.engine.supervised_evaluation_step_amp"]], "supervised_training_step() (in module ignite.engine)": [[58, "ignite.engine.supervised_training_step"]], "supervised_training_step_amp() (in module ignite.engine)": [[59, "ignite.engine.supervised_training_step_amp"]], "supervised_training_step_apex() (in module ignite.engine)": [[60, "ignite.engine.supervised_training_step_apex"]], "supervised_training_step_tpu() (in module ignite.engine)": [[61, "ignite.engine.supervised_training_step_tpu"]], "disksaver (class in ignite.handlers)": [[62, "ignite.handlers.DiskSaver"]], "remove() (ignite.handlers.disksaver method)": [[62, "ignite.handlers.DiskSaver.remove"]], "timelimit (class in ignite.handlers)": [[63, "ignite.handlers.TimeLimit"]], "basesavehandler (class in ignite.handlers.checkpoint)": [[64, "ignite.handlers.checkpoint.BaseSaveHandler"]], "__call__() (ignite.handlers.checkpoint.basesavehandler method)": [[64, "ignite.handlers.checkpoint.BaseSaveHandler.__call__"]], "remove() (ignite.handlers.checkpoint.basesavehandler method)": [[64, "ignite.handlers.checkpoint.BaseSaveHandler.remove"]], "checkpoint (class in ignite.handlers.checkpoint)": [[65, "ignite.handlers.checkpoint.Checkpoint"]], "checkpoint.item (class in ignite.handlers.checkpoint)": [[65, "ignite.handlers.checkpoint.Checkpoint.Item"]], "filename (ignite.handlers.checkpoint.checkpoint.item attribute)": [[65, "ignite.handlers.checkpoint.Checkpoint.Item.filename"]], "get_default_score_fn() (ignite.handlers.checkpoint.checkpoint static method)": [[65, "ignite.handlers.checkpoint.Checkpoint.get_default_score_fn"]], "load_objects() (ignite.handlers.checkpoint.checkpoint static method)": [[65, "ignite.handlers.checkpoint.Checkpoint.load_objects"]], "load_state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[65, "ignite.handlers.checkpoint.Checkpoint.load_state_dict"]], "priority (ignite.handlers.checkpoint.checkpoint.item attribute)": [[65, "ignite.handlers.checkpoint.Checkpoint.Item.priority"]], "reload_objects() (ignite.handlers.checkpoint.checkpoint method)": [[65, "ignite.handlers.checkpoint.Checkpoint.reload_objects"]], "reset() (ignite.handlers.checkpoint.checkpoint method)": [[65, "ignite.handlers.checkpoint.Checkpoint.reset"]], "setup_filename_pattern() (ignite.handlers.checkpoint.checkpoint static method)": [[65, "ignite.handlers.checkpoint.Checkpoint.setup_filename_pattern"]], "state_dict() (ignite.handlers.checkpoint.checkpoint method)": [[65, "ignite.handlers.checkpoint.Checkpoint.state_dict"]], "modelcheckpoint (class in ignite.handlers.checkpoint)": [[66, "ignite.handlers.checkpoint.ModelCheckpoint"]], "earlystopping (class in ignite.handlers.early_stopping)": [[67, "ignite.handlers.early_stopping.EarlyStopping"]], "load_state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[67, "ignite.handlers.early_stopping.EarlyStopping.load_state_dict"]], "state_dict() (ignite.handlers.early_stopping.earlystopping method)": [[67, "ignite.handlers.early_stopping.EarlyStopping.state_dict"]], "emahandler (class in ignite.handlers.ema_handler)": [[68, "ignite.handlers.ema_handler.EMAHandler"]], "attach() (ignite.handlers.ema_handler.emahandler method)": [[68, "ignite.handlers.ema_handler.EMAHandler.attach"]], "ema_model (ignite.handlers.ema_handler.emahandler attribute)": [[68, "ignite.handlers.ema_handler.EMAHandler.ema_model"]], "handle_buffers (ignite.handlers.ema_handler.emahandler attribute)": [[68, "ignite.handlers.ema_handler.EMAHandler.handle_buffers"]], "model (ignite.handlers.ema_handler.emahandler attribute)": [[68, "ignite.handlers.ema_handler.EMAHandler.model"]], "momentum (ignite.handlers.ema_handler.emahandler attribute)": [[68, "ignite.handlers.ema_handler.EMAHandler.momentum"]], "global_step_from_engine() (in module ignite.handlers)": [[69, "ignite.handlers.global_step_from_engine"]], "fastailrfinder (class in ignite.handlers.lr_finder)": [[70, "ignite.handlers.lr_finder.FastaiLRFinder"]], "apply_suggested_lr() (ignite.handlers.lr_finder.fastailrfinder method)": [[70, "ignite.handlers.lr_finder.FastaiLRFinder.apply_suggested_lr"]], "attach() (ignite.handlers.lr_finder.fastailrfinder method)": [[70, "ignite.handlers.lr_finder.FastaiLRFinder.attach"]], "get_results() (ignite.handlers.lr_finder.fastailrfinder method)": [[70, "ignite.handlers.lr_finder.FastaiLRFinder.get_results"]], "lr_suggestion() (ignite.handlers.lr_finder.fastailrfinder method)": [[70, "ignite.handlers.lr_finder.FastaiLRFinder.lr_suggestion"]], "plot() (ignite.handlers.lr_finder.fastailrfinder method)": [[70, "ignite.handlers.lr_finder.FastaiLRFinder.plot"]], "baseparamscheduler (class in ignite.handlers.param_scheduler)": [[71, "ignite.handlers.param_scheduler.BaseParamScheduler"]], "get_param() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[71, "ignite.handlers.param_scheduler.BaseParamScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[71, "ignite.handlers.param_scheduler.BaseParamScheduler.load_state_dict"]], "plot_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[71, "ignite.handlers.param_scheduler.BaseParamScheduler.plot_values"]], "simulate_values() (ignite.handlers.param_scheduler.baseparamscheduler class method)": [[71, "ignite.handlers.param_scheduler.BaseParamScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.baseparamscheduler method)": [[71, "ignite.handlers.param_scheduler.BaseParamScheduler.state_dict"]], "concatscheduler (class in ignite.handlers.param_scheduler)": [[72, "ignite.handlers.param_scheduler.ConcatScheduler"]], "get_param() (ignite.handlers.param_scheduler.concatscheduler method)": [[72, "ignite.handlers.param_scheduler.ConcatScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[72, "ignite.handlers.param_scheduler.ConcatScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.concatscheduler class method)": [[72, "ignite.handlers.param_scheduler.ConcatScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.concatscheduler method)": [[72, "ignite.handlers.param_scheduler.ConcatScheduler.state_dict"]], "cosineannealingscheduler (class in ignite.handlers.param_scheduler)": [[73, "ignite.handlers.param_scheduler.CosineAnnealingScheduler"]], "get_param() (ignite.handlers.param_scheduler.cosineannealingscheduler method)": [[73, "ignite.handlers.param_scheduler.CosineAnnealingScheduler.get_param"]], "cyclicalscheduler (class in ignite.handlers.param_scheduler)": [[74, "ignite.handlers.param_scheduler.CyclicalScheduler"]], "lrscheduler (class in ignite.handlers.param_scheduler)": [[75, "ignite.handlers.param_scheduler.LRScheduler"]], "get_param() (ignite.handlers.param_scheduler.lrscheduler method)": [[75, "ignite.handlers.param_scheduler.LRScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.lrscheduler class method)": [[75, "ignite.handlers.param_scheduler.LRScheduler.simulate_values"]], "linearcyclicalscheduler (class in ignite.handlers.param_scheduler)": [[76, "ignite.handlers.param_scheduler.LinearCyclicalScheduler"]], "get_param() (ignite.handlers.param_scheduler.linearcyclicalscheduler method)": [[76, "ignite.handlers.param_scheduler.LinearCyclicalScheduler.get_param"]], "paramgroupscheduler (class in ignite.handlers.param_scheduler)": [[77, "ignite.handlers.param_scheduler.ParamGroupScheduler"]], "get_param() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[77, "ignite.handlers.param_scheduler.ParamGroupScheduler.get_param"]], "load_state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[77, "ignite.handlers.param_scheduler.ParamGroupScheduler.load_state_dict"]], "simulate_values() (ignite.handlers.param_scheduler.paramgroupscheduler class method)": [[77, "ignite.handlers.param_scheduler.ParamGroupScheduler.simulate_values"]], "state_dict() (ignite.handlers.param_scheduler.paramgroupscheduler method)": [[77, "ignite.handlers.param_scheduler.ParamGroupScheduler.state_dict"]], "paramscheduler (class in ignite.handlers.param_scheduler)": [[78, "ignite.handlers.param_scheduler.ParamScheduler"]], "simulate_values() (ignite.handlers.param_scheduler.paramscheduler class method)": [[78, "ignite.handlers.param_scheduler.ParamScheduler.simulate_values"]], "piecewiselinear (class in ignite.handlers.param_scheduler)": [[79, "ignite.handlers.param_scheduler.PiecewiseLinear"]], "get_param() (ignite.handlers.param_scheduler.piecewiselinear method)": [[79, "ignite.handlers.param_scheduler.PiecewiseLinear.get_param"]], "reducelronplateauscheduler (class in ignite.handlers.param_scheduler)": [[80, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler"]], "get_param() (ignite.handlers.param_scheduler.reducelronplateauscheduler method)": [[80, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.get_param"]], "simulate_values() (ignite.handlers.param_scheduler.reducelronplateauscheduler class method)": [[80, "ignite.handlers.param_scheduler.ReduceLROnPlateauScheduler.simulate_values"]], "create_lr_scheduler_with_warmup() (in module ignite.handlers.param_scheduler)": [[81, "ignite.handlers.param_scheduler.create_lr_scheduler_with_warmup"]], "expstatescheduler (class in ignite.handlers.state_param_scheduler)": [[82, "ignite.handlers.state_param_scheduler.ExpStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.expstatescheduler method)": [[82, "ignite.handlers.state_param_scheduler.ExpStateScheduler.get_param"]], "lambdastatescheduler (class in ignite.handlers.state_param_scheduler)": [[83, "ignite.handlers.state_param_scheduler.LambdaStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.lambdastatescheduler method)": [[83, "ignite.handlers.state_param_scheduler.LambdaStateScheduler.get_param"]], "multistepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[84, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.multistepstatescheduler method)": [[84, "ignite.handlers.state_param_scheduler.MultiStepStateScheduler.get_param"]], "piecewiselinearstatescheduler (class in ignite.handlers.state_param_scheduler)": [[85, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.piecewiselinearstatescheduler method)": [[85, "ignite.handlers.state_param_scheduler.PiecewiseLinearStateScheduler.get_param"]], "stateparamscheduler (class in ignite.handlers.state_param_scheduler)": [[86, "ignite.handlers.state_param_scheduler.StateParamScheduler"]], "attach() (ignite.handlers.state_param_scheduler.stateparamscheduler method)": [[86, "ignite.handlers.state_param_scheduler.StateParamScheduler.attach"]], "simulate_values() (ignite.handlers.state_param_scheduler.stateparamscheduler class method)": [[86, "ignite.handlers.state_param_scheduler.StateParamScheduler.simulate_values"]], "stepstatescheduler (class in ignite.handlers.state_param_scheduler)": [[87, "ignite.handlers.state_param_scheduler.StepStateScheduler"]], "get_param() (ignite.handlers.state_param_scheduler.stepstatescheduler method)": [[87, "ignite.handlers.state_param_scheduler.StepStateScheduler.get_param"]], "epochoutputstore (class in ignite.handlers.stores)": [[88, "ignite.handlers.stores.EpochOutputStore"]], "attach() (ignite.handlers.stores.epochoutputstore method)": [[88, "ignite.handlers.stores.EpochOutputStore.attach"]], "data (ignite.handlers.stores.epochoutputstore attribute)": [[88, "ignite.handlers.stores.EpochOutputStore.data"]], "reset() (ignite.handlers.stores.epochoutputstore method)": [[88, "ignite.handlers.stores.EpochOutputStore.reset"]], "store() (ignite.handlers.stores.epochoutputstore method)": [[88, "ignite.handlers.stores.EpochOutputStore.store"]], "update() (ignite.handlers.stores.epochoutputstore method)": [[88, "ignite.handlers.stores.EpochOutputStore.update"]], "terminateonnan (class in ignite.handlers.terminate_on_nan)": [[89, "ignite.handlers.terminate_on_nan.TerminateOnNan"]], "basictimeprofiler (class in ignite.handlers.time_profilers)": [[90, "ignite.handlers.time_profilers.BasicTimeProfiler"]], "attach() (ignite.handlers.time_profilers.basictimeprofiler method)": [[90, "ignite.handlers.time_profilers.BasicTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[90, "ignite.handlers.time_profilers.BasicTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.basictimeprofiler static method)": [[90, "ignite.handlers.time_profilers.BasicTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.basictimeprofiler method)": [[90, "ignite.handlers.time_profilers.BasicTimeProfiler.write_results"]], "handlerstimeprofiler (class in ignite.handlers.time_profilers)": [[91, "ignite.handlers.time_profilers.HandlersTimeProfiler"]], "attach() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[91, "ignite.handlers.time_profilers.HandlersTimeProfiler.attach"]], "get_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[91, "ignite.handlers.time_profilers.HandlersTimeProfiler.get_results"]], "print_results() (ignite.handlers.time_profilers.handlerstimeprofiler static method)": [[91, "ignite.handlers.time_profilers.HandlersTimeProfiler.print_results"]], "write_results() (ignite.handlers.time_profilers.handlerstimeprofiler method)": [[91, "ignite.handlers.time_profilers.HandlersTimeProfiler.write_results"]], "timer (class in ignite.handlers.timing)": [[92, "ignite.handlers.timing.Timer"]], "attach() (ignite.handlers.timing.timer method)": [[92, "ignite.handlers.timing.Timer.attach"]], "pause() (ignite.handlers.timing.timer method)": [[92, "ignite.handlers.timing.Timer.pause"]], "reset() (ignite.handlers.timing.timer method)": [[92, "ignite.handlers.timing.Timer.reset"]], "resume() (ignite.handlers.timing.timer method)": [[92, "ignite.handlers.timing.Timer.resume"]], "running (ignite.handlers.timing.timer attribute)": [[92, "ignite.handlers.timing.Timer.running"]], "step() (ignite.handlers.timing.timer method)": [[92, "ignite.handlers.timing.Timer.step"]], "step_count (ignite.handlers.timing.timer attribute)": [[92, "ignite.handlers.timing.Timer.step_count"]], "total (ignite.handlers.timing.timer attribute)": [[92, "ignite.handlers.timing.Timer.total"]], "value() (ignite.handlers.timing.timer method)": [[92, "ignite.handlers.timing.Timer.value"]], "accuracy (class in ignite.metrics)": [[93, "ignite.metrics.Accuracy"]], "compute() (ignite.metrics.accuracy method)": [[93, "ignite.metrics.Accuracy.compute"]], "reset() (ignite.metrics.accuracy method)": [[93, "ignite.metrics.Accuracy.reset"]], "update() (ignite.metrics.accuracy method)": [[93, "ignite.metrics.Accuracy.update"]], "average (class in ignite.metrics)": [[94, "ignite.metrics.Average"]], "compute() (ignite.metrics.average method)": [[94, "ignite.metrics.Average.compute"]], "bleu (class in ignite.metrics)": [[95, "ignite.metrics.Bleu"]], "compute() (ignite.metrics.bleu method)": [[95, "ignite.metrics.Bleu.compute"]], "reset() (ignite.metrics.bleu method)": [[95, "ignite.metrics.Bleu.reset"]], "update() (ignite.metrics.bleu method)": [[95, "ignite.metrics.Bleu.update"]], "classificationreport() (in module ignite.metrics)": [[96, "ignite.metrics.ClassificationReport"]], "cosinesimilarity (class in ignite.metrics)": [[97, "ignite.metrics.CosineSimilarity"]], "compute() (ignite.metrics.cosinesimilarity method)": [[97, "ignite.metrics.CosineSimilarity.compute"]], "reset() (ignite.metrics.cosinesimilarity method)": [[97, "ignite.metrics.CosineSimilarity.reset"]], "update() (ignite.metrics.cosinesimilarity method)": [[97, "ignite.metrics.CosineSimilarity.update"]], "dicecoefficient() (in module ignite.metrics)": [[98, "ignite.metrics.DiceCoefficient"]], "epochmetric (class in ignite.metrics)": [[99, "ignite.metrics.EpochMetric"]], "compute() (ignite.metrics.epochmetric method)": [[99, "ignite.metrics.EpochMetric.compute"]], "reset() (ignite.metrics.epochmetric method)": [[99, "ignite.metrics.EpochMetric.reset"]], "update() (ignite.metrics.epochmetric method)": [[99, "ignite.metrics.EpochMetric.update"]], "fid (class in ignite.metrics)": [[100, "ignite.metrics.FID"]], "compute() (ignite.metrics.fid method)": [[100, "ignite.metrics.FID.compute"]], "reset() (ignite.metrics.fid method)": [[100, "ignite.metrics.FID.reset"]], "update() (ignite.metrics.fid method)": [[100, "ignite.metrics.FID.update"]], "fbeta() (in module ignite.metrics)": [[101, "ignite.metrics.Fbeta"]], "frequency (class in ignite.metrics)": [[102, "ignite.metrics.Frequency"]], "attach() (ignite.metrics.frequency method)": [[102, "ignite.metrics.Frequency.attach"]], "completed() (ignite.metrics.frequency method)": [[102, "ignite.metrics.Frequency.completed"]], "compute() (ignite.metrics.frequency method)": [[102, "ignite.metrics.Frequency.compute"]], "reset() (ignite.metrics.frequency method)": [[102, "ignite.metrics.Frequency.reset"]], "update() (ignite.metrics.frequency method)": [[102, "ignite.metrics.Frequency.update"]], "geometricaverage (class in ignite.metrics)": [[103, "ignite.metrics.GeometricAverage"]], "compute() (ignite.metrics.geometricaverage method)": [[103, "ignite.metrics.GeometricAverage.compute"]], "inceptionscore (class in ignite.metrics)": [[104, "ignite.metrics.InceptionScore"]], "compute() (ignite.metrics.inceptionscore method)": [[104, "ignite.metrics.InceptionScore.compute"]], "reset() (ignite.metrics.inceptionscore method)": [[104, "ignite.metrics.InceptionScore.reset"]], "update() (ignite.metrics.inceptionscore method)": [[104, "ignite.metrics.InceptionScore.update"]], "iou() (in module ignite.metrics)": [[105, "ignite.metrics.IoU"]], "jaccardindex() (in module ignite.metrics)": [[106, "ignite.metrics.JaccardIndex"]], "loss (class in ignite.metrics)": [[107, "ignite.metrics.Loss"]], "compute() (ignite.metrics.loss method)": [[107, "ignite.metrics.Loss.compute"]], "required_output_keys (ignite.metrics.loss attribute)": [[107, "ignite.metrics.Loss.required_output_keys"]], "reset() (ignite.metrics.loss method)": [[107, "ignite.metrics.Loss.reset"]], "update() (ignite.metrics.loss method)": [[107, "ignite.metrics.Loss.update"]], "meanabsoluteerror (class in ignite.metrics)": [[108, "ignite.metrics.MeanAbsoluteError"]], "compute() (ignite.metrics.meanabsoluteerror method)": [[108, "ignite.metrics.MeanAbsoluteError.compute"]], "reset() (ignite.metrics.meanabsoluteerror method)": [[108, "ignite.metrics.MeanAbsoluteError.reset"]], "update() (ignite.metrics.meanabsoluteerror method)": [[108, "ignite.metrics.MeanAbsoluteError.update"]], "meanpairwisedistance (class in ignite.metrics)": [[109, "ignite.metrics.MeanPairwiseDistance"]], "compute() (ignite.metrics.meanpairwisedistance method)": [[109, "ignite.metrics.MeanPairwiseDistance.compute"]], "reset() (ignite.metrics.meanpairwisedistance method)": [[109, "ignite.metrics.MeanPairwiseDistance.reset"]], "update() (ignite.metrics.meanpairwisedistance method)": [[109, "ignite.metrics.MeanPairwiseDistance.update"]], "meansquarederror (class in ignite.metrics)": [[110, "ignite.metrics.MeanSquaredError"]], "compute() (ignite.metrics.meansquarederror method)": [[110, "ignite.metrics.MeanSquaredError.compute"]], "reset() (ignite.metrics.meansquarederror method)": [[110, "ignite.metrics.MeanSquaredError.reset"]], "update() (ignite.metrics.meansquarederror method)": [[110, "ignite.metrics.MeanSquaredError.update"]], "multilabelconfusionmatrix (class in ignite.metrics)": [[111, "ignite.metrics.MultiLabelConfusionMatrix"]], "compute() (ignite.metrics.multilabelconfusionmatrix method)": [[111, "ignite.metrics.MultiLabelConfusionMatrix.compute"]], "reset() (ignite.metrics.multilabelconfusionmatrix method)": [[111, "ignite.metrics.MultiLabelConfusionMatrix.reset"]], "update() (ignite.metrics.multilabelconfusionmatrix method)": [[111, "ignite.metrics.MultiLabelConfusionMatrix.update"]], "psnr (class in ignite.metrics)": [[112, "ignite.metrics.PSNR"]], "compute() (ignite.metrics.psnr method)": [[112, "ignite.metrics.PSNR.compute"]], "reset() (ignite.metrics.psnr method)": [[112, "ignite.metrics.PSNR.reset"]], "update() (ignite.metrics.psnr method)": [[112, "ignite.metrics.PSNR.update"]], "rootmeansquarederror (class in ignite.metrics)": [[113, "ignite.metrics.RootMeanSquaredError"]], "compute() (ignite.metrics.rootmeansquarederror method)": [[113, "ignite.metrics.RootMeanSquaredError.compute"]], "rouge (class in ignite.metrics)": [[114, "ignite.metrics.Rouge"]], "compute() (ignite.metrics.rouge method)": [[114, "ignite.metrics.Rouge.compute"]], "reset() (ignite.metrics.rouge method)": [[114, "ignite.metrics.Rouge.reset"]], "update() (ignite.metrics.rouge method)": [[114, "ignite.metrics.Rouge.update"]], "rougel (class in ignite.metrics)": [[115, "ignite.metrics.RougeL"]], "rougen (class in ignite.metrics)": [[116, "ignite.metrics.RougeN"]], "runningaverage (class in ignite.metrics)": [[117, "ignite.metrics.RunningAverage"]], "attach() (ignite.metrics.runningaverage method)": [[117, "ignite.metrics.RunningAverage.attach"]], "compute() (ignite.metrics.runningaverage method)": [[117, "ignite.metrics.RunningAverage.compute"]], "detach() (ignite.metrics.runningaverage method)": [[117, "ignite.metrics.RunningAverage.detach"]], "required_output_keys (ignite.metrics.runningaverage attribute)": [[117, "ignite.metrics.RunningAverage.required_output_keys"]], "reset() (ignite.metrics.runningaverage method)": [[117, "ignite.metrics.RunningAverage.reset"]], "update() (ignite.metrics.runningaverage method)": [[117, "ignite.metrics.RunningAverage.update"]], "ssim (class in ignite.metrics)": [[118, "ignite.metrics.SSIM"]], "compute() (ignite.metrics.ssim method)": [[118, "ignite.metrics.SSIM.compute"]], "reset() (ignite.metrics.ssim method)": [[118, "ignite.metrics.SSIM.reset"]], "update() (ignite.metrics.ssim method)": [[118, "ignite.metrics.SSIM.update"]], "topkcategoricalaccuracy (class in ignite.metrics)": [[119, "ignite.metrics.TopKCategoricalAccuracy"]], "compute() (ignite.metrics.topkcategoricalaccuracy method)": [[119, "ignite.metrics.TopKCategoricalAccuracy.compute"]], "reset() (ignite.metrics.topkcategoricalaccuracy method)": [[119, "ignite.metrics.TopKCategoricalAccuracy.reset"]], "update() (ignite.metrics.topkcategoricalaccuracy method)": [[119, "ignite.metrics.TopKCategoricalAccuracy.update"]], "variableaccumulation (class in ignite.metrics)": [[120, "ignite.metrics.VariableAccumulation"]], "compute() (ignite.metrics.variableaccumulation method)": [[120, "ignite.metrics.VariableAccumulation.compute"]], "required_output_keys (ignite.metrics.variableaccumulation attribute)": [[120, "ignite.metrics.VariableAccumulation.required_output_keys"]], "reset() (ignite.metrics.variableaccumulation method)": [[120, "ignite.metrics.VariableAccumulation.reset"]], "update() (ignite.metrics.variableaccumulation method)": [[120, "ignite.metrics.VariableAccumulation.update"]], "confusionmatrix (class in ignite.metrics.confusion_matrix)": [[121, "ignite.metrics.confusion_matrix.ConfusionMatrix"]], "compute() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[121, "ignite.metrics.confusion_matrix.ConfusionMatrix.compute"]], "normalize() (ignite.metrics.confusion_matrix.confusionmatrix static method)": [[121, "ignite.metrics.confusion_matrix.ConfusionMatrix.normalize"]], "reset() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[121, "ignite.metrics.confusion_matrix.ConfusionMatrix.reset"]], "update() (ignite.metrics.confusion_matrix.confusionmatrix method)": [[121, "ignite.metrics.confusion_matrix.ConfusionMatrix.update"]], "miou() (in module ignite.metrics)": [[122, "ignite.metrics.mIoU"]], "metric (class in ignite.metrics.metric)": [[123, "ignite.metrics.metric.Metric"]], "attach() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.attach"]], "completed() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.completed"]], "compute() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.compute"]], "detach() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.detach"]], "is_attached() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.is_attached"]], "iteration_completed() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.iteration_completed"]], "load_state_dict() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.load_state_dict"]], "required_output_keys (ignite.metrics.metric.metric attribute)": [[123, "ignite.metrics.metric.Metric.required_output_keys"]], "reset() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.reset"]], "started() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.started"]], "state_dict() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.state_dict"]], "update() (ignite.metrics.metric.metric method)": [[123, "ignite.metrics.metric.Metric.update"]], "metricslambda (class in ignite.metrics.metrics_lambda)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda"]], "attach() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.attach"]], "compute() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.compute"]], "detach() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.detach"]], "is_attached() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.is_attached"]], "reset() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.reset"]], "update() (ignite.metrics.metrics_lambda.metricslambda method)": [[124, "ignite.metrics.metrics_lambda.MetricsLambda.update"]], "precision (class in ignite.metrics.precision)": [[125, "ignite.metrics.precision.Precision"]], "update() (ignite.metrics.precision.precision method)": [[125, "ignite.metrics.precision.Precision.update"]], "recall (class in ignite.metrics.recall)": [[126, "ignite.metrics.recall.Recall"]], "update() (ignite.metrics.recall.recall method)": [[126, "ignite.metrics.recall.Recall.update"]], "ignite": [[128, "module-ignite"]], "ignite.contrib": [[128, "module-ignite.contrib"]], "batchfiltered (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.BatchFiltered"]], "batchwise (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.BatchWise"]], "epochwise (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.EpochWise"]], "metricusage (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.MetricUsage"]], "runningbatchwise (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.RunningBatchWise"]], "runningepochwise (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.RunningEpochWise"]], "singleepochrunningbatchwise (class in ignite.metrics.metric)": [[129, "ignite.metrics.metric.SingleEpochRunningBatchWise"]], "reinit__is_reduced() (in module ignite.metrics.metric)": [[129, "ignite.metrics.metric.reinit__is_reduced"]], "sync_all_reduce() (in module ignite.metrics.metric)": [[129, "ignite.metrics.metric.sync_all_reduce"]], "usage_name (ignite.metrics.metric.batchwise attribute)": [[129, "ignite.metrics.metric.BatchWise.usage_name"]], "usage_name (ignite.metrics.metric.epochwise attribute)": [[129, "ignite.metrics.metric.EpochWise.usage_name"]], "usage_name (ignite.metrics.metric.runningbatchwise attribute)": [[129, "ignite.metrics.metric.RunningBatchWise.usage_name"]], "usage_name (ignite.metrics.metric.runningepochwise attribute)": [[129, "ignite.metrics.metric.RunningEpochWise.usage_name"]], "usage_name (ignite.metrics.metric.singleepochrunningbatchwise attribute)": [[129, "ignite.metrics.metric.SingleEpochRunningBatchWise.usage_name"]], "apply_to_tensor() (in module ignite.utils)": [[130, "ignite.utils.apply_to_tensor"]], "apply_to_type() (in module ignite.utils)": [[130, "ignite.utils.apply_to_type"]], "convert_tensor() (in module ignite.utils)": [[130, "ignite.utils.convert_tensor"]], "hash_checkpoint() (in module ignite.utils)": [[130, "ignite.utils.hash_checkpoint"]], "ignite.utils": [[130, "module-ignite.utils"]], "manual_seed() (in module ignite.utils)": [[130, "ignite.utils.manual_seed"]], "setup_logger() (in module ignite.utils)": [[130, "ignite.utils.setup_logger"]], "to_onehot() (in module ignite.utils)": [[130, "ignite.utils.to_onehot"]]}})